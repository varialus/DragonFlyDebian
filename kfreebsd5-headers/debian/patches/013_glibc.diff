diff -ur src.old/sys/net/if.h src/sys/net/if.h
--- src.old/sys/net/if.h	2004-11-30 01:22:43.000000000 +0100
+++ src/sys/net/if.h	2004-11-30 01:22:54.000000000 +0100
@@ -44,7 +44,6 @@
 #include <sys/types.h>
 #include <sys/socket.h>
 
-#if __BSD_VISIBLE
 /*
  * <net/if.h> does not depend on <sys/time.h> on most other systems.  This
  * helps userland compatibility.  (struct timeval ifi_lastchange)
@@ -54,7 +53,6 @@
 #endif
 
 struct ifnet;
-#endif
 
 /*
  * Length of interface external name, including terminating '\0'.
diff -ur src.old/sys/netinet6/in6.h src/sys/netinet6/in6.h
--- src.old/sys/netinet6/in6.h	2004-11-30 01:19:35.000000000 +0100
+++ src/sys/netinet6/in6.h	2004-11-30 01:22:54.000000000 +0100
@@ -68,7 +68,14 @@
 #ifndef _NETINET6_IN6_H_
 #define _NETINET6_IN6_H_
 
-#include <sys/types.h>
+#include <sys/types.h>		/* size_t, __socklen_t */
+
+#if defined(__USE_BSD) || defined(__USE_XOPEN)
+# include <unistd.h>	  	/* socklen_t */
+#else
+typedef __socklen_t socklen_t;
+#endif
+
 
 /*
  * Identification of the network protocol stack
@@ -113,17 +120,6 @@
 #define	IPV6PORT_RESERVEDMAX	(IPV6PORT_RESERVED-1)
 #endif
 
-/*
- * IPv6 address
- */
-struct in6_addr {
-	union {
-		uint8_t		__u6_addr8[16];
-		uint16_t	__u6_addr16[8];
-		uint32_t	__u6_addr32[4];
-	} __u6_addr;			/* 128-bit IP6 address */
-};
-
 #ifdef _KERNEL	/* XXX nonstandard */
 #define s6_addr8  __u6_addr.__u6_addr8
 #define s6_addr16 __u6_addr.__u6_addr16
@@ -137,22 +133,6 @@
  */
 
 /*
- * Socket address for IPv6
- */
-#if __BSD_VISIBLE
-#define SIN6_LEN
-#endif
-
-struct sockaddr_in6 {
-	uint8_t		sin6_len;	/* length of this struct */
-	sa_family_t	sin6_family;	/* AF_INET6 */
-	in_port_t	sin6_port;	/* Transport layer port # */
-	uint32_t	sin6_flowinfo;	/* IP6 flow information */
-	struct in6_addr	sin6_addr;	/* IP6 address */
-	uint32_t	sin6_scope_id;	/* scope zone index */
-};
-
-/*
  * Local definition for masks
  */
 #ifdef _KERNEL	/* XXX nonstandard */
@@ -419,22 +399,6 @@
 #define IPV6_DEFAULT_MULTICAST_LOOP 1	/* normally hear sends if a member */
 
 /*
- * Argument structure for IPV6_JOIN_GROUP and IPV6_LEAVE_GROUP.
- */
-struct ipv6_mreq {
-	struct in6_addr	ipv6mr_multiaddr;
-	unsigned int	ipv6mr_interface;
-};
-
-/*
- * IPV6_PKTINFO: Packet information(RFC2292 sec 5)
- */
-struct in6_pktinfo {
-	struct in6_addr	ipi6_addr;	/* src/dst IPv6 address */
-	unsigned int	ipi6_ifindex;	/* send/recv interface index */
-};
-
-/*
  * Control structure for IPV6_RECVPATHMTU socket option.
  */
 struct ip6_mtuinfo {
@@ -543,16 +507,6 @@
 extern int	(*faithprefix_p)(struct in6_addr *);
 #endif /* _KERNEL */
 
-#ifndef _SIZE_T_DECLARED
-typedef	__size_t	size_t;
-#define	_SIZE_T_DECLARED
-#endif
-
-#ifndef _SOCKLEN_T_DECLARED
-typedef	__socklen_t	socklen_t;
-#define	_SOCKLEN_T_DECLARED
-#endif
-
 #if __BSD_VISIBLE
 
 __BEGIN_DECLS
Only in src.old/sys/netinet6: in6.h.orig
diff -ur src.old/sys/sys/cdefs.h src/sys/sys/cdefs.h
--- src.old/sys/sys/cdefs.h	2004-08-13 02:53:40.000000000 +0200
+++ src/sys/sys/cdefs.h	2004-11-30 01:22:54.000000000 +0100
@@ -362,109 +362,6 @@
 #define	__DEQUALIFY(type, var)	((type)(uintptr_t)(const volatile void *)(var))
 #endif
 
-/*-
- * The following definitions are an extension of the behavior originally
- * implemented in <sys/_posix.h>, but with a different level of granularity.
- * POSIX.1 requires that the macros we test be defined before any standard
- * header file is included.
- *
- * Here's a quick run-down of the versions:
- *  defined(_POSIX_SOURCE)		1003.1-1988
- *  _POSIX_C_SOURCE == 1		1003.1-1990
- *  _POSIX_C_SOURCE == 2		1003.2-1992 C Language Binding Option
- *  _POSIX_C_SOURCE == 199309		1003.1b-1993
- *  _POSIX_C_SOURCE == 199506		1003.1c-1995, 1003.1i-1995,
- *					and the omnibus ISO/IEC 9945-1: 1996
- *  _POSIX_C_SOURCE == 200112		1003.1-2001
- *
- * In addition, the X/Open Portability Guide, which is now the Single UNIX
- * Specification, defines a feature-test macro which indicates the version of
- * that specification, and which subsumes _POSIX_C_SOURCE.
- *
- * Our macros begin with two underscores to avoid namespace screwage.
- */
-
-/* Deal with IEEE Std. 1003.1-1990, in which _POSIX_C_SOURCE == 1. */
-#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 1
-#undef _POSIX_C_SOURCE		/* Probably illegal, but beyond caring now. */
-#define	_POSIX_C_SOURCE		199009
-#endif
-
-/* Deal with IEEE Std. 1003.2-1992, in which _POSIX_C_SOURCE == 2. */
-#if defined(_POSIX_C_SOURCE) && _POSIX_C_SOURCE == 2
-#undef _POSIX_C_SOURCE
-#define	_POSIX_C_SOURCE		199209
-#endif
-
-/* Deal with various X/Open Portability Guides and Single UNIX Spec. */
-#ifdef _XOPEN_SOURCE
-#if _XOPEN_SOURCE - 0 >= 600
-#define	__XSI_VISIBLE		600
-#undef _POSIX_C_SOURCE
-#define	_POSIX_C_SOURCE		200112
-#elif _XOPEN_SOURCE - 0 >= 500
-#define	__XSI_VISIBLE		500
-#undef _POSIX_C_SOURCE
-#define	_POSIX_C_SOURCE		199506
-#endif
-#endif
-
-/*
- * Deal with all versions of POSIX.  The ordering relative to the tests above is
- * important.
- */
-#if defined(_POSIX_SOURCE) && !defined(_POSIX_C_SOURCE)
-#define	_POSIX_C_SOURCE		198808
-#endif
-#ifdef _POSIX_C_SOURCE
-#if _POSIX_C_SOURCE >= 200112
-#define	__POSIX_VISIBLE		200112
-#define	__ISO_C_VISIBLE		1999
-#elif _POSIX_C_SOURCE >= 199506
-#define	__POSIX_VISIBLE		199506
-#define	__ISO_C_VISIBLE		1990
-#elif _POSIX_C_SOURCE >= 199309
-#define	__POSIX_VISIBLE		199309
-#define	__ISO_C_VISIBLE		1990
-#elif _POSIX_C_SOURCE >= 199209
-#define	__POSIX_VISIBLE		199209
-#define	__ISO_C_VISIBLE		1990
-#elif _POSIX_C_SOURCE >= 199009
-#define	__POSIX_VISIBLE		199009
-#define	__ISO_C_VISIBLE		1990
-#else
-#define	__POSIX_VISIBLE		198808
-#define	__ISO_C_VISIBLE		0
-#endif /* _POSIX_C_SOURCE */
-#else
-/*-
- * Deal with _ANSI_SOURCE:
- * If it is defined, and no other compilation environment is explicitly
- * requested, then define our internal feature-test macros to zero.  This
- * makes no difference to the preprocessor (undefined symbols in preprocessing
- * expressions are defined to have value zero), but makes it more convenient for
- * a test program to print out the values.
- *
- * If a program mistakenly defines _ANSI_SOURCE and some other macro such as
- * _POSIX_C_SOURCE, we will assume that it wants the broader compilation
- * environment (and in fact we will never get here).
- */
-#if defined(_ANSI_SOURCE)	/* Hide almost everything. */
-#define	__POSIX_VISIBLE		0
-#define	__XSI_VISIBLE		0
-#define	__BSD_VISIBLE		0
-#define	__ISO_C_VISIBLE		1990
-#elif defined(_C99_SOURCE)	/* Localism to specify strict C99 env. */
-#define	__POSIX_VISIBLE		0
-#define	__XSI_VISIBLE		0
-#define	__BSD_VISIBLE		0
-#define	__ISO_C_VISIBLE		1999
-#else				/* Default environment: show everything. */
-#define	__POSIX_VISIBLE		200112
-#define	__XSI_VISIBLE		600
-#define	__BSD_VISIBLE		1
-#define	__ISO_C_VISIBLE		1999
-#endif
-#endif
+#include <features.h>
 
 #endif /* !_SYS_CDEFS_H_ */
Only in src.old/sys/sys: ioctl_compat.h.orig
diff -ur src.old/sys/sys/limits.h src/sys/sys/limits.h
--- src.old/sys/sys/limits.h	2004-04-07 06:19:49.000000000 +0200
+++ src/sys/sys/limits.h	2004-11-30 01:22:54.000000000 +0100
@@ -34,39 +34,8 @@
 
 #include <sys/cdefs.h>
 #include <machine/_limits.h>
+#include <limits.h>
 
-#define	CHAR_BIT	__CHAR_BIT	/* number of bits in a char */
-
-#define	SCHAR_MAX	__SCHAR_MAX	/* max value for a signed char */
-#define	SCHAR_MIN	__SCHAR_MIN	/* min value for a signed char */
-
-#define	UCHAR_MAX	__UCHAR_MAX	/* max value for an unsigned char */
-
-#ifdef __CHAR_UNSIGNED__
-#define	CHAR_MAX	UCHAR_MAX	/* max value for a char */
-#define	CHAR_MIN	0		/* min value for a char */
-#else
-#define	CHAR_MAX	SCHAR_MAX
-#define	CHAR_MIN	SCHAR_MIN
-#endif
-
-#define	USHRT_MAX	__USHRT_MAX	/* max value for an unsigned short */
-#define	SHRT_MAX	__SHRT_MAX	/* max value for a short */
-#define	SHRT_MIN	__SHRT_MIN	/* min value for a short */
-
-#define	UINT_MAX	__UINT_MAX	/* max value for an unsigned int */
-#define	INT_MAX		__INT_MAX	/* max value for an int */
-#define	INT_MIN		__INT_MIN	/* min value for an int */
-
-#define	ULONG_MAX	__ULONG_MAX	/* max for an unsigned long */
-#define	LONG_MAX	__LONG_MAX	/* max for a long */
-#define	LONG_MIN	__LONG_MIN	/* min for a long */
-
-#ifdef __LONG_LONG_SUPPORTED
-#define	ULLONG_MAX	__ULLONG_MAX	/* max for an unsigned long long */
-#define	LLONG_MAX	__LLONG_MAX	/* max for a long long */
-#define	LLONG_MIN	__LLONG_MIN	/* min for a long long */
-#endif
 
 #if __POSIX_VISIBLE || __XSI_VISIBLE
 #define	SSIZE_MAX	__SSIZE_MAX	/* max value for an ssize_t */
diff -ur src.old/sys/sys/mount.h src/sys/sys/mount.h
--- src.old/sys/sys/mount.h	2004-11-30 01:22:43.000000000 +0100
+++ src/sys/sys/mount.h	2004-11-30 01:22:54.000000000 +0100
@@ -41,8 +41,6 @@
 #include <sys/_mutex.h>
 #endif
 
-typedef struct fsid { int32_t val[2]; } fsid_t;	/* filesystem id type */
-
 /*
  * File identifier.
  * These are unique per filesystem on a single machine.
diff -ur src.old/sys/sys/syslimits.h src/sys/sys/syslimits.h
--- src.old/sys/sys/syslimits.h	2004-11-30 01:05:19.000000000 +0100
+++ src/sys/sys/syslimits.h	2004-11-30 01:23:49.000000000 +0100
@@ -33,12 +33,6 @@
 #ifndef _SYS_SYSLIMITS_H_
 #define _SYS_SYSLIMITS_H_
 
-#if !defined(_KERNEL) && !defined(_LIMITS_H_) && !defined(_SYS_PARAM_H_)
-#if defined(__GNUC__) || defined(__INTEL_COMPILER)
-#warning "No user-serviceable parts inside."
-#endif
-#endif
-
 /*
  * Do not add any new variables here.  (See the comment at the end of
  * the file for why.)
Only in src.old/sys/vm: vm_param.h.orig
