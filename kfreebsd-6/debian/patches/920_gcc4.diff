--- src/sys/fs/ntfs/ntfs.h.orig	2008-01-29 15:06:36.000000000 +0100
+++ src/sys/fs/ntfs/ntfs.h	2008-01-30 05:52:22.000000000 +0100
@@ -25,7 +25,7 @@
  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
  * SUCH DAMAGE.
  *
- * $FreeBSD: src/sys/fs/ntfs/ntfs.h,v 1.19 2004/12/06 20:22:16 phk Exp $
+ * $FreeBSD: src/sys/fs/ntfs/ntfs.h,v 1.20 2005/09/11 15:57:07 rodrigc Exp $
  */
 
 /*#define NTFS_DEBUG 1*/
@@ -285,7 +285,6 @@
 #define	ntfs_bpbl	(daddr_t)((ntmp)->ntm_bps)
 
 #ifdef MALLOC_DECLARE
-MALLOC_DECLARE(M_NTFSMNT);
 MALLOC_DECLARE(M_NTFSNTNODE);
 MALLOC_DECLARE(M_NTFSFNODE);
 MALLOC_DECLARE(M_NTFSDIR);
--- src/sys/conf/kern.pre.mk.orig	2008-01-29 15:06:42.000000000 +0100
+++ src/sys/conf/kern.pre.mk	2008-01-30 05:57:22.000000000 +0100
@@ -46,7 +46,7 @@
 NOSTDINC= -nostdinc
 .endif
 
-INCLUDES= ${NOSTDINC} -I- ${INCLMAGIC} -I. -I$S
+INCLUDES= ${NOSTDINC} ${INCLMAGIC} -I. -I$S
 
 # This hack lets us use the OpenBSD altq code without spamming a new
 # include path into contrib'ed source files.
--- src/sys/conf/kmod.mk.orig	2008-01-29 15:06:42.000000000 +0100
+++ src/sys/conf/kmod.mk	2008-01-30 05:57:29.000000000 +0100
@@ -87,7 +87,7 @@
 .else
 NOSTDINC=	-nostdinc
 .endif
-CFLAGS:=	${CFLAGS:N-I*} ${NOSTDINC} -I- ${INCLMAGIC} ${CFLAGS:M-I*}
+CFLAGS:=	${CFLAGS:N-I*} ${NOSTDINC} ${INCLMAGIC} ${CFLAGS:M-I*}
 .if defined(KERNBUILDDIR)
 CFLAGS+=	-DHAVE_KERNEL_OPTION_HEADERS -include ${KERNBUILDDIR}/opt_global.h
 .endif
--- src/sys/kern/kern_tc.c.orig	2008-01-30 06:18:10.000000000 +0100
+++ src/sys/kern/kern_tc.c	2008-01-30 06:17:38.000000000 +0100
@@ -61,7 +61,7 @@
 	struct timehands	*th_next;
 };
 
-extern struct timehands th0;
+static struct timehands th0;
 static struct timehands th9 = { NULL, 0, 0, 0, {0, 0}, {0, 0}, {0, 0}, 0, &th0};
 static struct timehands th8 = { NULL, 0, 0, 0, {0, 0}, {0, 0}, {0, 0}, 0, &th9};
 static struct timehands th7 = { NULL, 0, 0, 0, {0, 0}, {0, 0}, {0, 0}, 0, &th8};
--- src/sys/sys/proc.h.orig	2008-01-30 06:24:23.000000000 +0100
+++ src/sys/sys/proc.h	2008-01-30 06:24:28.000000000 +0100
@@ -857,7 +857,6 @@
 extern int nprocs, maxproc;		/* Current and max number of procs. */
 extern int maxprocperuid;		/* Max procs per uid. */
 extern u_long ps_arg_cache_limit;
-extern int sched_quantum;		/* Scheduling quantum in ticks. */
 
 LIST_HEAD(proclist, proc);
 TAILQ_HEAD(procqueue, proc);
--- src/sys/net/rtsock.c.orig	2008-01-30 06:34:14.000000000 +0100
+++ src/sys/net/rtsock.c	2008-01-30 06:34:21.000000000 +0100
@@ -1262,7 +1262,7 @@
  * Definitions of protocols supported in the ROUTE domain.
  */
 
-extern struct domain routedomain;		/* or at least forward */
+static struct domain routedomain;		/* or at least forward */
 
 static struct protosw routesw[] = {
 {
--- src/sys/sys/protosw.h.orig	2008-01-30 06:45:55.000000000 +0100
+++ src/sys/sys/protosw.h	2008-01-30 06:46:13.000000000 +0100
@@ -249,7 +249,6 @@
  * The dummy protocol specific user requests function pointer array is
  * initialized to the functions below.  All functions return EOPNOTSUPP.
  */
-extern	struct pr_usrreqs nousrreqs;
 
 int	pru_abort_notsupp(struct socket *so);
 int	pru_accept_notsupp(struct socket *so, struct sockaddr **nam);
--- src/sys/netinet/in_proto.c.orig	2008-01-30 06:53:33.000000000 +0100
+++ src/sys/netinet/in_proto.c	2008-01-30 06:53:48.000000000 +0100
@@ -69,6 +69,8 @@
  * TCP/IP protocol family: IP, ICMP, UDP, TCP.
  */
 
+static struct pr_usrreqs nousrreqs;
+
 #ifdef IPSEC
 #include <netinet6/ipsec.h>
 #include <netinet6/ah.h>
--- src/sys/netinet6/pim6_var.h.orig	2008-01-30 07:01:04.000000000 +0100
+++ src/sys/netinet6/pim6_var.h	2008-01-30 07:01:09.000000000 +0100
@@ -52,8 +52,6 @@
 };
 
 #if (defined(KERNEL)) || (defined(_KERNEL))
-extern struct pim6stat pim6stat;
-
 int pim6_input __P((struct mbuf **, int*, int));
 #endif /* KERNEL */

--- src/sys/net/zlib.c.orig	2008-01-31 17:09:43.000000000 +0100
+++ src/sys/net/zlib.c	2008-01-31 17:09:50.000000000 +0100
@@ -94,7 +94,7 @@
 typedef ush FAR ushf;
 typedef unsigned long  ulg;
 
-extern const char *z_errmsg[10]; /* indexed by 2-zlib_error */
+static const char *z_errmsg[10]; /* indexed by 2-zlib_error */
 /* (size given to avoid silly warnings with Visual C++) */
 
 #define ERR_MSG(err) z_errmsg[Z_NEED_DICT-(err)]
--- src/sys/amd64/include/md_var.h.orig	2008-01-31 23:25:08.000000000 +0100
+++ src/sys/amd64/include/md_var.h	2008-01-31 23:25:12.000000000 +0100
@@ -57,8 +57,6 @@
 extern	uint64_t *vm_page_dump;
 extern	int	vm_page_dump_size;
 
-extern	struct pcpu __pcpu[];
-
 typedef void alias_for_inthand_t(u_int cs, u_int ef, u_int esp, u_int ss);
 struct	thread;
 struct	reg;
--- src/sys/modules/fdc/Makefile.orig	2008-01-31 23:35:35.000000000 +0100
+++ src/sys/modules/fdc/Makefile	2008-01-31 23:35:38.000000000 +0100
@@ -1,7 +1,6 @@
 # $FreeBSD: src/sys/modules/fdc/Makefile,v 1.14 2005/05/10 12:02:15 nyan Exp $
 
 KMOD=	fdc
-WARNS?=	2
 
 .if ${MACHINE} == "pc98"
 .PATH:  ${.CURDIR}/../../pc98/cbus
--- src/sys/modules/cpufreq/Makefile.orig	2008-01-31 23:35:21.000000000 +0100
+++ src/sys/modules/cpufreq/Makefile	2008-01-31 23:35:27.000000000 +0100
@@ -4,7 +4,6 @@
 	${.CURDIR}/../../${MACHINE_ARCH}/cpufreq
 
 KMOD=	cpufreq
-WARNS?=	2
 SRCS=	ichss.c
 SRCS+=	bus_if.h cpufreq_if.h device_if.h pci_if.h
 
--- src/sys/fs/fdescfs/fdesc_vnops.c.orig	2008-02-01 00:17:41.000000000 +0100
+++ src/sys/fs/fdescfs/fdesc_vnops.c	2008-02-01 00:17:57.000000000 +0100
@@ -74,7 +74,19 @@
 static vop_reclaim_t	fdesc_reclaim;
 static vop_setattr_t	fdesc_setattr;
 
-extern struct vop_vector fdesc_vnodeops;
+static struct vop_vector fdesc_vnodeops = {
+	.vop_default =		&default_vnodeops,
+
+	.vop_access =		VOP_NULL,
+	.vop_getattr =		fdesc_getattr,
+	.vop_inactive =		fdesc_inactive,
+	.vop_lookup =		fdesc_lookup,
+	.vop_open =		fdesc_open,
+	.vop_pathconf =		vop_stdpathconf,
+	.vop_readdir =		fdesc_readdir,
+	.vop_reclaim =		fdesc_reclaim,
+	.vop_setattr =		fdesc_setattr,
+};
 
 /*
  * Initialise cache headers
@@ -516,16 +528,3 @@
 	return (0);
 }
 
-static struct vop_vector fdesc_vnodeops = {
-	.vop_default =		&default_vnodeops,
-
-	.vop_access =		VOP_NULL,
-	.vop_getattr =		fdesc_getattr,
-	.vop_inactive =		fdesc_inactive,
-	.vop_lookup =		fdesc_lookup,
-	.vop_open =		fdesc_open,
-	.vop_pathconf =		vop_stdpathconf,
-	.vop_readdir =		fdesc_readdir,
-	.vop_reclaim =		fdesc_reclaim,
-	.vop_setattr =		fdesc_setattr,
-};
--- src/sys/dev/iicbus/iicbus.c.orig	2008-02-01 00:26:25.000000000 +0100
+++ src/sys/dev/iicbus/iicbus.c	2008-02-01 00:26:38.000000000 +0100
@@ -45,8 +45,6 @@
 
 #define DEVTOIICBUS(dev) ((struct iicbus_device*)device_get_ivars(dev))
 
-static devclass_t iicbus_devclass;
-
 /* See comments below for why auto-scanning is a bad idea. */
 #define SCAN_IICBUS 0
 
@@ -194,6 +192,8 @@
 	return (IIC_ENOTSUPP);
 }
 
+devclass_t iicbus_devclass;
+
 DRIVER_MODULE(iicbus, pcf, iicbus_driver, iicbus_devclass, 0, 0);
 DRIVER_MODULE(iicbus, envctrl, iicbus_driver, iicbus_devclass, 0, 0);
 DRIVER_MODULE(iicbus, iicbb, iicbus_driver, iicbus_devclass, 0, 0);
--- src/sys/amd64/include/smp.h.orig	2008-02-01 10:37:18.000000000 +0100
+++ src/sys/amd64/include/smp.h	2008-02-01 10:37:27.000000000 +0100
@@ -23,6 +23,7 @@
 #include <machine/frame.h>
 #include <machine/intr_machdep.h>
 #include <machine/apicvar.h>
+#include <machine/pcb.h>
 
 /* global symbols in mpboot.S */
 extern char			mptramp_start[];
--- src/sys/amd64/amd64/mp_machdep.c.orig	2008-02-01 11:27:17.000000000 +0100
+++ src/sys/amd64/amd64/mp_machdep.c	2008-02-01 11:27:32.000000000 +0100
@@ -82,6 +82,8 @@
 int	boot_cpu_id = -1;	/* designated BSP */
 extern	int nkpt;
 
+extern  struct pcpu __pcpu[];
+
 /*
  * CPU topology map datastructures for HTT.
  */
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ src/sys/libkern/memset.c	2008-02-01 17:26:42.000000000 +0100
@@ -0,0 +1,40 @@
+/*-
+ * Copyright (C) 1992-2007 The FreeBSD Project. All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY AUTHOR AND CONTRIBUTORS ``AS IS'' AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED.  IN NO EVENT SHALL AUTHOR OR CONTRIBUTORS BE LIABLE
+ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
+ * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
+ * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
+ * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+ * SUCH DAMAGE.
+ */
+#include <sys/cdefs.h>
+#include <sys/types.h>
+__FBSDID("$FreeBSD: src/sys/libkern/memset.c,v 1.2 2007/04/06 00:06:26 kan Exp $");
+
+void *memset(void *, int, size_t);
+
+
+void *
+memset(void *b, int c, size_t len)
+{
+	char *bb;
+
+	for (bb = (char *)b; len--; )
+		*bb++ = c;
+	return (b);
+}
--- src/sys/conf/files.i386.orig	2008-02-01 17:27:21.000000000 +0100
+++ src/sys/conf/files.i386	2008-02-01 17:28:44.000000000 +0100
@@ -435,6 +435,7 @@
 libkern/divdi3.c		standard
 libkern/ffsl.c			standard
 libkern/flsl.c			standard
+libkern/memset.c		standard
 libkern/moddi3.c		standard
 libkern/qdivrem.c		standard
 libkern/ucmpdi2.c		standard
--- src/sys/conf/files.amd64.orig	2008-02-01 17:27:11.000000000 +0100
+++ src/sys/conf/files.amd64	2008-02-01 17:29:45.000000000 +0100
@@ -234,3 +234,5 @@
 i386/cpufreq/powernow.c		optional	cpufreq
 i386/cpufreq/est.c		optional	cpufreq
 i386/cpufreq/p4tcc.c		optional	cpufreq
+#
+libkern/memset.c		standard
--- src/sys/modules/acpi/acpi/Makefile.orig	2008-02-01 22:17:07.000000000 +0100
+++ src/sys/modules/acpi/acpi/Makefile	2008-02-01 22:17:16.000000000 +0100
@@ -15,7 +15,6 @@
        ${.CURDIR}/../../../${MACHINE_ARCH}/acpica
 
 KMOD=	acpi
-WARNS?=	2
 
 # ACPI CA sources
 CFLAGS+=   -I${.CURDIR}/../../../contrib/dev/acpica
