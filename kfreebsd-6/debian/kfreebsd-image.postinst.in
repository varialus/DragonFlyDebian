#! /bin/bash
# postinst script
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#

case "$1" in
    configure)
	for i in kernel.gz acpi.ko ; do
		if test -e /boot/kernel/$i && ! test -L /boot/kernel/$i ; then
			echo "What happen!! /boot/kernel/$i exists but is not a symlink."
			exit 1
		fi
	done

	if [ "$(readlink -f /boot/kernel/kernel.gz)" != "/boot/kfreebsd-@RELEASE@.gz" ] ; then
		rm -f /boot/kernel/kernel{,.gz}.old{,.gz}
		if [ -L /boot/kernel/kernel.gz ] ; then
			mv /boot/kernel/kernel{,.old}.gz
		fi
		ln -s /boot/kfreebsd-@RELEASE@.gz /boot/kernel/kernel.gz
	fi

	# acpi MUST be within kfreebsd-loader reach
	if [ "$(readlink -f /boot/kernel/acpi.ko)" != "/lib/modules/@RELEASE@/acpi.ko" ] ; then
		rm -f /boot/kernel/acpi.ko.old
		if [ -L /boot/kernel/acpi.ko ] ; then
			mv /boot/kernel/acpi.ko{,.old}
		fi
		ln -s /lib/modules/@RELEASE@/acpi.ko /boot/kernel/acpi.ko
	fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)

    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


