diff -ur src.old/sys/alpha/include/alpha_cpu.h src/sys/alpha/include/alpha_cpu.h
--- src.old/sys/alpha/include/alpha_cpu.h	2003-07-24 09:41:08.000000000 +0200
+++ src/sys/alpha/include/alpha_cpu.h	2004-08-03 08:59:31.000000000 +0200
@@ -49,6 +49,7 @@
  * and miscellaneous PALcode operations.
  */
 
+#include <sys/types.h>
 
 /*
  * Process Control Block definitions [OSF/1 PALcode Specific]
diff -ur src.old/sys/alpha/include/param.h src/sys/alpha/include/param.h
--- src.old/sys/alpha/include/param.h	2003-07-31 03:31:31.000000000 +0200
+++ src/sys/alpha/include/param.h	2004-08-03 08:59:31.000000000 +0200
@@ -43,6 +43,9 @@
  *	@(#)param.h	8.1 (Berkeley) 6/10/93
  */
 
+#ifndef _MACHINE_PARAM_H_
+#define _MACHINE_PARAM_H_
+
 /*
  * Machine dependent constants for the Alpha.
  */
@@ -139,4 +142,6 @@
 #define pgtok(x)                ((x) * (PAGE_SIZE / 1024)) 
 
 #endif /* !_MACHINE_PARAM_H_ */
+
+#endif /* !_MACHINE_PARAM_H_ */
 #endif /* !_NO_NAMESPACE_POLLUTION */
diff -ur src.old/sys/alpha/include/pcb.h src/sys/alpha/include/pcb.h
--- src.old/sys/alpha/include/pcb.h	2003-08-17 08:42:07.000000000 +0200
+++ src/sys/alpha/include/pcb.h	2004-08-03 08:59:31.000000000 +0200
@@ -31,6 +31,8 @@
 #ifndef _MACHINE_PCB_H_
 #define _MACHINE_PCB_H_
 
+#include <sys/types.h>
+
 #include <machine/frame.h>
 #include <machine/reg.h>
 #include <machine/alpha_cpu.h>
diff -ur src.old/sys/alpha/include/pmap.h src/sys/alpha/include/pmap.h
--- src.old/sys/alpha/include/pmap.h	2003-10-06 03:47:11.000000000 +0200
+++ src/sys/alpha/include/pmap.h	2004-08-03 08:59:31.000000000 +0200
@@ -49,6 +49,13 @@
 #ifndef _MACHINE_PMAP_H_
 #define	_MACHINE_PMAP_H_
 
+#include <machine/types.h>
+#include <vm/vm.h>
+
+#ifndef	_PMAP_VM_
+#include <vm/pmap.h>
+#endif
+
 /*
  * Define meanings for a few software bits in the pte
  */
diff -ur src.old/sys/alpha/include/proc.h src/sys/alpha/include/proc.h
--- src.old/sys/alpha/include/proc.h	2003-04-17 23:57:16.000000000 +0200
+++ src/sys/alpha/include/proc.h	2004-08-03 09:02:49.000000000 +0200
@@ -31,6 +31,9 @@
 #ifndef _MACHINE_PROC_H_
 #define	_MACHINE_PROC_H_
 
+#include <sys/types.h>
+#include <machine/types.h>
+
 /*
  * Machine-dependent part of the proc struct for the Alpha.
  */
diff -ur src.old/sys/alpha/include/reg.h src/sys/alpha/include/reg.h
--- src.old/sys/alpha/include/reg.h	2002-08-29 08:17:46.000000000 +0200
+++ src/sys/alpha/include/reg.h	2004-08-03 08:59:31.000000000 +0200
@@ -31,6 +31,8 @@
 #ifndef _ALPHA_REG_H_
 #define	_ALPHA_REG_H_
 
+#include <sys/types.h>
+
 /*
  * XXX where did this info come from?
  */
diff -ur src.old/sys/cam/cam_ccb.h src/sys/cam/cam_ccb.h
--- src.old/sys/cam/cam_ccb.h	2003-07-28 08:15:58.000000000 +0200
+++ src/sys/cam/cam_ccb.h	2004-08-03 08:59:31.000000000 +0200
@@ -307,7 +307,7 @@
 				 * tagged operations
 				 */
 	int	mintags;
-	struct	timeval last_reset;	/* Time of last bus reset/loop init */
+	struct	__kernel_timeval last_reset;	/* Time of last bus reset/loop init */
 };
 
 typedef enum {
@@ -567,7 +567,7 @@
 /* Path Statistics CCB */
 struct ccb_pathstats {
 	struct	ccb_hdr	ccb_h;
-	struct	timeval last_reset;	/* Time of last bus reset/loop init */
+	struct	__kernel_timeval last_reset;	/* Time of last bus reset/loop init */
 };
 
 typedef union {
diff -ur src.old/sys/cam/cam_periph.h src/sys/cam/cam_periph.h
--- src.old/sys/cam/cam_periph.h	2003-03-08 09:01:26.000000000 +0100
+++ src/sys/cam/cam_periph.h	2004-08-03 08:59:31.000000000 +0200
@@ -167,7 +167,7 @@
 void		cam_periph_bus_settle(struct cam_periph *periph,
 				      u_int bus_settle_ms);
 void		cam_periph_freeze_after_event(struct cam_periph *periph,
-					      struct timeval* event_time,
+					      struct __kernel_timeval* event_time,
 					      u_int duration_ms);
 int		cam_periph_error(union ccb *ccb, cam_flags camflags,
 				 u_int32_t sense_flags, union ccb *save_ccb);
diff -ur src.old/sys/dev/aac/aacvar.h src/sys/dev/aac/aacvar.h
--- src.old/sys/dev/aac/aacvar.h	2004-02-18 07:20:50.000000000 +0100
+++ src/sys/dev/aac/aacvar.h	2004-08-03 08:59:31.000000000 +0200
@@ -172,7 +172,7 @@
 
 	void			(* cm_complete)(struct aac_command *cm);
 	void			*cm_private;
-	time_t			cm_timestamp;	/* command creation time */
+	__kernel_time_t			cm_timestamp;	/* command creation time */
 	int			cm_queue;
 	int			cm_index;
 };
diff -ur src.old/sys/dev/asr/sys_info.h src/sys/dev/asr/sys_info.h
--- src.old/sys/dev/asr/sys_info.h	2002-05-14 23:59:10.000000000 +0200
+++ src/sys/dev/asr/sys_info.h	2004-08-03 08:59:31.000000000 +0200
@@ -458,10 +458,10 @@
 	u_int32_t	write_by_size_count[10];
 	u_int32_t	read_by_size_min_time[10];
 	u_int32_t	read_by_size_max_time[10];
-	struct timeval	read_by_size_total_time[10];
+	struct __kernel_timeval	read_by_size_total_time[10];
 	u_int32_t	write_by_size_min_time[10];
 	u_int32_t	write_by_size_max_time[10];
-	struct timeval	write_by_size_total_time[10];
+	struct __kernel_timeval	write_by_size_total_time[10];
 
 #define	SIZE_512	0
 #define	SIZE_1K		1
@@ -474,7 +474,7 @@
 #define	SIZE_BIGGER	8
 #define	SIZE_OTHER	9
 
-	struct timeval	intr_started;
+	struct __kernel_timeval	intr_started;
 } dpt_perf_t;
 #endif
 
diff -ur src.old/sys/dev/ata/atapi-cd.h src/sys/dev/ata/atapi-cd.h
--- src.old/sys/dev/ata/atapi-cd.h	2003-11-01 10:44:33.000000000 +0100
+++ src/sys/dev/ata/atapi-cd.h	2004-08-03 09:03:17.000000000 +0200
@@ -311,7 +311,7 @@
     struct changer		*changer_info;	/* changer info */
     struct acd_softc		**driver;	/* softc's of changer slots */
     int				slot;		/* this instance slot number */
-    time_t			timestamp;	/* this instance timestamp */
+    __kernel_time_t			timestamp;	/* this instance timestamp */
     u_int			disk_size;	/* size of current media */
     u_int			block_size;	/* blocksize currently used */
     struct g_geom		*gp;		/* geom instance */
diff -ur src.old/sys/dev/dec/mcclockvar.h src/sys/dev/dec/mcclockvar.h
--- src.old/sys/dev/dec/mcclockvar.h	2000-05-01 21:54:24.000000000 +0200
+++ src/sys/dev/dec/mcclockvar.h	2004-08-03 08:59:31.000000000 +0200
@@ -32,6 +32,6 @@
 
 void	mcclock_attach(device_t dev);
 void	mcclock_init(device_t);
-void	mcclock_get(device_t, time_t, struct clocktime *);
+void	mcclock_get(device_t, __kernel_time_t, struct clocktime *);
 void	mcclock_set(device_t, struct clocktime *);
 int	mcclock_getsecs(device_t dev, int *secp);
diff -ur src.old/sys/dev/dpt/dpt.h src/sys/dev/dpt/dpt.h
--- src.old/sys/dev/dpt/dpt.h	2003-03-29 09:30:45.000000000 +0100
+++ src/sys/dev/dpt/dpt.h	2004-08-03 08:59:31.000000000 +0200
@@ -896,8 +896,8 @@
 
 #ifdef DPT_MEASURE_PERFORMANCE
 	u_int32_t	 submitted_time;
-	struct		 timeval command_started;
-	struct		 timeval command_ended;
+	struct		 __kernel_timeval command_started;
+	struct		 __kernel_timeval command_ended;
 #endif
 } dpt_ccb_t;
 
@@ -1003,7 +1003,7 @@
 #define SIZE_BIGGER	8
 #define SIZE_OTHER	9
 
-	struct	  timeval intr_started;
+	struct	  __kernel_timeval intr_started;
 
 	u_int32_t warm_starts;
 	u_int32_t cold_boots;
@@ -1158,7 +1158,7 @@
 #endif
 
 #ifdef DPT_RESET_HBA
-	struct timeval last_contact;
+	struct __kernel_timeval last_contact;
 #endif
 } dpt_softc_t;
 
@@ -1235,10 +1235,10 @@
  */
 #ifdef _KERNEL
 /* This function gets the current hi-res time and returns it to the caller */
-static __inline struct timeval
+static __inline struct __kernel_timeval
 dpt_time_now(void)
 {
-	struct timeval now;
+	struct __kernel_timeval now;
 
 	microtime(&now);
 	return(now);
@@ -1264,8 +1264,8 @@
  * If times are sensless, ~0 is returned.
  */
 static __inline u_int32_t
-dpt_time_delta(struct timeval start,
-	       struct timeval end)
+dpt_time_delta(struct __kernel_timeval start,
+	       struct __kernel_timeval end)
 {
     if (start.tv_sec > end.tv_sec)
 	return(~0);
diff -ur src.old/sys/dev/hfa/fore_var.h src/sys/dev/hfa/fore_var.h
--- src.old/sys/dev/hfa/fore_var.h	2003-07-31 16:52:44.000000000 +0200
+++ src/sys/dev/hfa/fore_var.h	2004-08-03 08:59:31.000000000 +0200
@@ -222,7 +222,7 @@
 
 	Fore_stats	*fu_stats;	/* Device statistics buffer */
 	Fore_stats	*fu_statsd;	/* Device statistics buffer (DMA) */
-	time_t		fu_stats_time;	/* Last stats request timestamp */
+	__kernel_time_t		fu_stats_time;	/* Last stats request timestamp */
 	int		fu_stats_ret;	/* Stats request return code */
 	Fore_prom	*fu_prom;	/* Device PROM buffer */
 	Fore_prom	*fu_promd;	/* Device PROM buffer (DMA) */
diff -ur src.old/sys/dev/isp/isp_freebsd.h src/sys/dev/isp/isp_freebsd.h
--- src.old/sys/dev/isp/isp_freebsd.h	2003-10-21 23:52:23.000000000 +0200
+++ src/sys/dev/isp/isp_freebsd.h	2004-08-03 08:59:32.000000000 +0200
@@ -201,7 +201,7 @@
 	if (isp->isp_osinfo.intsok)	\
 		ISP_LOCK(isp)
 
-#define	NANOTIME_T		struct timespec
+#define	NANOTIME_T		struct __kernel_timespec
 #define	GET_NANOTIME		nanotime
 #define	GET_NANOSEC(x)		((x)->tv_sec * 1000000000 + (x)->tv_nsec)
 #define	NANOTIME_SUB		nanotime_sub
@@ -458,12 +458,12 @@
 	}
 }
 
-static INLINE u_int64_t nanotime_sub(struct timespec *, struct timespec *);
+static INLINE u_int64_t nanotime_sub(struct __kernel_timespec *, struct __kernel_timespec *);
 static INLINE u_int64_t
-nanotime_sub(struct timespec *b, struct timespec *a)
+nanotime_sub(struct __kernel_timespec *b, struct __kernel_timespec *a)
 {
 	u_int64_t elapsed;
-	struct timespec x = *b;
+	struct __kernel_timespec x = *b;
 	timespecsub(&x, a);
 	elapsed = GET_NANOSEC(&x);
 	if (elapsed == 0)
diff -ur src.old/sys/dev/mlx/mlxvar.h src/sys/dev/mlx/mlxvar.h
--- src.old/sys/dev/mlx/mlxvar.h	2003-09-02 10:30:31.000000000 +0200
+++ src/sys/dev/mlx/mlxvar.h	2004-08-03 08:59:32.000000000 +0200
@@ -82,7 +82,7 @@
     struct mlx_softc		*mc_sc;		/* controller that owns us */
     u_int8_t			mc_slot;	/* command slot we occupy */
     u_int16_t			mc_status;	/* command completion status */
-    time_t			mc_timeout;	/* when this command expires */
+    __kernel_time_t			mc_timeout;	/* when this command expires */
     u_int8_t			mc_mailbox[16];	/* command mailbox */
     u_int32_t			mc_sgphys;	/* physical address of s/g array in controller space */
     int				mc_nsgent;	/* number of entries in s/g map */
@@ -149,7 +149,7 @@
 #define MLX_STATE_OPEN		(1<<2)	/* control device is open */
 #define MLX_STATE_SUSPEND	(1<<3)	/* controller is suspended */
     struct callout_handle mlx_timeout;	/* periodic status monitor */
-    time_t		mlx_lastpoll;	/* last time_second we polled for status */
+    __kernel_time_t		mlx_lastpoll;	/* last time_second we polled for status */
     u_int16_t		mlx_lastevent;	/* sequence number of the last event we recorded */
     int			mlx_currevent;	/* sequence number last time we looked */
     int			mlx_background;	/* if != 0 rebuild or check is in progress */
diff -ur src.old/sys/dev/ray/if_raymib.h src/sys/dev/ray/if_raymib.h
--- src.old/sys/dev/ray/if_raymib.h	2002-09-23 08:25:07.000000000 +0200
+++ src/sys/dev/ray/if_raymib.h	2004-08-03 08:59:32.000000000 +0200
@@ -1179,5 +1179,5 @@
 	u_int8_t	rsl_host[ETHER_ADDR_LEN]; /* MAC address */
 	u_int8_t	rsl_siglevs[RAY_NSIGLEV]; /* levels, newest in [0] */
 	u_int8_t	rsl_antennas[RAY_NANTENNA]; /* best antenna */
-	struct timeval	rsl_time; 		  /* time of last packet */
+	struct __kernel_timeval	rsl_time; 		  /* time of last packet */
 };
diff -ur src.old/sys/dev/usb/usb.h src/sys/dev/usb/usb.h
--- src.old/sys/dev/usb/usb.h	2002-11-06 22:37:21.000000000 +0100
+++ src/sys/dev/usb/usb.h	2004-08-03 09:03:51.000000000 +0200
@@ -642,7 +642,7 @@
 #define USB_EVENT_DRIVER_DETACH 6
 #define USB_EVENT_IS_ATTACH(n) ((n) == USB_EVENT_CTRLR_ATTACH || (n) == USB_EVENT_DEVICE_ATTACH || (n) == USB_EVENT_DRIVER_ATTACH)
 #define USB_EVENT_IS_DETACH(n) ((n) == USB_EVENT_CTRLR_DETACH || (n) == USB_EVENT_DEVICE_DETACH || (n) == USB_EVENT_DRIVER_DETACH)
-	struct timespec		ue_time;
+	struct __kernel_timespec		ue_time;
 	union {
 		struct {
 			int			ue_bus;
diff -ur src.old/sys/dev/vinum/request.h src/sys/dev/vinum/request.h
--- src.old/sys/dev/vinum/request.h	2003-05-01 15:06:00.000000000 +0200
+++ src/sys/dev/vinum/request.h	2004-08-03 08:59:32.000000000 +0200
@@ -210,7 +210,7 @@
 
 struct rqinfo {
     enum rqinfo_type type;				    /* kind of event */
-    struct timeval timestamp;				    /* time it happened */
+    struct __kernel_timeval timestamp;				    /* time it happened */
     struct buf *bp;					    /* point to user buffer */
     int devmajor;					    /* major and minor device info */
     int devminor;
diff -ur src.old/sys/dev/vinum/vinumvar.h src/sys/dev/vinum/vinumvar.h
--- src.old/sys/dev/vinum/vinumvar.h	2003-09-29 10:19:06.000000000 +0200
+++ src/sys/dev/vinum/vinumvar.h	2004-08-03 08:59:32.000000000 +0200
@@ -207,8 +207,8 @@
 struct vinum_label {
     char sysname[VINUMHOSTNAMELEN];			    /* system name at time of creation */
     char name[MAXDRIVENAME];				    /* our name of the drive */
-    struct timeval date_of_birth;			    /* the time it was created */
-    struct timeval last_update;				    /* and the time of last update */
+    struct __kernel_timeval date_of_birth;			    /* the time it was created */
+    struct __kernel_timeval last_update;				    /* and the time of last update */
     /*
      * total size in bytes of the drive.  This value
      * includes the headers.
@@ -311,7 +311,7 @@
 
 #define MCFILENAMELEN	16
 struct mc {
-    struct timeval time;
+    struct __kernel_timeval time;
     int seq;
     int size;
     short line;
diff -ur src.old/sys/fs/msdosfs/direntry.h src/sys/fs/msdosfs/direntry.h
--- src.old/sys/fs/msdosfs/direntry.h	2003-09-27 03:18:27.000000000 +0200
+++ src/sys/fs/msdosfs/direntry.h	2004-08-03 09:04:56.000000000 +0200
@@ -139,9 +139,9 @@
 char	*mbnambuf_flush(struct dirent *dp);
 void	mbnambuf_init(void);
 void	mbnambuf_write(char *name, int id);
-void	unix2dostime(struct timespec *tsp, u_int16_t *ddp, 
+void	unix2dostime(struct __kernel_timespec *tsp, u_int16_t *ddp, 
 	    u_int16_t *dtp, u_int8_t *dhp);
-void	dos2unixtime(u_int dd, u_int dt, u_int dh, struct timespec *tsp);
+void	dos2unixtime(u_int dd, u_int dt, u_int dh, struct __kernel_timespec *tsp);
 int	dos2unixfn(u_char dn[11], u_char *un, int lower,
 	    struct msdosfsmount *pmp);
 int	unix2dosfn(const u_char *un, u_char dn[12], int unlen, u_int gen,
diff -ur src.old/sys/fs/ntfs/ntfs_subr.h src/sys/fs/ntfs/ntfs_subr.h
--- src.old/sys/fs/ntfs/ntfs_subr.h	2003-09-26 22:26:23.000000000 +0200
+++ src/sys/fs/ntfs/ntfs_subr.h	2004-08-03 09:06:19.000000000 +0200
@@ -82,7 +82,7 @@
 int ntfs_readattr( struct ntfsmount *, struct ntnode *, u_int32_t, char *, off_t, size_t, void *, struct uio *);
 int ntfs_filesize( struct ntfsmount *, struct fnode *, u_int64_t *, u_int64_t *);
 int ntfs_times( struct ntfsmount *, struct ntnode *, ntfs_times_t *);
-struct timespec	ntfs_nttimetounix( u_int64_t );
+struct __kernel_timespec	ntfs_nttimetounix( u_int64_t );
 int ntfs_ntreaddir( struct ntfsmount *, struct fnode *, u_int32_t, struct attr_indexentry **);
 int ntfs_runtovrun( cn_t **, cn_t **, u_long *, u_int8_t *);
 int ntfs_attrtontvattr( struct ntfsmount *, struct ntvattr **, struct attr * );
diff -ur src.old/sys/fs/nwfs/nwfs_node.h src/sys/fs/nwfs/nwfs_node.h
--- src.old/sys/fs/nwfs/nwfs_node.h	2001-09-12 10:37:19.000000000 +0200
+++ src/sys/fs/nwfs/nwfs_node.h	2004-08-03 08:59:32.000000000 +0200
@@ -49,9 +49,9 @@
 	struct vnode 		*n_vnode;
 	struct vattr		n_vattr;
 	struct nwmount		*n_mount;
-	time_t			n_atime;	/* attributes cache time*/
-	time_t			n_ctime;
-	time_t			n_mtime;
+	__kernel_time_t			n_atime;	/* attributes cache time*/
+	__kernel_time_t			n_ctime;
+	__kernel_time_t			n_mtime;
 	int			n_flag;
 	ncpfid			n_parent;
 	ncpfid			n_fid;
diff -ur src.old/sys/fs/nwfs/nwfs_subr.h src/sys/fs/nwfs/nwfs_subr.h
--- src.old/sys/fs/nwfs/nwfs_subr.h	2001-09-12 10:37:19.000000000 +0200
+++ src/sys/fs/nwfs/nwfs_subr.h	2004-08-03 09:23:16.000000000 +0200
@@ -47,7 +47,7 @@
 struct nw_search_info;
 struct nwmount;
 struct thread;
-struct timespec;
+struct __kernel_timespec;
 struct ucred;
 struct vattr;
 struct vnode;
@@ -89,8 +89,8 @@
 		int n, struct ncp_volume_info *target,
 		struct thread *td, struct ucred *cred);
 
-void ncp_unix2dostime (struct timespec *tsp, int tz, u_int16_t *ddp, 
+void ncp_unix2dostime (struct __kernel_timespec *tsp, int tz, u_int16_t *ddp, 
 	     u_int16_t *dtp, u_int8_t *dhp);
-void ncp_dos2unixtime (u_int dd, u_int dt, u_int dh, int tz, struct timespec *tsp);
+void ncp_dos2unixtime (u_int dd, u_int dt, u_int dh, int tz, struct __kernel_timespec *tsp);
 
 #endif /* !_NWFS_SUBR_H_ */
diff -ur src.old/sys/i386/include/i4b_trace.h src/sys/i386/include/i4b_trace.h
--- src.old/sys/i386/include/i4b_trace.h	2002-03-17 10:33:13.000000000 +0100
+++ src/sys/i386/include/i4b_trace.h	2004-08-03 08:59:32.000000000 +0200
@@ -52,7 +52,7 @@
 #define FROM_NT 1			/* network -> user		*/
 	int trunc;		/* # of truncated bytes (frame > MCLBYTES) */
 	unsigned int count;	/* frame count for this unit/type	*/
-	struct timeval time;	/* timestamp for this frame		*/
+	struct __kernel_timeval time;	/* timestamp for this frame		*/
 } i4b_trace_hdr_t;
 
 #define INFO0		0	/* layer 1 */
diff -ur src.old/sys/i386/include/npx.h src/sys/i386/include/npx.h
--- src.old/sys/i386/include/npx.h	2002-09-23 07:55:10.000000000 +0200
+++ src/sys/i386/include/npx.h	2004-08-03 09:24:00.000000000 +0200
@@ -45,6 +45,8 @@
 #ifndef _MACHINE_NPX_H_
 #define	_MACHINE_NPX_H_
 
+#include <sys/types.h>
+
 /* Environment information of floating point unit */
 struct env87 {
 	long	en_cw;		/* control word (16bits) */
diff -ur src.old/sys/i386/include/pcb.h src/sys/i386/include/pcb.h
--- src.old/sys/i386/include/pcb.h	2003-09-30 10:11:36.000000000 +0200
+++ src/sys/i386/include/pcb.h	2004-08-03 09:24:27.000000000 +0200
@@ -43,6 +43,7 @@
 /*
  * Intel 386 process control block
  */
+#include <sys/types.h>
 #include <machine/npx.h>
 
 struct pcb {
diff -ur src.old/sys/i386/include/pmap.h src/sys/i386/include/pmap.h
--- src.old/sys/i386/include/pmap.h	2003-11-08 04:01:26.000000000 +0100
+++ src/sys/i386/include/pmap.h	2004-08-03 08:59:32.000000000 +0200
@@ -48,6 +48,13 @@
 #ifndef _MACHINE_PMAP_H_
 #define	_MACHINE_PMAP_H_
 
+#include <machine/types.h>
+#include <vm/vm.h>
+
+#ifndef	_PMAP_VM_
+#include <vm/pmap.h>
+#endif
+
 /*
  * Page-directory and page-table entires follow this format, with a few
  * of the fields not present here and there, depending on a lot of things.
diff -ur src.old/sys/isofs/cd9660/cd9660_node.h src/sys/isofs/cd9660/cd9660_node.h
--- src.old/sys/isofs/cd9660/cd9660_node.h	2003-06-25 00:11:20.000000000 +0200
+++ src/sys/isofs/cd9660/cd9660_node.h	2004-08-03 09:25:54.000000000 +0200
@@ -49,9 +49,9 @@
 #define doff_t	long
 
 typedef	struct	{
-	struct timespec	iso_atime;	/* time of last access */
-	struct timespec	iso_mtime;	/* time of last modification */
-	struct timespec	iso_ctime;	/* time file changed */
+	struct __kernel_timespec	iso_atime;	/* time of last access */
+	struct __kernel_timespec	iso_mtime;	/* time of last modification */
+	struct __kernel_timespec	iso_ctime;	/* time file changed */
 	u_short		iso_mode;	/* files access mode and type */
 	uid_t		iso_uid;	/* owner user id */
 	gid_t		iso_gid;	/* owner group id */
@@ -119,7 +119,7 @@
 			struct iso_node *, struct buf *, enum ISO_FTYPE);
 int cd9660_ihashget(dev_t, ino_t, int, struct vnode **);
 void cd9660_ihashins(struct iso_node *);
-int cd9660_tstamp_conv7(u_char *, struct timespec *, enum ISO_FTYPE);
-int cd9660_tstamp_conv17(u_char *, struct timespec *);
+int cd9660_tstamp_conv7(u_char *, struct __kernel_timespec *, enum ISO_FTYPE);
+int cd9660_tstamp_conv17(u_char *, struct __kernel_timespec *);
 
 #endif /* _KERNEL */
diff -ur src.old/sys/net/bpf.h src/sys/net/bpf.h
--- src.old/sys/net/bpf.h	2003-11-28 19:48:59.000000000 +0100
+++ src/sys/net/bpf.h	2004-08-03 08:59:32.000000000 +0200
@@ -104,8 +104,8 @@
 #define	BIOCGDLT	_IOR('B',106, u_int)
 #define BIOCGETIF	_IOR('B',107, struct ifreq)
 #define BIOCSETIF	_IOW('B',108, struct ifreq)
-#define BIOCSRTIMEOUT	_IOW('B',109, struct timeval)
-#define BIOCGRTIMEOUT	_IOR('B',110, struct timeval)
+#define BIOCSRTIMEOUT	_IOW('B',109, struct __kernel_timeval)
+#define BIOCGRTIMEOUT	_IOR('B',110, struct __kernel_timeval)
 #define BIOCGSTATS	_IOR('B',111, struct bpf_stat)
 #define BIOCIMMEDIATE	_IOW('B',112, u_int)
 #define BIOCVERSION	_IOR('B',113, struct bpf_version)
@@ -122,7 +122,7 @@
  * Structure prepended to each packet.
  */
 struct bpf_hdr {
-	struct timeval	bh_tstamp;	/* time stamp */
+	struct __kernel_timeval	bh_tstamp;	/* time stamp */
 	bpf_u_int32	bh_caplen;	/* length of captured portion */
 	bpf_u_int32	bh_datalen;	/* original length of packet */
 	u_short		bh_hdrlen;	/* length of bpf header (this struct
diff -ur src.old/sys/net/ethernet.h src/sys/net/ethernet.h
--- src.old/sys/net/ethernet.h	2002-11-15 00:28:47.000000000 +0100
+++ src/sys/net/ethernet.h	2004-08-03 09:27:55.000000000 +0200
@@ -8,6 +8,9 @@
 #ifndef _NET_ETHERNET_H_
 #define _NET_ETHERNET_H_
 
+/* Define the types u_char, u_short.  */
+#include <sys/types.h>
+
 /*
  * Somce basic Ethernet constants.
  */
@@ -62,6 +65,7 @@
 	u_char	ether_shost[ETHER_ADDR_LEN];
 	u_short	ether_type;
 };
+#define ether_addr_octet octet
 
 /*
  * Structure of a 48-bit Ethernet address.
@@ -361,19 +365,8 @@
 
 #else /* _KERNEL */
 
-#include <sys/cdefs.h>
-
-/*
- * Ethernet address conversion/parsing routines.
- */
-__BEGIN_DECLS
-struct	ether_addr *ether_aton(const char *);
-int	ether_hostton(const char *, struct ether_addr *);
-int	ether_line(const char *, struct ether_addr *, char *);
-char 	*ether_ntoa(const struct ether_addr *);
-int	ether_ntohost(char *, const struct ether_addr *);
-__END_DECLS
-
+/* The API functions are declared in <netinet/ether.h>.  */
+  
 #endif /* !_KERNEL */
 
 #endif /* !_NET_ETHERNET_H_ */
diff -ur src.old/sys/net/if.h src/sys/net/if.h
--- src.old/sys/net/if.h	2003-10-31 19:32:08.000000000 +0100
+++ src/sys/net/if.h	2004-08-03 09:29:51.000000000 +0200
@@ -43,10 +43,15 @@
 #include <sys/queue.h>
 #endif
 
+#include <features.h>
+
+#include <sys/types.h>
+#include <sys/socket.h>
+
 #if __BSD_VISIBLE
 /*
  * <net/if.h> does not depend on <sys/time.h> on most other systems.  This
- * helps userland compatibility.  (struct timeval ifi_lastchange)
+ * helps userland compatibility.  (struct __kernel_timeval ifi_lastchange)
  */
 #ifndef _KERNEL
 #include <sys/time.h>
@@ -127,7 +132,7 @@
 	u_long	ifi_noproto;		/* destined for unsupported protocol */
 	u_long	ifi_hwassist;		/* HW offload capabilities */
 	u_long	ifi_unused;		/* XXX was ifi_xmittiming */
-	struct	timeval ifi_lastchange;	/* time of last administrative change */
+	struct	__kernel_timeval ifi_lastchange;	/* time of last administrative change */
 };
 
 #define	IFF_UP		0x1		/* interface is up */
@@ -247,6 +252,7 @@
 		struct	sockaddr ifru_addr;
 		struct	sockaddr ifru_dstaddr;
 		struct	sockaddr ifru_broadaddr;
+		struct	sockaddr ifru_netmask;
 		short	ifru_flags[2];
 		short	ifru_index;
 		int	ifru_metric;
@@ -259,6 +265,7 @@
 #define	ifr_addr	ifr_ifru.ifru_addr	/* address */
 #define	ifr_dstaddr	ifr_ifru.ifru_dstaddr	/* other end of p-to-p link */
 #define	ifr_broadaddr	ifr_ifru.ifru_broadaddr	/* broadcast address */
+#define	ifr_netmask	ifr_ifru.ifru_netmask	/* interface net mask */
 #define	ifr_flags	ifr_ifru.ifru_flags[0]	/* flags (low 16 bits) */
 #define	ifr_flagshigh	ifr_ifru.ifru_flags[1]	/* flags (high 16 bits) */
 #define	ifr_metric	ifr_ifru.ifru_metric	/* metric */
diff -ur src.old/sys/net/if_arp.h src/sys/net/if_arp.h
--- src.old/sys/net/if_arp.h	2003-03-21 18:53:15.000000000 +0100
+++ src/sys/net/if_arp.h	2004-08-03 08:59:32.000000000 +0200
@@ -37,6 +37,11 @@
 #ifndef _NET_IF_ARP_H_
 #define	_NET_IF_ARP_H_
 
+/* Define the types u_char, u_short.  */
+#include <sys/types.h>
+/* Define 'struct sockaddr'.  */
+#include <sys/socket.h>
+
 /*
  * Address Resolution Protocol.
  *
@@ -84,6 +89,15 @@
 	(sizeof(struct arphdr) + 2*(ar_hln) + 2*(ar_pln))
 #define arphdr_len(ap)	(arphdr_len2((ap)->ar_hln, (ap)->ar_pln))
 
+#define ar_sha(ap)	(((caddr_t)((ap)+1)) +   0)
+#define ar_spa(ap)	(((caddr_t)((ap)+1)) +   (ap)->ar_hln)
+#define ar_tha(ap)	(((caddr_t)((ap)+1)) +   (ap)->ar_hln + (ap)->ar_pln)
+#define ar_tpa(ap)	(((caddr_t)((ap)+1)) + 2*(ap)->ar_hln + (ap)->ar_pln)
+
+#define arphdr_len2(ar_hln, ar_pln)					\
+	(sizeof(struct arphdr) + 2*(ar_hln) + 2*(ar_pln))
+#define arphdr_len(ap)	(arphdr_len2((ap)->ar_hln, (ap)->ar_pln))
+
 /*
  * ARP ioctl request
  */
diff -ur src.old/sys/net/if_dl.h src/sys/net/if_dl.h
--- src.old/sys/net/if_dl.h	2002-05-08 00:14:06.000000000 +0200
+++ src/sys/net/if_dl.h	2004-08-03 09:31:48.000000000 +0200
@@ -37,6 +37,10 @@
 #ifndef _NET_IF_DL_H_
 #define _NET_IF_DL_H_
 
+#include <features.h>
+
+#include <sys/types.h>
+
 /*
  * A Link-Level Sockaddr may specify the interface in one of two
  * ways: either by means of a system-provided index number (computed
@@ -72,15 +76,9 @@
 
 #define LLADDR(s) ((caddr_t)((s)->sdl_data + (s)->sdl_nlen))
 
-#ifndef _KERNEL
-
-#include <sys/cdefs.h>
-
 __BEGIN_DECLS
-void	link_addr(const char *, struct sockaddr_dl *);
-char	*link_ntoa(const struct sockaddr_dl *);
+extern void link_addr (const char *, struct sockaddr_dl *);
+extern char *link_ntoa (const struct sockaddr_dl *);
 __END_DECLS
 
-#endif /* !_KERNEL */
-
 #endif
diff -ur src.old/sys/net/if_pppvar.h src/sys/net/if_pppvar.h
--- src.old/sys/net/if_pppvar.h	2002-08-09 17:30:46.000000000 +0200
+++ src/sys/net/if_pppvar.h	2004-08-03 08:59:32.000000000 +0200
@@ -74,8 +74,8 @@
 	void	*sc_xc_state;		/* transmit compressor state */
 	struct	compressor *sc_rcomp;	/* receive decompressor */
 	void	*sc_rc_state;		/* receive decompressor state */
-	time_t	sc_last_sent;		/* time (secs) last NP pkt sent */
-	time_t	sc_last_recv;		/* time (secs) last NP pkt rcvd */
+	__kernel_time_t	sc_last_sent;		/* time (secs) last NP pkt sent */
+	__kernel_time_t	sc_last_recv;		/* time (secs) last NP pkt rcvd */
 #ifdef PPP_FILTER
 	struct	bpf_program sc_pass_filt;   /* filter for packets to pass */
 	struct	bpf_program sc_active_filt; /* filter for "non-idle" packets */
diff -ur src.old/sys/net/if_sppp.h src/sys/net/if_sppp.h
--- src.old/sys/net/if_sppp.h	2001-12-30 21:42:29.000000000 +0100
+++ src/sys/net/if_sppp.h	2004-08-03 08:59:32.000000000 +0200
@@ -154,8 +154,8 @@
 	int	confflags;	/* administrative configuration flags */
 #define CONF_ENABLE_VJ    0x01	/* VJ header compression enabled */
 #define CONF_ENABLE_IPV6  0x02	/* IPv6 administratively enabled */
-	time_t	pp_last_recv;	/* time last packet has been received */
-	time_t	pp_last_sent;	/* time last packet has been sent */
+	__kernel_time_t	pp_last_recv;	/* time last packet has been received */
+	__kernel_time_t	pp_last_sent;	/* time last packet has been sent */
 	struct callout_handle ch[IDX_COUNT]; /* per-proto and if callouts */
 	struct callout_handle pap_my_to_ch; /* PAP needs one more... */
 	struct slcp lcp;		/* LCP params */
diff -ur src.old/sys/net/ppp_defs.h src/sys/net/ppp_defs.h
--- src.old/sys/net/ppp_defs.h	2001-06-11 14:38:58.000000000 +0200
+++ src/sys/net/ppp_defs.h	2004-08-03 08:59:32.000000000 +0200
@@ -142,8 +142,8 @@
  * the last NP packet was sent or received.
  */
 struct ppp_idle {
-    time_t xmit_idle;		/* time since last NP packet sent */
-    time_t recv_idle;		/* time since last NP packet received */
+    __kernel_time_t xmit_idle;		/* time since last NP packet sent */
+    __kernel_time_t recv_idle;		/* time since last NP packet received */
 };
 
 #ifndef __P
diff -ur src.old/sys/netatm/atm_ioctl.h src/sys/netatm/atm_ioctl.h
--- src.old/sys/netatm/atm_ioctl.h	2003-07-29 15:32:10.000000000 +0200
+++ src/sys/netatm/atm_ioctl.h	2004-08-03 09:33:08.000000000 +0200
@@ -347,7 +347,7 @@
 	u_long		avp_obytes;		/* Bytes sent to VCC */
 	u_long		avp_ierrors;		/* Errors receiving from VCC */
 	u_long		avp_oerrors;		/* Errors sending to VCC */
-	time_t		avp_tstamp;		/* State transition timestamp */
+	__kernel_time_t		avp_tstamp;		/* State transition timestamp */
 };
 
 /*
diff -ur src.old/sys/netatm/atm_sys.h src/sys/netatm/atm_sys.h
--- src.old/sys/netatm/atm_sys.h	2002-06-14 21:31:07.000000000 +0200
+++ src/sys/netatm/atm_sys.h	2004-08-03 08:59:32.000000000 +0200
@@ -177,7 +177,7 @@
  */
 #ifdef DIAGNOSTIC
 #define ATM_TIME							\
-	struct timeval now, delta;					\
+	struct __kernel_timeval now, delta;					\
 	KT_TIME(now);							\
 	delta.tv_sec = now.tv_sec - atm_debugtime.tv_sec;		\
 	delta.tv_usec = now.tv_usec - atm_debugtime.tv_usec;		\
diff -ur src.old/sys/netatm/atm_var.h src/sys/netatm/atm_var.h
--- src.old/sys/netatm/atm_var.h	2003-10-31 19:32:10.000000000 +0100
+++ src/sys/netatm/atm_var.h	2004-08-03 08:59:32.000000000 +0200
@@ -63,7 +63,7 @@
 extern int		atm_init;
 extern int		atm_version;
 extern int		atm_debug;
-extern struct timeval	atm_debugtime;
+extern struct __kernel_timeval	atm_debugtime;
 extern int		atm_dev_print;
 extern int		atm_print_data;
 extern uma_zone_t	atm_attributes_zone;
diff -ur src.old/sys/netinet/if_ether.h src/sys/netinet/if_ether.h
--- src.old/sys/netinet/if_ether.h	2003-03-05 00:19:52.000000000 +0100
+++ src/sys/netinet/if_ether.h	2004-08-03 08:59:32.000000000 +0200
@@ -37,6 +37,9 @@
 #ifndef _NETINET_IF_ETHER_H_
 #define _NETINET_IF_ETHER_H_
 
+/* Define 'struct in_addr'.  */
+#include <netinet/in.h>
+
 #include <net/ethernet.h>
 #include <net/if_arp.h>
 
diff -ur src.old/sys/netinet/ip_mroute.h src/sys/netinet/ip_mroute.h
--- src.old/sys/netinet/ip_mroute.h	2003-08-07 20:16:59.000000000 +0200
+++ src/sys/netinet/ip_mroute.h	2004-08-03 09:36:04.000000000 +0200
@@ -185,7 +185,7 @@
  */
 
 struct bw_data {
-	struct timeval	b_time;
+	struct __kernel_timeval	b_time;
 	uint64_t	b_packets;
 	uint64_t	b_bytes;
 };
@@ -285,7 +285,7 @@
 	u_long		mfc_byte_cnt;		/* byte count for src-grp    */
 	u_long		mfc_wrong_if;		/* wrong if for src-grp	     */
 	int		mfc_expire;		/* time to clean entry up    */
-	struct timeval	mfc_last_assert;	/* last time I sent an assert*/
+	struct __kernel_timeval	mfc_last_assert;	/* last time I sent an assert*/
 	struct rtdetq	*mfc_stall;		/* q of packets awaiting mfc */
 	struct mfc	*mfc_next;		/* next mfc entry            */
 	uint8_t		mfc_flags[MAXVIFS];	/* the MRT_MFC_FLAGS_* flags */
@@ -341,7 +341,7 @@
  */
 struct tbf
 {
-    struct timeval tbf_last_pkt_t; /* arr. time of last pkt 	*/
+    struct __kernel_timeval tbf_last_pkt_t; /* arr. time of last pkt 	*/
     u_long tbf_n_tok;      	/* no of tokens in bucket 	*/
     u_long tbf_q_len;    	/* length of queue at this vif	*/
     u_long tbf_max_q_len;	/* max. queue length		*/
@@ -372,7 +372,7 @@
 
 	struct bw_data	bm_threshold;		/* the upcall threshold	     */
 	struct bw_data	bm_measured;		/* the measured bw	     */
-	struct timeval	bm_start_time;		/* abs. time		     */
+	struct __kernel_timeval	bm_start_time;		/* abs. time		     */
 };
 
 #ifdef _KERNEL
diff -ur src.old/sys/netinet6/in6_prefix.h src/sys/netinet6/in6_prefix.h
--- src.old/sys/netinet6/in6_prefix.h	2001-06-11 14:39:05.000000000 +0200
+++ src/sys/netinet6/in6_prefix.h	2004-08-03 08:59:32.000000000 +0200
@@ -39,8 +39,8 @@
 	struct sockaddr_in6 rp_prefix;	/* prefix */
 	u_int32_t rp_vltime;	/* advertised valid lifetime */
 	u_int32_t rp_pltime;	/* advertised preferred lifetime */
-	time_t rp_expire;	/* expiration time of the prefix */
-	time_t rp_preferred;	/* preferred time of the prefix */
+	__kernel_time_t rp_expire;	/* expiration time of the prefix */
+	__kernel_time_t rp_preferred;	/* preferred time of the prefix */
 	struct in6_prflags rp_flags;
 	u_char	rp_origin; /* from where this prefix info is obtained */
 	struct	rp_stateflags {
diff -ur src.old/sys/netinet6/in6_var.h src/sys/netinet6/in6_var.h
--- src.old/sys/netinet6/in6_var.h	2003-10-30 16:29:17.000000000 +0100
+++ src/sys/netinet6/in6_var.h	2004-08-03 08:59:32.000000000 +0200
@@ -84,8 +84,8 @@
  *	in kernel: modify preferred/expire only
  */
 struct in6_addrlifetime {
-	time_t ia6t_expire;	/* valid lifetime expiration time */
-	time_t ia6t_preferred;	/* preferred lifetime expiration time */
+	__kernel_time_t ia6t_expire;	/* valid lifetime expiration time */
+	__kernel_time_t ia6t_preferred;	/* preferred lifetime expiration time */
 	u_int32_t ia6t_vltime;	/* valid lifetime */
 	u_int32_t ia6t_pltime;	/* prefix lifetime */
 };
diff -ur src.old/sys/netinet6/ip6_mroute.h src/sys/netinet6/ip6_mroute.h
--- src.old/sys/netinet6/ip6_mroute.h	2002-04-19 06:46:23.000000000 +0200
+++ src/sys/netinet6/ip6_mroute.h	2004-08-03 08:59:32.000000000 +0200
@@ -238,7 +238,7 @@
 	u_quad_t    	mf6c_byte_cnt;		/* byte count for src-grp    */
 	u_quad_t    	mf6c_wrong_if;		/* wrong if for src-grp	     */
 	int	    	mf6c_expire;		/* time to clean entry up    */
-	struct timeval  mf6c_last_assert;	/* last time I sent an assert*/
+	struct __kernel_timeval  mf6c_last_assert;	/* last time I sent an assert*/
 	struct rtdetq  *mf6c_stall;		/* pkts waiting for route */
 	struct mf6c    *mf6c_next;		/* hash table linkage */
 };
@@ -253,7 +253,7 @@
     struct mbuf 	*m;		/* A copy of the packet	    	    */
     struct ifnet	*ifp;		/* Interface pkt came in on 	    */
 #ifdef UPCALL_TIMING
-    struct timeval	t;		/* Timestamp */
+    struct __kernel_timeval	t;		/* Timestamp */
 #endif /* UPCALL_TIMING */
     struct rtdetq	*next;
 };
diff -ur src.old/sys/netinet6/ip6_var.h src/sys/netinet6/ip6_var.h
--- src.old/sys/netinet6/ip6_var.h	2003-11-04 21:22:33.000000000 +0100
+++ src/sys/netinet6/ip6_var.h	2004-08-03 08:59:32.000000000 +0200
@@ -309,7 +309,7 @@
 extern int	ip6_accept_rtadv;	/* Acts as a host not a router */
 extern int	ip6_keepfaith;		/* Firewall Aided Internet Translator */
 extern int	ip6_log_interval;
-extern time_t	ip6_log_time;
+extern __kernel_time_t	ip6_log_time;
 extern int	ip6_hdrnestlimit; /* upper limit of # of extension headers */
 extern int	ip6_dad_count;		/* DupAddrDetectionTransmits */
 
diff -ur src.old/sys/netinet6/nd6.h src/sys/netinet6/nd6.h
--- src.old/sys/netinet6/nd6.h	2003-10-31 17:06:04.000000000 +0100
+++ src/sys/netinet6/nd6.h	2004-08-03 08:59:32.000000000 +0200
@@ -156,7 +156,7 @@
 		u_char	origin;
 		u_int32_t vltime;
 		u_int32_t pltime;
-		time_t expire;
+		__kernel_time_t expire;
 		u_short if_index;
 		u_short advrtrs; /* number of advertisement routers */
 		struct	in6_addr advrtr[DRLSTSIZ]; /* XXX: explicit limit */
@@ -249,8 +249,8 @@
 	struct in6_addr ndpr_addr; /* address that is derived from the prefix */
 	u_int32_t ndpr_vltime;	/* advertised valid lifetime */
 	u_int32_t ndpr_pltime;	/* advertised preferred lifetime */
-	time_t ndpr_expire;	/* expiration time of the prefix */
-	time_t ndpr_preferred;	/* preferred time of the prefix */
+	__kernel_time_t ndpr_expire;	/* expiration time of the prefix */
+	__kernel_time_t ndpr_preferred;	/* preferred time of the prefix */
 	struct prf_ra ndpr_flags;
 	u_int32_t ndpr_stateflags; /* actual state flags */
 	/* list of routers that advertise the prefix: */
diff -ur src.old/sys/netncp/ncp_lib.h src/sys/netncp/ncp_lib.h
--- src.old/sys/netncp/ncp_lib.h	2002-07-28 01:16:49.000000000 +0200
+++ src/sys/netncp/ncp_lib.h	2004-08-03 08:59:32.000000000 +0200
@@ -158,9 +158,9 @@
 void NWUnpackDateTime(nuint32, NW_DATE *, NW_TIME *);
 void NWUnpackDate(nuint16, NW_DATE *);
 void NWUnpackTime(nuint16, NW_TIME *);
-time_t ncp_UnpackDateTime(nuint32);
-int  ncp_GetFileServerDateAndTime(NWCONN_HANDLE, time_t *);
-int  ncp_SetFileServerDateAndTime(NWCONN_HANDLE, time_t *);
+__kernel_time_t ncp_UnpackDateTime(nuint32);
+int  ncp_GetFileServerDateAndTime(NWCONN_HANDLE, __kernel_time_t *);
+int  ncp_SetFileServerDateAndTime(NWCONN_HANDLE, __kernel_time_t *);
 NWCCODE NWDownFileServer(NWCONN_HANDLE, int);
 NWCCODE NWCloseBindery(NWCONN_HANDLE);
 NWCCODE NWOpenBindery(NWCONN_HANDLE);
@@ -217,7 +217,7 @@
 /* misc ncp calls */
 int  ncp_get_file_server_information(NWCONN_HANDLE, struct ncp_file_server_info *);
 int  ncp_get_stations_logged_info(NWCONN_HANDLE, u_int32_t,
-		struct ncp_bindery_object *, time_t *);
+		struct ncp_bindery_object *, __kernel_time_t *);
 int  ncp_get_internet_address(NWCONN_HANDLE, u_int32_t, struct ipx_addr *,
 		u_int8_t *);
 NWCCODE NWGetObjectConnectionNumbers(NWCONN_HANDLE, pnstr8, nuint16,
diff -ur src.old/sys/netncp/ncp_sock.h src/sys/netncp/ncp_sock.h
--- src.old/sys/netncp/ncp_sock.h	2003-02-26 22:25:55.000000000 +0100
+++ src/sys/netncp/ncp_sock.h	2004-08-03 09:36:36.000000000 +0200
@@ -39,14 +39,14 @@
 struct ncp_rq;
 struct proc;
 struct socket;
-struct timeval;
+struct __kernel_timeval;
 
 int  ncp_sock_connect(struct ncp_conn *ncp);
 int  ncp_sock_recv(struct socket *so, struct mbuf **mp, int *rlen);
 int  ncp_sock_send(struct socket *so, struct mbuf *data, struct ncp_rq *rqp);
 int  ncp_sock_disconnect(struct ncp_conn *conn);
 int  ncp_poll(struct socket *so, int events);
-int  ncp_sock_rselect(struct socket *so, struct thread *td, struct timeval *tv,
+int  ncp_sock_rselect(struct socket *so, struct thread *td, struct __kernel_timeval *tv,
 		      int events);
 int  ncp_sock_checksum(struct ncp_conn *conn, int enable);
 
diff -ur src.old/sys/nfsclient/nfs.h src/sys/nfsclient/nfs.h
--- src.old/sys/nfsclient/nfs.h	2003-11-22 03:21:48.000000000 +0100
+++ src/sys/nfsclient/nfs.h	2004-08-03 08:59:32.000000000 +0200
@@ -40,6 +40,11 @@
 #ifndef _NFSCLIENT_NFS_H_
 #define _NFSCLIENT_NFS_H_
 
+#ifndef _KERNEL
+#include <sys/types.h>
+#include <sys/ucred.h>
+#include <nfs/rpcv2.h>
+#endif
 #ifdef _KERNEL
 #include "opt_nfs.h"
 #endif
diff -ur src.old/sys/nfsclient/nfsnode.h src/sys/nfsclient/nfsnode.h
--- src.old/sys/nfsclient/nfsnode.h	2003-11-22 03:21:49.000000000 +0100
+++ src/sys/nfsclient/nfsnode.h	2004-08-03 09:38:27.000000000 +0200
@@ -97,25 +97,25 @@
 	u_quad_t		n_brev;		/* Modify rev when cached */
 	u_quad_t		n_lrev;		/* Modify rev for lease */
 	struct vattr		n_vattr;	/* Vnode attribute cache */
-	time_t			n_attrstamp;	/* Attr. cache timestamp */
+	__kernel_time_t			n_attrstamp;	/* Attr. cache timestamp */
 	u_int32_t		n_mode;		/* ACCESS mode cache */
 	uid_t			n_modeuid;	/* credentials having mode */
-	time_t			n_modestamp;	/* mode cache timestamp */
-	time_t			n_mtime;	/* Prev modify time. */
-	time_t			n_ctime;	/* Prev create time. */
-	time_t			n_expiry;	/* Lease expiry time */
+	__kernel_time_t			n_modestamp;	/* mode cache timestamp */
+	__kernel_time_t			n_mtime;	/* Prev modify time. */
+	__kernel_time_t			n_ctime;	/* Prev create time. */
+	__kernel_time_t			n_expiry;	/* Lease expiry time */
 	nfsfh_t			*n_fhp;		/* NFS File Handle */
 	struct vnode		*n_vnode;	/* associated vnode */
 	struct vnode		*n_dvp;		/* parent vnode */
 	struct lockf		*n_lockf;	/* Locking record of file */
 	int			n_error;	/* Save write error value */
 	union {
-		struct timespec	nf_atim;	/* Special file times */
+		struct __kernel_timespec	nf_atim;	/* Special file times */
 		nfsuint64	nd_cookieverf;	/* Cookie verifier (dir only) */
 		u_char		nd4_cookieverf[NFSX_V4VERF];
 	} n_un1;
 	union {
-		struct timespec	nf_mtim;
+		struct __kernel_timespec	nf_mtim;
 		off_t		nd_direof;	/* Dir. EOF offset cache */
 	} n_un2;
 	union {
diff -ur src.old/sys/nfsserver/nfs.h src/sys/nfsserver/nfs.h
--- src.old/sys/nfsserver/nfs.h	2003-05-25 08:17:33.000000000 +0200
+++ src/sys/nfsserver/nfs.h	2004-08-03 09:37:22.000000000 +0200
@@ -252,7 +252,7 @@
 	int			nd_len;		/* Length of this write */
 	int			nd_repstat;	/* Reply status */
 	u_int32_t		nd_retxid;	/* Reply xid */
-	struct timeval		nd_starttime;	/* Time RPC initiated */
+	struct __kernel_timeval		nd_starttime;	/* Time RPC initiated */
 	fhandle_t		nd_fh;		/* File handle */
 	struct ucred		nd_cr;		/* Credentials */
 };
diff -ur src.old/sys/posix4/posix4.h src/sys/posix4/posix4.h
--- src.old/sys/posix4/posix4.h	2003-02-19 06:47:42.000000000 +0100
+++ src/sys/posix4/posix4.h	2004-08-03 09:38:59.000000000 +0200
@@ -109,7 +109,7 @@
 int ksched_get_priority_min(register_t *, struct ksched *, int);
 
 int ksched_rr_get_interval(register_t *, struct ksched *,
-	struct thread *, struct timespec *);
+	struct thread *, struct __kernel_timespec *);
 
 #endif /* _KPOSIX_PRIORITY_SCHEDULING */
 
diff -ur src.old/sys/posix4/sched.h src/sys/posix4/sched.h
--- src.old/sys/posix4/sched.h	2002-10-03 08:27:50.000000000 +0200
+++ src/sys/posix4/sched.h	2004-08-03 09:39:49.000000000 +0200
@@ -59,14 +59,14 @@
 #ifndef _KERNEL
 #include <sys/cdefs.h>
 
-struct timespec;
+struct __kernel_timespec;
 
 __BEGIN_DECLS
 int	sched_get_priority_max(int);
 int	sched_get_priority_min(int);
 int	sched_getparam(pid_t, struct sched_param *);
 int	sched_getscheduler(pid_t);
-int	sched_rr_get_interval(pid_t, struct timespec *);
+int	sched_rr_get_interval(pid_t, struct __kernel_timespec *);
 int	sched_setparam(pid_t, const struct sched_param *);
 int	sched_setscheduler(pid_t, int, const struct sched_param *);
 int	sched_yield(void);
diff -ur src.old/sys/sys/acct.h src/sys/sys/acct.h
--- src.old/sys/sys/acct.h	2003-03-28 16:27:30.000000000 +0100
+++ src/sys/sys/acct.h	2004-08-03 08:59:32.000000000 +0200
@@ -55,7 +55,7 @@
 	comp_t	  ac_utime;		/* user time */
 	comp_t	  ac_stime;		/* system time */
 	comp_t	  ac_etime;		/* elapsed time */
-	time_t	  ac_btime;		/* starting time */
+	__kernel_time_t	  ac_btime;		/* starting time */
 	uid_t	  ac_uid;		/* user id */
 	gid_t	  ac_gid;		/* group id */
 	u_int16_t ac_mem;		/* average memory usage */
diff -ur src.old/sys/sys/acl.h src/sys/sys/acl.h
--- src.old/sys/sys/acl.h	2003-08-04 04:13:04.000000000 +0200
+++ src/sys/sys/acl.h	2004-08-03 09:55:27.000000000 +0200
@@ -35,6 +35,9 @@
 #ifndef _SYS_ACL_H
 #define	_SYS_ACL_H
 
+#include <features.h>
+#include <sys/types.h>
+
 /*
  * POSIX.1e ACL types and related constants.
  */
@@ -155,73 +158,75 @@
 #else /* !_KERNEL */
 
 /*
- * Syscall interface -- use the library calls instead as the syscalls
+ * Syscall interface, defined in libc.
+ * Use the libposix1e calls instead as the syscalls
  * have strict acl entry ordering requirements.
  */
 __BEGIN_DECLS
-int	__acl_aclcheck_fd(int _filedes, acl_type_t _type, struct acl *_aclp);
-int	__acl_aclcheck_file(const char *_path, acl_type_t _type,
-	    struct acl *_aclp);
-int	__acl_aclcheck_link(const char *_path, acl_type_t _type,
-	    struct acl *_aclp);
-int	__acl_delete_fd(int _filedes, acl_type_t _type);
-int	__acl_delete_file(const char *_path_p, acl_type_t _type);
-int	__acl_delete_link(const char *_path_p, acl_type_t _type);
-int	__acl_get_fd(int _filedes, acl_type_t _type, struct acl *_aclp);
-int	__acl_get_file(const char *_path, acl_type_t _type, struct acl *_aclp);
-int	__acl_get_link(const char *_path, acl_type_t _type, struct acl *_aclp);
-int	__acl_set_fd(int _filedes, acl_type_t _type, struct acl *_aclp);
-int	__acl_set_file(const char *_path, acl_type_t _type, struct acl *_aclp);
-int	__acl_set_link(const char *_path, acl_type_t _type, struct acl *_aclp);
+extern int	__acl_aclcheck_fd(int _filedes, acl_type_t _type, struct acl *_aclp) __THROW;
+extern int	__acl_aclcheck_file(const char *_path, acl_type_t _type,
+	    struct acl *_aclp) __THROW;
+extern int	__acl_aclcheck_link(const char *_path, acl_type_t _type,
+	    struct acl *_aclp) __THROW;
+extern int	__acl_delete_fd(int _filedes, acl_type_t _type) __THROW;
+extern int	__acl_delete_file(const char *_path_p, acl_type_t _type) __THROW;
+extern int	__acl_delete_link(const char *_path_p, acl_type_t _type) __THROW;
+extern int	__acl_get_fd(int _filedes, acl_type_t _type, struct acl *_aclp) __THROW;
+extern int	__acl_get_file(const char *_path, acl_type_t _type, struct acl *_aclp) __THROW;
+extern int	__acl_get_link(const char *_path, acl_type_t _type, struct acl *_aclp) __THROW;
+extern int	__acl_set_fd(int _filedes, acl_type_t _type, struct acl *_aclp) __THROW;
+extern int	__acl_set_file(const char *_path, acl_type_t _type, struct acl *_aclp) __THROW;
+extern int	__acl_set_link(const char *_path, acl_type_t _type, struct acl *_aclp) __THROW;
 __END_DECLS
 
 /*
  * Supported POSIX.1e ACL manipulation and assignment/retrieval API
+ * (defined in libposix1e)
  * _np calls are local extensions that reflect an environment capable of
  * opening file descriptors of directories, and allowing additional
  * ACL type for different filesystems (i.e., AFS).
  */
 __BEGIN_DECLS
-int	acl_add_perm(acl_permset_t _permset_d, acl_perm_t _perm);
-int	acl_calc_mask(acl_t *_acl_p);
-int	acl_clear_perms(acl_permset_t _permset_d);
-int	acl_copy_entry(acl_entry_t _dest_d, acl_entry_t _src_d);
-ssize_t	acl_copy_ext(void *_buf_p, acl_t _acl, ssize_t _size);
-acl_t	acl_copy_int(const void *_buf_p);
-int	acl_create_entry(acl_t *_acl_p, acl_entry_t *_entry_p);
-int	acl_delete_entry(acl_t _acl, acl_entry_t _entry_d);
-int	acl_delete_fd_np(int _filedes, acl_type_t _type);
-int	acl_delete_file_np(const char *_path_p, acl_type_t _type);
-int	acl_delete_link_np(const char *_path_p, acl_type_t _type);
-int	acl_delete_def_file(const char *_path_p);
-int	acl_delete_def_link_np(const char *_path_p);
-int	acl_delete_perm(acl_permset_t _permset_d, acl_perm_t _perm);
-acl_t	acl_dup(acl_t _acl);
-int	acl_free(void *_obj_p);
-acl_t	acl_from_text(const char *_buf_p);
-int	acl_get_entry(acl_t _acl, int _entry_id, acl_entry_t *_entry_p);
-acl_t	acl_get_fd(int _fd);
-acl_t	acl_get_fd_np(int fd, acl_type_t _type);
-acl_t	acl_get_file(const char *_path_p, acl_type_t _type);
-acl_t	acl_get_link_np(const char *_path_p, acl_type_t _type);
-void	*acl_get_qualifier(acl_entry_t _entry_d);
-int	acl_get_perm_np(acl_permset_t _permset_d, acl_perm_t _perm);
-int	acl_get_permset(acl_entry_t _entry_d, acl_permset_t *_permset_p);
-int	acl_get_tag_type(acl_entry_t _entry_d, acl_tag_t *_tag_type_p);
-acl_t	acl_init(int _count);
-int	acl_set_fd(int _fd, acl_t _acl);
-int	acl_set_fd_np(int _fd, acl_t _acl, acl_type_t _type);
-int	acl_set_file(const char *_path_p, acl_type_t _type, acl_t _acl);
-int	acl_set_link_np(const char *_path_p, acl_type_t _type, acl_t _acl);
-int	acl_set_permset(acl_entry_t _entry_d, acl_permset_t _permset_d);
-int	acl_set_qualifier(acl_entry_t _entry_d, const void *_tag_qualifier_p);
-int	acl_set_tag_type(acl_entry_t _entry_d, acl_tag_t _tag_type);
-ssize_t	acl_size(acl_t _acl);
-char	*acl_to_text(acl_t _acl, ssize_t *_len_p);
-int	acl_valid(acl_t _acl);
-int	acl_valid_fd_np(int _fd, acl_type_t _type, acl_t _acl);
-int	acl_valid_file_np(const char *_path_p, acl_type_t _type, acl_t _acl);
-int	acl_valid_link_np(const char *_path_p, acl_type_t _type, acl_t _acl);
+extern int	acl_add_perm(acl_permset_t _permset_d, acl_perm_t _perm) __THROW;
+extern int	acl_calc_mask(acl_t *_acl_p) __THROW;
+extern int	acl_clear_perms(acl_permset_t _permset_d) __THROW;
+extern int	acl_copy_entry(acl_entry_t _dest_d, acl_entry_t _src_d) __THROW;
+extern ssize_t	acl_copy_ext(void *_buf_p, acl_t _acl, ssize_t _size) __THROW;
+extern acl_t	acl_copy_int(const void *_buf_p) __THROW;
+extern int	acl_create_entry(acl_t *_acl_p, acl_entry_t *_entry_p) __THROW;
+extern int	acl_delete_entry(acl_t _acl, acl_entry_t _entry_d) __THROW;
+extern int	acl_delete_fd_np(int _filedes, acl_type_t _type) __THROW;
+extern int	acl_delete_file_np(const char *_path_p, acl_type_t _type) __THROW;
+extern int	acl_delete_link_np(const char *_path_p, acl_type_t _type) __THROW;
+extern int	acl_delete_def_file(const char *_path_p) __THROW;
+extern int	acl_delete_def_link_np(const char *_path_p) __THROW;
+extern int	acl_delete_perm(acl_permset_t _permset_d, acl_perm_t _perm) __THROW;
+extern acl_t	acl_dup(acl_t _acl) __THROW;
+extern int	acl_free(void *_obj_p) __THROW;
+extern acl_t	acl_from_text(const char *_buf_p) __THROW;
+extern int	acl_get_entry(acl_t _acl, int _entry_id, acl_entry_t *_entry_p) __THROW;
+extern acl_t	acl_get_fd(int _fd) __THROW;
+extern acl_t	acl_get_fd_np(int fd, acl_type_t _type) __THROW;
+extern acl_t	acl_get_file(const char *_path_p, acl_type_t _type) __THROW;
+extern acl_t	acl_get_link_np(const char *_path_p, acl_type_t _type) __THROW;
+extern void	*acl_get_qualifier(acl_entry_t _entry_d) __THROW;
+extern int	acl_get_perm_np(acl_permset_t _permset_d, acl_perm_t _perm) __THROW;
+extern int	acl_get_permset(acl_entry_t _entry_d, acl_permset_t *_permset_p) __THROW;
+extern int	acl_get_tag_type(acl_entry_t _entry_d, acl_tag_t *_tag_type_p) __THROW;
+extern acl_t	acl_init(int _count) __THROW;
+extern int	acl_set_fd(int _fd, acl_t _acl) __THROW;
+extern int	acl_set_fd_np(int _fd, acl_t _acl, acl_type_t _type) __THROW;
+extern int	acl_set_file(const char *_path_p, acl_type_t _type, acl_t _acl) __THROW;
+extern int	acl_set_link_np(const char *_path_p, acl_type_t _type, acl_t _acl) __THROW;
+extern int	acl_set_permset(acl_entry_t _entry_d, acl_permset_t _permset_d) __THROW;
+extern int	acl_set_qualifier(acl_entry_t _entry_d, const void *_tag_qualifier_p) __THROW;
+extern int	acl_set_tag_type(acl_entry_t _entry_d, acl_tag_t _tag_type) __THROW;
+extern ssize_t	acl_size(acl_t _acl) __THROW;
+extern char	*acl_to_text(acl_t _acl, ssize_t *_len_p) __THROW;
+extern int	acl_valid(acl_t _acl) __THROW;
+extern int	acl_valid_fd_np(int _fd, acl_type_t _type, acl_t _acl) __THROW;
+extern int	acl_valid_file_np(const char *_path_p, acl_type_t _type, acl_t _acl) __THROW;
+extern int	acl_valid_link_np(const char *_path_p, acl_type_t _type, acl_t _acl) __THROW;
 __END_DECLS
 
 #endif /* !_KERNEL */
diff -ur src.old/sys/sys/aio.h src/sys/sys/aio.h
--- src.old/sys/sys/aio.h	2002-01-06 22:03:39.000000000 +0100
+++ src/sys/sys/aio.h	2004-08-03 08:59:32.000000000 +0200
@@ -116,9 +116,9 @@
 /*
  * Suspend until all specified I/O or timeout is complete.
  */
-int	aio_suspend(const struct aiocb * const[], int, const struct timespec *);
+int	aio_suspend(const struct aiocb * const[], int, const struct __kernel_timespec *);
 
-int	aio_waitcomplete(struct aiocb **, struct timespec *);
+int	aio_waitcomplete(struct aiocb **, struct __kernel_timespec *);
 
 __END_DECLS
 
diff -ur src.old/sys/sys/callout.h src/sys/sys/callout.h
--- src.old/sys/sys/callout.h	2002-03-19 21:18:36.000000000 +0100
+++ src/sys/sys/callout.h	2004-08-03 08:59:32.000000000 +0200
@@ -42,6 +42,8 @@
 #ifndef _SYS_CALLOUT_H_
 #define _SYS_CALLOUT_H_
 
+#include <features.h>
+
 #include <sys/queue.h>
 
 SLIST_HEAD(callout_list, callout);
diff -ur src.old/sys/sys/dvdio.h src/sys/sys/dvdio.h
--- src.old/sys/sys/dvdio.h	2002-03-04 22:08:35.000000000 +0100
+++ src/sys/sys/dvdio.h	2004-08-03 08:59:32.000000000 +0200
@@ -31,6 +31,8 @@
 #ifndef _SYS_DVDIO_H_
 #define _SYS_DVDIO_H_
 
+#include <sys/types.h>
+
 struct dvd_layer {
 	u_int8_t book_type	:4;
 	u_int8_t book_version	:4;
diff -ur src.old/sys/sys/errno.h src/sys/sys/errno.h
--- src.old/sys/sys/errno.h	2002-10-07 08:25:23.000000000 +0200
+++ src/sys/sys/errno.h	2004-08-03 10:17:10.000000000 +0200
@@ -39,16 +39,8 @@
  * $FreeBSD: src/sys/sys/errno.h,v 1.25 2002/10/07 06:25:23 phk Exp $
  */
 
-#ifndef _SYS_ERRNO_H_
-#define _SYS_ERRNO_H_
-
-#ifndef _KERNEL
-#include <sys/cdefs.h>
-__BEGIN_DECLS
-int *	__error(void);
-__END_DECLS
-#define	errno		(* __error())
-#endif
+#ifndef _ERRNO_H_
+#define _ERRNO_H_
 
 #define	EPERM		1		/* Operation not permitted */
 #define	ENOENT		2		/* No such file or directory */
@@ -65,7 +57,7 @@
 #define	ENOMEM		12		/* Cannot allocate memory */
 #define	EACCES		13		/* Permission denied */
 #define	EFAULT		14		/* Bad address */
-#ifndef _POSIX_SOURCE
+#ifdef	__USE_BSD
 #define	ENOTBLK		15		/* Block device required */
 #endif
 #define	EBUSY		16		/* Device busy */
@@ -78,7 +70,7 @@
 #define	ENFILE		23		/* Too many open files in system */
 #define	EMFILE		24		/* Too many open files */
 #define	ENOTTY		25		/* Inappropriate ioctl for device */
-#ifndef _POSIX_SOURCE
+#ifdef	__USE_BSD
 #define	ETXTBSY		26		/* Text file busy */
 #endif
 #define	EFBIG		27		/* File too large */
@@ -88,13 +80,22 @@
 #define	EMLINK		31		/* Too many links */
 #define	EPIPE		32		/* Broken pipe */
 
+#endif /* <errno.h> included.  */
+
 /* math software */
+
+#if !defined(__Emath_defined) &&  (defined(_ERRNO_H) || defined(__need_Emath))
 #define	EDOM		33		/* Numerical argument out of domain */
+#endif /* Emath not defined and <errno.h> included or need Emath.  */
+#if !defined(__Emath_defined) &&  (defined(_ERRNO_H) || defined(__need_Emath))
 #define	ERANGE		34		/* Result too large */
+#endif /* Emath not defined and <errno.h> included or need Emath.  */
+
+#ifdef _ERRNO_H
 
 /* non-blocking and interrupt i/o */
 #define	EAGAIN		35		/* Resource temporarily unavailable */
-#ifndef _POSIX_SOURCE
+#ifdef	__USE_BSD
 #define	EWOULDBLOCK	EAGAIN		/* Operation would block */
 #define	EINPROGRESS	36		/* Operation now in progress */
 #define	EALREADY	37		/* Operation already in progress */
@@ -129,18 +130,18 @@
 #define	ECONNREFUSED	61		/* Connection refused */
 
 #define	ELOOP		62		/* Too many levels of symbolic links */
-#endif /* _POSIX_SOURCE */
+#endif /* __USE_BSD */
 #define	ENAMETOOLONG	63		/* File name too long */
 
 /* should be rearranged */
-#ifndef _POSIX_SOURCE
+#ifdef	__USE_BSD
 #define	EHOSTDOWN	64		/* Host is down */
 #define	EHOSTUNREACH	65		/* No route to host */
-#endif /* _POSIX_SOURCE */
+#endif /* __USE_BSD */
 #define	ENOTEMPTY	66		/* Directory not empty */
 
 /* quotas & mush */
-#ifndef _POSIX_SOURCE
+#ifdef	__USE_BSD
 #define	EPROCLIM	67		/* Too many processes */
 #define	EUSERS		68		/* Too many users */
 #define	EDQUOT		69		/* Disc quota exceeded */
@@ -153,27 +154,36 @@
 #define	EPROGUNAVAIL	74		/* RPC prog. not avail */
 #define	EPROGMISMATCH	75		/* Program version wrong */
 #define	EPROCUNAVAIL	76		/* Bad procedure for program */
-#endif /* _POSIX_SOURCE */
+#endif /* __USE_BSD */
 
 #define	ENOLCK		77		/* No locks available */
 #define	ENOSYS		78		/* Function not implemented */
-
-#ifndef _POSIX_SOURCE
 #define	EFTYPE		79		/* Inappropriate file type or format */
+
+#ifdef __USE_BSD
 #define	EAUTH		80		/* Authentication error */
 #define	ENEEDAUTH	81		/* Need authenticator */
 #define	EIDRM		82		/* Identifier removed */
 #define	ENOMSG		83		/* No message of desired type */
 #define	EOVERFLOW	84		/* Value too large to be stored in data type */
 #define	ECANCELED	85		/* Operation canceled */
+#endif /* __USE_BSD */
+
+#endif /* <errno.h> included.  */
+
+#if !defined(__Emath_defined) &&  (defined(_ERRNO_H) || defined(__need_Emath))
 #define	EILSEQ		86		/* Illegal byte sequence */
+#endif /* Emath not defined and <errno.h> included or need Emath.  */
+
+#ifdef _ERRNO_H
+
+#ifdef __USE_BSD
 #define	ENOATTR		87		/* Attribute not found */
 
 #define EDOOFUS		88		/* Programming error */
 
 #define	ELAST		88		/* Must be equal largest errno */
-
-#endif /* _POSIX_SOURCE */
+#endif /* __USE_BSD */
 
 #ifdef _KERNEL
 /* pseudo-errors returned inside kernel to modify return to process */
@@ -183,4 +193,22 @@
 #define	EDIRIOCTL	(-4)		/* do direct ioctl in GEOM */
 #endif
 
-#endif
+#ifndef __ASSEMBLER__
+/* We now need a declaration of the `errno' variable.  */
+extern int errno;
+
+/* Function to get address of global `errno' variable.  */
+extern int *__errno_location (void) __THROW __attribute__ ((__const__));
+
+# if defined _LIBC
+/* We wouldn't need a special macro anymore but it is history.  */
+#  define __set_errno(val) (*__errno_location ()) = (val)
+# endif /* _LIBC */
+
+# if !defined _LIBC || defined _LIBC_REENTRANT
+/* When using threads, errno is a per-thread value.  */
+#  define errno (*__errno_location ())
+# endif
+#endif /* !__ASSEMBLER__ */
+
+#endif /* <errno.h> included.  */
diff -ur src.old/sys/sys/event.h src/sys/sys/event.h
--- src.old/sys/sys/event.h	2003-02-02 20:39:51.000000000 +0100
+++ src/sys/sys/event.h	2004-08-03 10:17:59.000000000 +0200
@@ -184,13 +184,13 @@
 #else 	/* !_KERNEL */
 
 #include <sys/cdefs.h>
-struct timespec;
+struct __kernel_timespec;
 
 __BEGIN_DECLS
 int     kqueue(void);
 int     kevent(int kq, const struct kevent *changelist, int nchanges,
 	    struct kevent *eventlist, int nevents,
-	    const struct timespec *timeout);
+	    const struct __kernel_timespec *timeout);
 __END_DECLS
 
 #endif /* !_KERNEL */
diff -ur src.old/sys/sys/extattr.h src/sys/sys/extattr.h
--- src.old/sys/sys/extattr.h	2003-06-04 06:04:24.000000000 +0200
+++ src/sys/sys/extattr.h	2004-08-03 10:20:03.000000000 +0200
@@ -50,36 +50,36 @@
 	    struct ucred *cred, struct thread *td, int access);
 
 #else
-#include <sys/cdefs.h>
+#include <features.h>
 
 struct iovec;
 
 __BEGIN_DECLS
-int	extattrctl(const char *_path, int _cmd, const char *_filename,
-	    int _attrnamespace, const char *_attrname);
-int	extattr_delete_fd(int _fd, int _attrnamespace, const char *_attrname);
-int	extattr_delete_file(const char *_path, int _attrnamespace,
-	    const char *_attrname);
-int	extattr_delete_link(const char *_path, int _attrnamespace,
-	    const char *_attrname);
-ssize_t	extattr_get_fd(int _fd, int _attrnamespace, const char *_attrname,
-	    void *_data, size_t _nbytes);
-ssize_t	extattr_get_file(const char *_path, int _attrnamespace,
-	    const char *_attrname, void *_data, size_t _nbytes);
-ssize_t	extattr_get_link(const char *_path, int _attrnamespace,
-	    const char *_attrname, void *_data, size_t _nbytes);
-ssize_t	extattr_list_fd(int _fd, int _attrnamespace, void *_data,
-	    size_t _nbytes);
-ssize_t	extattr_list_file(const char *_path, int _attrnamespace, void *_data,
-	    size_t _nbytes);
-ssize_t	extattr_list_link(const char *_path, int _attrnamespace, void *_data,
-	    size_t _nbytes);
-int	extattr_set_fd(int _fd, int _attrnamespace, const char *_attrname,
-	    const void *_data, size_t _nbytes);
-int	extattr_set_file(const char *_path, int _attrnamespace,
-	    const char *_attrname, const void *_data, size_t _nbytes);
-int	extattr_set_link(const char *_path, int _attrnamespace,
-	    const char *_attrname, const void *_data, size_t _nbytes);
+extern int	extattrctl(const char *_path, int _cmd, const char *_filename,
+	    int _attrnamespace, const char *_attrname) __THROW;
+extern int	extattr_delete_fd(int _fd, int _attrnamespace, const char *_attrname) __THROW;
+extern int	extattr_delete_file(const char *_path, int _attrnamespace,
+	    const char *_attrname) __THROW;
+extern int	extattr_delete_link(const char *_path, int _attrnamespace,
+	    const char *_attrname) __THROW;
+extern ssize_t	extattr_get_fd(int _fd, int _attrnamespace, const char *_attrname,
+	    void *_data, size_t _nbytes) __THROW;
+extern ssize_t	extattr_get_file(const char *_path, int _attrnamespace,
+	    const char *_attrname, void *_data, size_t _nbytes) __THROW;
+extern ssize_t	extattr_get_link(const char *_path, int _attrnamespace,
+	    const char *_attrname, void *_data, size_t _nbytes) __THROW;
+extern ssize_t	extattr_list_fd(int _fd, int _attrnamespace, void *_data,
+	    size_t _nbytes) __THROW;
+extern ssize_t	extattr_list_file(const char *_path, int _attrnamespace, void *_data,
+	    size_t _nbytes) __THROW;
+extern ssize_t	extattr_list_link(const char *_path, int _attrnamespace, void *_data,
+	    size_t _nbytes) __THROW;
+extern int	extattr_set_fd(int _fd, int _attrnamespace, const char *_attrname,
+	    const void *_data, size_t _nbytes) __THROW;
+extern int	extattr_set_file(const char *_path, int _attrnamespace,
+	    const char *_attrname, const void *_data, size_t _nbytes) __THROW;
+extern int	extattr_set_link(const char *_path, int _attrnamespace,
+	    const char *_attrname, const void *_data, size_t _nbytes) __THROW;
 __END_DECLS
 
 #endif /* !_KERNEL */
diff -ur src.old/sys/sys/filedesc.h src/sys/sys/filedesc.h
--- src.old/sys/sys/filedesc.h	2003-11-11 23:07:29.000000000 +0100
+++ src/sys/sys/filedesc.h	2004-08-03 10:20:40.000000000 +0200
@@ -39,6 +39,7 @@
 
 #include <sys/_lock.h>
 #include <sys/_mutex.h>
+#include <sys/types.h>
 #include <sys/queue.h>
 
 /*
diff -ur src.old/sys/sys/jail.h src/sys/sys/jail.h
--- src.old/sys/sys/jail.h	2003-04-09 04:55:18.000000000 +0200
+++ src/sys/sys/jail.h	2004-08-03 10:22:02.000000000 +0200
@@ -13,6 +13,10 @@
 #ifndef _SYS_JAIL_H_
 #define _SYS_JAIL_H_
 
+#include <features.h>
+
+#include <sys/types.h>
+
 struct jail {
 	u_int32_t	version;
 	char		*path;
@@ -31,8 +35,10 @@
 
 #ifndef _KERNEL
 
-int jail(struct jail *);
-int jail_attach(int);
+__BEGIN_DECLS
+extern int jail(struct jail *) __THROW;
+extern int jail_attach(int) __THROW;
+__END_DECLS
 
 #else /* _KERNEL */
 
diff -ur src.old/sys/sys/kernel.h src/sys/sys/kernel.h
--- src.old/sys/sys/kernel.h	2003-10-17 17:46:31.000000000 +0200
+++ src/sys/sys/kernel.h	2004-08-03 08:59:32.000000000 +0200
@@ -66,7 +66,7 @@
 extern char kernelname[MAXPATHLEN];
 
 /* 1.2 */
-extern struct timeval boottime;
+extern struct __kernel_timeval boottime;
 
 extern int tick;			/* usec per tick (1000000 / hz) */
 extern int hz;				/* system clock's frequency */
diff -ur src.old/sys/sys/linker.h src/sys/sys/linker.h
--- src.old/sys/sys/linker.h	2003-05-01 05:31:17.000000000 +0200
+++ src/sys/sys/linker.h	2004-08-03 08:59:32.000000000 +0200
@@ -172,6 +172,13 @@
 int linker_ddb_symbol_values(c_linker_sym_t _sym, linker_symval_t *_symval);
 
 
+#else
+
+#include <features.h>
+
+#include <sys/param.h>
+#include <sys/types.h>
+
 #endif	/* _KERNEL */
 
 /*
@@ -266,26 +273,45 @@
     size_t	size;		/* size in bytes */
 };
 
+/* Possible commands for kldsym.  */
+enum
+{
+  KLDSYM_LOOKUP = 1		/* Kernel symbol lookup.  */
+#define KLDSYM_LOOKUP KLDSYM_LOOKUP
+};
+
 struct kld_sym_lookup {
     int		version;	/* set to sizeof(struct kld_sym_lookup) */
     char	*symname;	/* Symbol name we are looking up */
     u_long	symvalue;
     size_t	symsize;
 };
-#define KLDSYM_LOOKUP	1
 
 #ifndef _KERNEL
 
-#include <sys/cdefs.h>
-
 __BEGIN_DECLS
-int	kldload(const char* _file);
-int	kldunload(int _fileid);
-int	kldfind(const char* _file);
-int	kldnext(int _fileid);
-int	kldstat(int _fileid, struct kld_file_stat* _stat);
-int	kldfirstmod(int _fileid);
-int	kldsym(int _fileid, int _cmd, void *_data);
+
+/* Load a KLD kernel module into the kernel.  */
+extern int kldload (__const char *__file) __THROW;
+
+/* Unload a KLD kernel module from the kernel.  */
+extern int kldunload (int __fileid) __THROW;
+
+/* Return the fileid of loaded KLD kernel module.  */
+extern int kldfind (__const char *__file) __THROW;
+
+/* Return the fileid of the next loaded KLD kernel module after FILEID.  */
+extern int kldnext (int __fileid) __THROW;
+
+/* Return info about the loaded KLD kernel module FILEID in *STATP.  */
+extern int kldstat (int __fileid, struct kld_file_stat *__statp) __THROW;
+
+/* Return the moduleid of the first module referenced by FILEID.  */
+extern int kldfirstmod (int __fileid) __THROW;
+
+/* Perform an operation related to kernel module symbols.  */
+extern int kldsym (int __fileid, int __cmd, void*__data) __THROW;
+
 __END_DECLS
 
 #endif
diff -ur src.old/sys/sys/lock.h src/sys/sys/lock.h
--- src.old/sys/sys/lock.h	2003-09-20 00:01:56.000000000 +0200
+++ src/sys/sys/lock.h	2004-08-03 10:22:30.000000000 +0200
@@ -32,6 +32,7 @@
 #ifndef _SYS_LOCK_H_
 #define _SYS_LOCK_H_
 
+#include <sys/types.h>
 #include <sys/queue.h>
 #include <sys/_lock.h>
 
diff -ur src.old/sys/sys/memrange.h src/sys/sys/memrange.h
--- src.old/sys/sys/memrange.h	2002-09-15 17:07:50.000000000 +0200
+++ src/sys/sys/memrange.h	2004-08-03 08:59:32.000000000 +0200
@@ -4,6 +4,11 @@
  * $FreeBSD: src/sys/sys/memrange.h,v 1.6 2002/09/15 15:07:50 dwmalone Exp $
  */
 
+#ifndef _SYS_MEMRANGE_H_
+#define _SYS_MEMRANGE_H_
+
+#include <sys/types.h>
+
 /* Memory range attributes */
 #define MDF_UNCACHEABLE		(1<<0)	/* region not cached */
 #define MDF_WRITECOMBINE	(1<<1)	/* region supports "write combine" action */
@@ -69,3 +74,4 @@
 extern void mem_range_AP_init(void);
 #endif
 
+#endif /* _SYS_MEMRANGE_H_ */
diff -ur src.old/sys/sys/param.h src/sys/sys/param.h
--- src.old/sys/sys/param.h	2004-02-23 06:34:20.000000000 +0100
+++ src/sys/sys/param.h	2004-08-03 16:52:55.000000000 +0200
@@ -42,7 +42,9 @@
 #ifndef _SYS_PARAM_H_
 #define _SYS_PARAM_H_
 
-#include <sys/_null.h>
+#ifndef NULL
+#define NULL 0
+#endif
 
 #define	BSD	199506		/* System version (year & month). */
 #define BSD4_3	1
@@ -61,9 +63,8 @@
 #undef __FreeBSD_version
 #define __FreeBSD_version 502010	/* Master, propagated to newvers */
 
-#ifndef LOCORE
+/* Some inet code expects that this file defines the 'u_int32_t' type.  */
 #include <sys/types.h>
-#endif
 
 /*
  * Machine-independent constants (some used in following include files).
@@ -73,6 +74,7 @@
  * MAXLOGNAME should be == UT_NAMESIZE+1 (see <utmp.h>)
  */
 #include <sys/syslimits.h>
+#include <limits.h>
 
 #define	MAXCOMLEN	19		/* max command name remembered */
 #define	MAXINTERP	32		/* max interpreter file name length */
@@ -183,8 +185,6 @@
 #define	PCATCH	0x100		/* OR'd with pri for tsleep to check signals */
 #define	PDROP	0x200	/* OR'd with pri to stop re-entry of interlock mutex */
 
-#define	NZERO	0		/* default "nice" */
-
 #define	NBBY	8		/* number of bits in a byte */
 #define	NBPW	sizeof(int)	/* number of bytes per word (integer) */
 
@@ -285,28 +285,6 @@
 #endif /* _KERNEL */
 
 /*
- * Constants for setting the parameters of the kernel memory allocator.
- *
- * 2 ** MINBUCKET is the smallest unit of memory that will be
- * allocated. It must be at least large enough to hold a pointer.
- *
- * Units of memory less or equal to MAXALLOCSAVE will permanently
- * allocate physical memory; requests for these size pieces of
- * memory are quite fast. Allocations greater than MAXALLOCSAVE must
- * always allocate and free physical memory; requests for these
- * size allocations should be done infrequently as they will be slow.
- *
- * Constraints: PAGE_SIZE <= MAXALLOCSAVE <= 2 ** (MINBUCKET + 14), and
- * MAXALLOCSIZE must be a power of two.
- */
-#if defined(__alpha__) || defined(__ia64__) || defined(__sparc64__)
-#define MINBUCKET	5		/* 5 => min allocation of 32 bytes */
-#else
-#define MINBUCKET	4		/* 4 => min allocation of 16 bytes */
-#endif
-#define MAXALLOCSAVE	(2 * PAGE_SIZE)
-
-/*
  * Scale factor for scaled integers used to count %cpu time and load avgs.
  *
  * The number of CPU `tick's that map to a unique `%age' can be expressed
diff -ur src.old/sys/sys/pciio.h src/sys/sys/pciio.h
--- src.old/sys/sys/pciio.h	2001-09-05 03:22:14.000000000 +0200
+++ src/sys/sys/pciio.h	2004-08-03 08:59:32.000000000 +0200
@@ -31,6 +31,7 @@
 #ifndef _SYS_PCIIO_H_
 #define	_SYS_PCIIO_H_
 
+#include <sys/types.h>
 #include <sys/ioccom.h>
 
 #define PCI_MAXNAMELEN	16
diff -ur src.old/sys/sys/pipe.h src/sys/sys/pipe.h
--- src.old/sys/sys/pipe.h	2003-11-12 04:14:31.000000000 +0100
+++ src/sys/sys/pipe.h	2004-08-03 16:53:34.000000000 +0200
@@ -25,7 +25,7 @@
 #define _SYS_PIPE_H_
 
 #ifndef _KERNEL
-#include <sys/time.h>			/* for struct timespec */
+#include <sys/time.h>			/* for struct __kernel_timespec */
 #include <sys/selinfo.h>		/* for struct selinfo */
 #include <vm/vm.h>			/* for vm_page_t */
 #include <machine/param.h>		/* for PAGE_SIZE */
@@ -108,9 +108,9 @@
 	struct	pipebuf pipe_buffer;	/* data storage */
 	struct	pipemapping pipe_map;	/* pipe mapping for direct I/O */
 	struct	selinfo pipe_sel;	/* for compat with select */
-	struct	timespec pipe_atime;	/* time of last access */
-	struct	timespec pipe_mtime;	/* time of last modify */
-	struct	timespec pipe_ctime;	/* time of status change */
+	struct	__kernel_timespec pipe_atime;	/* time of last access */
+	struct	__kernel_timespec pipe_mtime;	/* time of last modify */
+	struct	__kernel_timespec pipe_ctime;	/* time of status change */
 	struct	sigio *pipe_sigio;	/* information for async I/O */
 	struct	pipe *pipe_peer;	/* link with other direction */
 	u_int	pipe_state;		/* pipe status info */
diff -ur src.old/sys/sys/proc.h src/sys/sys/proc.h
--- src.old/sys/sys/proc.h	2003-11-16 00:57:19.000000000 +0100
+++ src/sys/sys/proc.h	2004-08-03 16:54:47.000000000 +0200
@@ -56,12 +56,13 @@
 #include <sys/sigio.h>
 #include <sys/signal.h>
 #ifndef _KERNEL
-#include <sys/time.h>			/* For structs itimerval, timeval. */
+#include <sys/time.h>			/* For structs __kernel_itimerval, __kernel_timeval. */
 #else
 #include <sys/pcpu.h>
 #endif
 #include <sys/ucontext.h>
 #include <sys/ucred.h>
+#include <machine/types.h>
 #include <machine/proc.h>		/* Machine-dependent proc substruct. */
 
 /*
@@ -560,7 +561,7 @@
 	pid_t		p_oppid;	/* (c + e) Save ppid in ptrace. XXX */
 	struct vmspace	*p_vmspace;	/* (b) Address space. */
 	u_int		p_swtime;	/* (j) Time swapped in or out. */
-	struct itimerval p_realtimer;	/* (c) Alarm timer. */
+	struct __kernel_itimerval p_realtimer;	/* (c) Alarm timer. */
 	struct bintime	p_runtime;	/* (j) Real time. */
 	u_int64_t	p_uu;		/* (j) Previous user time in usec. */
 	u_int64_t	p_su;		/* (j) Previous system time in usec. */
diff -ur src.old/sys/sys/procfs.h src/sys/sys/procfs.h
--- src.old/sys/sys/procfs.h	2001-08-16 10:35:51.000000000 +0200
+++ src/sys/sys/procfs.h	2004-08-03 16:56:04.000000000 +0200
@@ -65,8 +65,6 @@
     gregset_t	pr_reg;		/* General purpose registers (1) */
 } prstatus_t;
 
-typedef fpregset_t prfpregset_t;
-
 #define PRFNAMESZ	16	/* Maximum command length saved */
 #define PRARGSZ		80	/* Maximum argument bytes saved */
 
@@ -79,4 +77,15 @@
     char	pr_psargs[PRARGSZ+1];	/* Arguments, null terminated (1) */
 } prpsinfo_t;
 
+/* Addresses.  */
+typedef void *psaddr_t;
+
+/* Register sets.  */
+typedef gregset_t prgregset_t;
+typedef fpregset_t prfpregset_t;
+
+/* We don't have any differences between processes and threads,
+   therefore have only one PID type.  */
+typedef __pid_t lwpid_t;
+
 #endif /* _SYS_PROCFS_H_ */
diff -ur src.old/sys/sys/reboot.h src/sys/sys/reboot.h
--- src.old/sys/sys/reboot.h	2003-11-15 11:04:05.000000000 +0100
+++ src/sys/sys/reboot.h	2004-08-03 08:59:32.000000000 +0200
@@ -37,6 +37,8 @@
 #ifndef _SYS_REBOOT_H_
 #define	_SYS_REBOOT_H_
 
+#include <features.h>
+
 /*
  * Arguments to reboot system call.  These are passed to
  * the boot program and on to init.
@@ -68,4 +70,11 @@
 
 #define	RB_BOOTINFO	0x80000000	/* have `struct bootinfo *' arg */
 
+__BEGIN_DECLS
+
+/* Reboot or halt the system.  */
+extern int reboot (int __howto) __THROW;
+
+__END_DECLS
+
 #endif
diff -ur src.old/sys/sys/resourcevar.h src/sys/sys/resourcevar.h
--- src.old/sys/sys/resourcevar.h	2003-10-28 21:46:23.000000000 +0100
+++ src/sys/sys/resourcevar.h	2004-08-03 16:57:27.000000000 +0200
@@ -39,6 +39,8 @@
 
 #include <sys/resource.h>
 #include <sys/queue.h>
+#include <sys/time.h>
+#include <sys/types.h>
 #ifdef _KERNEL
 #include <sys/_lock.h>
 #include <sys/_mutex.h>
@@ -52,7 +54,7 @@
 #define	pstat_startzero	p_ru
 	struct	rusage p_ru;		/* stats for this proc */
 	struct	rusage p_cru;		/* sum of stats for reaped children */
-	struct	itimerval p_timer[3];	/* virtual-time timers */
+	struct	__kernel_itimerval p_timer[3];	/* virtual-time timers */
 #define	pstat_endzero	pstat_startcopy
 
 #define	pstat_startcopy	p_prof
@@ -65,7 +67,7 @@
 		u_int	pr_ticks;	/* temp storage for ticks until AST */
 	} p_prof;
 #define	pstat_endcopy	p_start
-	struct	timeval p_start;	/* starting time */
+	struct	__kernel_timeval p_start;	/* starting time */
 };
 
 /*
@@ -101,8 +103,8 @@
 
 void	 addupc_intr(struct thread *td, uintptr_t pc, u_int ticks);
 void	 addupc_task(struct thread *td, uintptr_t pc, u_int ticks);
-void	 calcru(struct proc *p, struct timeval *up, struct timeval *sp,
-	    struct timeval *ip);
+void	 calcru(struct proc *p, struct __kernel_timeval *up, struct __kernel_timeval *sp,
+	    struct __kernel_timeval *ip);
 int	 chgproccnt(struct uidinfo *uip, int diff, int max);
 int	 chgsbsize(struct uidinfo *uip, u_int *hiwat, u_int to,
 	    rlim_t max);
diff -ur src.old/sys/sys/rtprio.h src/sys/sys/rtprio.h
--- src.old/sys/sys/rtprio.h	2002-03-19 21:18:41.000000000 +0100
+++ src/sys/sys/rtprio.h	2004-08-03 17:00:27.000000000 +0200
@@ -36,6 +36,10 @@
 
 #include <sys/priority.h>
 
+#include <features.h>
+
+#include <sys/types.h>
+
 /*
  * Process realtime-priority specifications to rtprio.
  */
@@ -65,7 +69,6 @@
 #define RTP_LOOKUP		0
 #define RTP_SET			1
 
-#ifndef LOCORE
 /*
  * Scheduling class information.
  */
@@ -79,13 +82,15 @@
 int	rtp_to_pri(struct rtprio *, struct ksegrp *);
 void	pri_to_rtp(struct ksegrp *, struct rtprio *);
 #endif
-#endif
 
 #ifndef _KERNEL
 #include <sys/cdefs.h>
 
 __BEGIN_DECLS
-int	rtprio(int, pid_t, struct rtprio *);
+extern int	rtprio(int, pid_t, struct rtprio *) __THROW;
+#ifdef _LIBC
+extern int	__rtprio(int, pid_t, struct rtprio *);
+#endif
 __END_DECLS
 #endif	/* !_KERNEL */
 #endif	/* !_SYS_RTPRIO_H_ */
diff -ur src.old/sys/sys/signalvar.h src/sys/sys/signalvar.h
--- src.old/sys/sys/signalvar.h	2003-11-10 04:11:08.000000000 +0100
+++ src/sys/sys/signalvar.h	2004-08-03 17:01:24.000000000 +0200
@@ -47,6 +47,9 @@
  * not exported to user programs.
  */
 
+#define	_SIG_WORDS	4
+#define	_SIG_MAXSIG	128
+
 /*
  * Logical process signal actions and state, needed only within the process
  * The mapping between sigacts and proc structures is 1:1 except for rfork()
@@ -99,10 +102,14 @@
 typedef void __osiginfohandler_t(int, osiginfo_t *, void *);
 #endif /* _KERNEL && COMPAT_43 */
 
+#endif
+
 /* additional signal action values, used only temporarily/internally */
 #define	SIG_CATCH	((__sighandler_t *)2)
 #define SIG_HOLD        ((__sighandler_t *)3)
 
+#if 0
+
 /*
  * get signal action for process and signal; currently only for current process
  */
@@ -185,7 +192,7 @@
 	int i;
 
 	for (i = 0; i < _SIG_WORDS; i++) {
-		if (set->__bits[i])
+		if (set->__sigbits[i])
 			return (0);
 	}
 	return (1);
@@ -197,7 +204,7 @@
 	int i;
 
 	for (i = 0; i < _SIG_WORDS; i++) {
-		if (set1->__bits[i] != set2->__bits[i])
+		if (set1->__sigbits[i] != set2->__sigbits[i])
 			return (0);
 	}
 	return (1);
diff -ur src.old/sys/sys/sysctl.h src/sys/sys/sysctl.h
--- src.old/sys/sys/sysctl.h	2003-11-14 22:37:35.000000000 +0100
+++ src/sys/sys/sysctl.h	2004-08-06 23:58:18.000000000 +0200
@@ -40,7 +40,103 @@
 #ifndef _SYS_SYSCTL_H_
 #define	_SYS_SYSCTL_H_
 
-#include <sys/queue.h>
+#include <features.h>
+#include <vm/vm_param.h>
+
+/****************************************  Stolen from sys/mount.h */
+
+/*
+ * Sysctl CTL_VFS definitions.
+ *
+ * Second level identifier specifies which filesystem. Second level
+ * identifier VFS_VFSCONF returns information about all filesystems.
+ * Second level identifier VFS_GENERIC is non-terminal.
+ */
+#define	VFS_VFSCONF		0	/* get configured filesystems */
+#define	VFS_GENERIC		0	/* generic filesystem information */
+/*
+ * Third level identifiers for VFS_GENERIC are given below; third
+ * level identifiers for specific filesystems are given in their
+ * mount specific header files.
+ */
+#define VFS_MAXTYPENUM	1	/* int: highest defined filesystem type */
+#define VFS_CONF	2	/* struct: vfsconf for filesystem given
+				   as next argument */
+
+/****************************************  End of sys/mount.h */
+
+/****************************************  Stolen from sys/socket.h */
+/*
+ * Definitions for network related sysctl, CTL_NET.
+ *
+ * Second level is protocol family.
+ * Third level is protocol number.
+ *
+ * Further levels are defined by the individual families below.
+ */
+#define NET_MAXID	AF_MAX
+
+#define CTL_NET_NAMES { \
+	{ 0, 0 }, \
+	{ "unix", CTLTYPE_NODE }, \
+	{ "inet", CTLTYPE_NODE }, \
+	{ "implink", CTLTYPE_NODE }, \
+	{ "pup", CTLTYPE_NODE }, \
+	{ "chaos", CTLTYPE_NODE }, \
+	{ "xerox_ns", CTLTYPE_NODE }, \
+	{ "iso", CTLTYPE_NODE }, \
+	{ "emca", CTLTYPE_NODE }, \
+	{ "datakit", CTLTYPE_NODE }, \
+	{ "ccitt", CTLTYPE_NODE }, \
+	{ "ibm_sna", CTLTYPE_NODE }, \
+	{ "decnet", CTLTYPE_NODE }, \
+	{ "dec_dli", CTLTYPE_NODE }, \
+	{ "lat", CTLTYPE_NODE }, \
+	{ "hylink", CTLTYPE_NODE }, \
+	{ "appletalk", CTLTYPE_NODE }, \
+	{ "route", CTLTYPE_NODE }, \
+	{ "link_layer", CTLTYPE_NODE }, \
+	{ "xtp", CTLTYPE_NODE }, \
+	{ "coip", CTLTYPE_NODE }, \
+	{ "cnt", CTLTYPE_NODE }, \
+	{ "rtip", CTLTYPE_NODE }, \
+	{ "ipx", CTLTYPE_NODE }, \
+	{ "sip", CTLTYPE_NODE }, \
+	{ "pip", CTLTYPE_NODE }, \
+	{ "isdn", CTLTYPE_NODE }, \
+	{ "key", CTLTYPE_NODE }, \
+	{ "inet6", CTLTYPE_NODE }, \
+	{ "natm", CTLTYPE_NODE }, \
+	{ "atm", CTLTYPE_NODE }, \
+	{ "hdrcomplete", CTLTYPE_NODE }, \
+	{ "netgraph", CTLTYPE_NODE }, \
+	{ "snp", CTLTYPE_NODE }, \
+	{ "scp", CTLTYPE_NODE }, \
+}
+
+/*
+ * PF_ROUTE - Routing table
+ *
+ * Three additional levels are defined:
+ *	Fourth: address family, 0 is wildcard
+ *	Fifth: type of info, defined below
+ *	Sixth: flag(s) to mask with for NET_RT_FLAGS
+ */
+#define NET_RT_DUMP	1		/* dump; may limit to a.f. */
+#define NET_RT_FLAGS	2		/* by flags, e.g. RESOLVING */
+#define NET_RT_IFLIST	3		/* survey interface list */
+#define	NET_RT_IFMALIST	4		/* return multicast address list */
+#define	NET_RT_MAXID	5
+
+#define CTL_NET_RT_NAMES { \
+	{ 0, 0 }, \
+	{ "dump", CTLTYPE_STRUCT }, \
+	{ "flags", CTLTYPE_STRUCT }, \
+	{ "iflist", CTLTYPE_STRUCT }, \
+	{ "ifmalist", CTLTYPE_STRUCT }, \
+}
+/****************************************  End of sys/socket.h */
+
 
 struct thread;
 /*
@@ -337,7 +433,7 @@
 #define	KERN_SECURELVL	 	 9	/* int: system security level */
 #define	KERN_HOSTNAME		10	/* string: hostname */
 #define	KERN_HOSTID		11	/* int: host identifier */
-#define	KERN_CLOCKRATE		12	/* struct: struct clockrate */
+#define	KERN_CLOCKRATE		12	/* struct: struct clockinfo */
 #define	KERN_VNODE		13	/* struct: vnode structures */
 #define	KERN_PROC		14	/* struct: process entries */
 #define	KERN_FILE		15	/* struct: file entries */
@@ -622,13 +718,19 @@
 void	sysctl_wire_old_buffer(struct sysctl_req *req, size_t len);
 
 #else	/* !_KERNEL */
-#include <sys/cdefs.h>
+#define __need_size_t
+#include <stddef.h>
 
 __BEGIN_DECLS
-int	sysctl(int *, u_int, void *, size_t *, void *, size_t);
-int	sysctlbyname(const char *, void *, size_t *, void *, size_t);
-int	sysctlnametomib(const char *, int *, size_t *);
+extern int	sysctl(int *, u_int, void *, size_t *, void *, size_t) __THROW;
+extern int	sysctlbyname(const char *, void *, size_t *, void *, size_t) __THROW;
+#ifdef _LIBC
+extern int __sysctlbyname (const char *__name,
+			   void *__oldval, size_t *__oldlenp,
+			   void *__newval, size_t __newlen) __THROW;
+#endif
 __END_DECLS
+
 #endif	/* _KERNEL */
 
 #endif	/* !_SYS_SYSCTL_H_ */
diff -ur src.old/sys/sys/syslimits.h src/sys/sys/syslimits.h
--- src.old/sys/sys/syslimits.h	2003-09-10 21:08:16.000000000 +0200
+++ src/sys/sys/syslimits.h	2004-08-07 00:01:29.000000000 +0200
@@ -55,7 +55,9 @@
 #define	MAX_CANON		  255	/* max bytes in term canon input line */
 #define	MAX_INPUT		  255	/* max bytes in terminal input */
 #define	NAME_MAX		  255	/* max bytes in a file name */
+#ifndef NGROUPS_MAX
 #define	NGROUPS_MAX		   16	/* max supplemental group id's */
+#endif
 #ifndef OPEN_MAX
 #define	OPEN_MAX		   64	/* max open files per process */
 #endif
diff -ur src.old/sys/sys/sysproto.h src/sys/sys/sysproto.h
--- src.old/sys/sys/sysproto.h	2003-11-14 04:49:41.000000000 +0100
+++ src/sys/sys/sysproto.h	2004-08-07 00:06:53.000000000 +0200
@@ -306,8 +306,8 @@
 };
 struct setitimer_args {
 	char which_l_[PADL_(u_int)]; u_int which; char which_r_[PADR_(u_int)];
-	char itv_l_[PADL_(struct itimerval *)]; struct itimerval * itv; char itv_r_[PADR_(struct itimerval *)];
-	char oitv_l_[PADL_(struct itimerval *)]; struct itimerval * oitv; char oitv_r_[PADR_(struct itimerval *)];
+	char itv_l_[PADL_(struct __kernel_itimerval *)]; struct __kernel_itimerval * itv; char itv_r_[PADR_(struct __kernel_itimerval *)];
+	char oitv_l_[PADL_(struct __kernel_itimerval *)]; struct __kernel_itimerval * oitv; char oitv_r_[PADR_(struct __kernel_itimerval *)];
 };
 struct owait_args {
 	register_t dummy;
@@ -317,7 +317,7 @@
 };
 struct getitimer_args {
 	char which_l_[PADL_(u_int)]; u_int which; char which_r_[PADR_(u_int)];
-	char itv_l_[PADL_(struct itimerval *)]; struct itimerval * itv; char itv_r_[PADR_(struct itimerval *)];
+	char itv_l_[PADL_(struct __kernel_itimerval *)]; struct __kernel_itimerval * itv; char itv_r_[PADR_(struct __kernel_itimerval *)];
 };
 struct getdtablesize_args {
 	register_t dummy;
@@ -336,7 +336,7 @@
 	char in_l_[PADL_(fd_set *)]; fd_set * in; char in_r_[PADR_(fd_set *)];
 	char ou_l_[PADL_(fd_set *)]; fd_set * ou; char ou_r_[PADR_(fd_set *)];
 	char ex_l_[PADL_(fd_set *)]; fd_set * ex; char ex_r_[PADR_(fd_set *)];
-	char tv_l_[PADL_(struct timeval *)]; struct timeval * tv; char tv_r_[PADR_(struct timeval *)];
+	char tv_l_[PADL_(struct __kernel_timeval *)]; struct __kernel_timeval * tv; char tv_r_[PADR_(struct __kernel_timeval *)];
 };
 struct fsync_args {
 	char fd_l_[PADL_(int)]; int fd; char fd_r_[PADR_(int)];
@@ -377,7 +377,7 @@
 	char backlog_l_[PADL_(int)]; int backlog; char backlog_r_[PADR_(int)];
 };
 struct gettimeofday_args {
-	char tp_l_[PADL_(struct timeval *)]; struct timeval * tp; char tp_r_[PADR_(struct timeval *)];
+	char tp_l_[PADL_(struct __kernel_timeval *)]; struct __kernel_timeval * tp; char tp_r_[PADR_(struct __kernel_timeval *)];
 	char tzp_l_[PADL_(struct timezone *)]; struct timezone * tzp; char tzp_r_[PADR_(struct timezone *)];
 };
 struct getrusage_args {
@@ -402,7 +402,7 @@
 	char iovcnt_l_[PADL_(u_int)]; u_int iovcnt; char iovcnt_r_[PADR_(u_int)];
 };
 struct settimeofday_args {
-	char tv_l_[PADL_(struct timeval *)]; struct timeval * tv; char tv_r_[PADR_(struct timeval *)];
+	char tv_l_[PADL_(struct __kernel_timeval *)]; struct __kernel_timeval * tv; char tv_r_[PADR_(struct __kernel_timeval *)];
 	char tzp_l_[PADL_(struct timezone *)]; struct timezone * tzp; char tzp_r_[PADR_(struct timezone *)];
 };
 struct fchown_args {
@@ -461,11 +461,11 @@
 };
 struct utimes_args {
 	char path_l_[PADL_(char *)]; char * path; char path_r_[PADR_(char *)];
-	char tptr_l_[PADL_(struct timeval *)]; struct timeval * tptr; char tptr_r_[PADR_(struct timeval *)];
+	char tptr_l_[PADL_(struct __kernel_timeval *)]; struct __kernel_timeval * tptr; char tptr_r_[PADR_(struct __kernel_timeval *)];
 };
 struct adjtime_args {
-	char delta_l_[PADL_(struct timeval *)]; struct timeval * delta; char delta_r_[PADR_(struct timeval *)];
-	char olddelta_l_[PADL_(struct timeval *)]; struct timeval * olddelta; char olddelta_r_[PADR_(struct timeval *)];
+	char delta_l_[PADL_(struct __kernel_timeval *)]; struct __kernel_timeval * delta; char delta_r_[PADR_(struct __kernel_timeval *)];
+	char olddelta_l_[PADL_(struct __kernel_timeval *)]; struct __kernel_timeval * olddelta; char olddelta_r_[PADR_(struct __kernel_timeval *)];
 };
 struct ogethostid_args {
 	register_t dummy;
@@ -637,7 +637,7 @@
 };
 struct futimes_args {
 	char fd_l_[PADL_(int)]; int fd; char fd_r_[PADR_(int)];
-	char tptr_l_[PADL_(struct timeval *)]; struct timeval * tptr; char tptr_r_[PADR_(struct timeval *)];
+	char tptr_l_[PADL_(struct __kernel_timeval *)]; struct __kernel_timeval * tptr; char tptr_r_[PADR_(struct __kernel_timeval *)];
 };
 struct getpgid_args {
 	char pid_l_[PADL_(pid_t)]; pid_t pid; char pid_r_[PADR_(pid_t)];
@@ -705,19 +705,19 @@
 };
 struct clock_gettime_args {
 	char clock_id_l_[PADL_(clockid_t)]; clockid_t clock_id; char clock_id_r_[PADR_(clockid_t)];
-	char tp_l_[PADL_(struct timespec *)]; struct timespec * tp; char tp_r_[PADR_(struct timespec *)];
+	char tp_l_[PADL_(struct __kernel_timespec *)]; struct __kernel_timespec * tp; char tp_r_[PADR_(struct __kernel_timespec *)];
 };
 struct clock_settime_args {
 	char clock_id_l_[PADL_(clockid_t)]; clockid_t clock_id; char clock_id_r_[PADR_(clockid_t)];
-	char tp_l_[PADL_(const struct timespec *)]; const struct timespec * tp; char tp_r_[PADR_(const struct timespec *)];
+	char tp_l_[PADL_(const struct __kernel_timespec *)]; const struct __kernel_timespec * tp; char tp_r_[PADR_(const struct __kernel_timespec *)];
 };
 struct clock_getres_args {
 	char clock_id_l_[PADL_(clockid_t)]; clockid_t clock_id; char clock_id_r_[PADR_(clockid_t)];
-	char tp_l_[PADL_(struct timespec *)]; struct timespec * tp; char tp_r_[PADR_(struct timespec *)];
+	char tp_l_[PADL_(struct __kernel_timespec *)]; struct __kernel_timespec * tp; char tp_r_[PADR_(struct __kernel_timespec *)];
 };
 struct nanosleep_args {
-	char rqtp_l_[PADL_(const struct timespec *)]; const struct timespec * rqtp; char rqtp_r_[PADR_(const struct timespec *)];
-	char rmtp_l_[PADL_(struct timespec *)]; struct timespec * rmtp; char rmtp_r_[PADR_(struct timespec *)];
+	char rqtp_l_[PADL_(const struct __kernel_timespec *)]; const struct __kernel_timespec * rqtp; char rqtp_r_[PADR_(const struct __kernel_timespec *)];
+	char rmtp_l_[PADL_(struct __kernel_timespec *)]; struct __kernel_timespec * rmtp; char rmtp_r_[PADR_(struct __kernel_timespec *)];
 };
 struct minherit_args {
 	char addr_l_[PADL_(void *)]; void * addr; char addr_r_[PADR_(void *)];
@@ -751,7 +751,7 @@
 };
 struct lutimes_args {
 	char path_l_[PADL_(char *)]; char * path; char path_r_[PADR_(char *)];
-	char tptr_l_[PADL_(struct timeval *)]; struct timeval * tptr; char tptr_r_[PADR_(struct timeval *)];
+	char tptr_l_[PADL_(struct __kernel_timeval *)]; struct __kernel_timeval * tptr; char tptr_r_[PADR_(struct __kernel_timeval *)];
 };
 struct nstat_args {
 	char path_l_[PADL_(char *)]; char * path; char path_r_[PADR_(char *)];
@@ -824,7 +824,7 @@
 struct aio_suspend_args {
 	char aiocbp_l_[PADL_(struct aiocb *const *)]; struct aiocb *const * aiocbp; char aiocbp_r_[PADR_(struct aiocb *const *)];
 	char nent_l_[PADL_(int)]; int nent; char nent_r_[PADR_(int)];
-	char timeout_l_[PADL_(const struct timespec *)]; const struct timespec * timeout; char timeout_r_[PADR_(const struct timespec *)];
+	char timeout_l_[PADL_(const struct __kernel_timespec *)]; const struct __kernel_timespec * timeout; char timeout_r_[PADR_(const struct __kernel_timespec *)];
 };
 struct aio_cancel_args {
 	char fd_l_[PADL_(int)]; int fd; char fd_r_[PADR_(int)];
@@ -885,7 +885,7 @@
 };
 struct sched_rr_get_interval_args {
 	char pid_l_[PADL_(pid_t)]; pid_t pid; char pid_r_[PADR_(pid_t)];
-	char interval_l_[PADL_(struct timespec *)]; struct timespec * interval; char interval_r_[PADR_(struct timespec *)];
+	char interval_l_[PADL_(struct __kernel_timespec *)]; struct __kernel_timespec * interval; char interval_r_[PADR_(struct __kernel_timespec *)];
 };
 struct utrace_args {
 	char addr_l_[PADL_(const void *)]; const void * addr; char addr_r_[PADR_(const void *)];
@@ -913,7 +913,7 @@
 struct sigtimedwait_args {
 	char set_l_[PADL_(const sigset_t *)]; const sigset_t * set; char set_r_[PADR_(const sigset_t *)];
 	char info_l_[PADL_(siginfo_t *)]; siginfo_t * info; char info_r_[PADR_(siginfo_t *)];
-	char timeout_l_[PADL_(const struct timespec *)]; const struct timespec * timeout; char timeout_r_[PADR_(const struct timespec *)];
+	char timeout_l_[PADL_(const struct __kernel_timespec *)]; const struct __kernel_timespec * timeout; char timeout_r_[PADR_(const struct __kernel_timespec *)];
 };
 struct sigwaitinfo_args {
 	char set_l_[PADL_(const sigset_t *)]; const sigset_t * set; char set_r_[PADR_(const sigset_t *)];
@@ -985,7 +985,7 @@
 };
 struct aio_waitcomplete_args {
 	char aiocbp_l_[PADL_(struct aiocb **)]; struct aiocb ** aiocbp; char aiocbp_r_[PADR_(struct aiocb **)];
-	char timeout_l_[PADL_(struct timespec *)]; struct timespec * timeout; char timeout_r_[PADR_(struct timespec *)];
+	char timeout_l_[PADL_(struct __kernel_timespec *)]; struct __kernel_timespec * timeout; char timeout_r_[PADR_(struct __kernel_timespec *)];
 };
 struct getresuid_args {
 	char ruid_l_[PADL_(uid_t *)]; uid_t * ruid; char ruid_r_[PADR_(uid_t *)];
@@ -1006,7 +1006,7 @@
 	char nchanges_l_[PADL_(int)]; int nchanges; char nchanges_r_[PADR_(int)];
 	char eventlist_l_[PADL_(struct kevent *)]; struct kevent * eventlist; char eventlist_r_[PADR_(struct kevent *)];
 	char nevents_l_[PADL_(int)]; int nevents; char nevents_r_[PADR_(int)];
-	char timeout_l_[PADL_(const struct timespec *)]; const struct timespec * timeout; char timeout_r_[PADR_(const struct timespec *)];
+	char timeout_l_[PADL_(const struct __kernel_timespec *)]; const struct __kernel_timespec * timeout; char timeout_r_[PADR_(const struct __kernel_timespec *)];
 };
 struct extattr_set_fd_args {
 	char fd_l_[PADL_(int)]; int fd; char fd_r_[PADR_(int)];
@@ -1059,7 +1059,7 @@
 	char data_l_[PADL_(long)]; long data; char data_r_[PADR_(long)];
 };
 struct kse_release_args {
-	char timeout_l_[PADL_(struct timespec *)]; struct timespec * timeout; char timeout_r_[PADR_(struct timespec *)];
+	char timeout_l_[PADL_(struct __kernel_timespec *)]; struct __kernel_timespec * timeout; char timeout_r_[PADR_(struct __kernel_timespec *)];
 };
 struct __mac_get_proc_args {
 	char mac_p_l_[PADL_(struct mac *)]; struct mac * mac_p; char mac_p_r_[PADR_(struct mac *)];
diff -ur src.old/sys/sys/systm.h src/sys/sys/systm.h
--- src.old/sys/sys/systm.h	2003-09-30 22:54:12.000000000 +0200
+++ src/sys/sys/systm.h	2004-08-07 00:08:00.000000000 +0200
@@ -229,8 +229,8 @@
 int	testenv(const char *name);
 
 #ifdef APM_FIXUP_CALLTODO 
-struct timeval;
-void	adjust_timeout_calltodo(struct timeval *time_change); 
+struct __kernel_timeval;
+void	adjust_timeout_calltodo(struct __kernel_timeval *time_change); 
 #endif /* APM_FIXUP_CALLTODO */ 
 
 #include <sys/libkern.h>
@@ -246,7 +246,7 @@
 /*
  * Kernel to clock driver interface.
  */
-void	inittodr(time_t base);
+void	inittodr(__kernel_time_t base);
 void	resettodr(void);
 void	startrtclock(void);
 
diff -ur src.old/sys/sys/timepps.h src/sys/sys/timepps.h
--- src.old/sys/sys/timepps.h	2003-11-23 19:52:23.000000000 +0100
+++ src/sys/sys/timepps.h	2004-08-07 00:09:05.000000000 +0200
@@ -15,6 +15,8 @@
 #ifndef _SYS_TIMEPPS_H_
 #define _SYS_TIMEPPS_H_
 
+#include <stddef.h>
+#include <sys/time.h>
 #include <sys/ioccom.h>
 #include <sys/time.h>
 
@@ -30,7 +32,7 @@
 } ntp_fp_t;
 
 typedef union pps_timeu {
-	struct timespec	tspec;
+	struct __kernel_timespec	tspec;
 	ntp_fp_t	ntpfp;
 	unsigned long	longpad[3];
 } pps_timeu_t;
@@ -86,7 +88,7 @@
 struct pps_fetch_args {
 	int tsformat;
 	pps_info_t	pps_info_buf;
-	struct timespec	timeout;
+	struct __kernel_timespec	timeout;
 };
 
 struct pps_kcbind_args {
@@ -124,7 +126,7 @@
 void pps_event(struct pps_state *pps, int event);
 void pps_init(struct pps_state *pps);
 int pps_ioctl(unsigned long cmd, caddr_t data, struct pps_state *pps);
-void hardpps(struct timespec *tsp, long nsec);
+void hardpps(struct __kernel_timespec *tsp, long nsec);
 
 #else /* !_KERNEL */
 
@@ -167,7 +169,7 @@
 
 static __inline int
 time_pps_fetch(pps_handle_t handle, const int tsformat,
-	pps_info_t *ppsinfobuf, const struct timespec *timeout)
+	pps_info_t *ppsinfobuf, const struct __kernel_timespec *timeout)
 {
 	int error;
 	struct pps_fetch_args arg;
diff -ur src.old/sys/sys/timex.h src/sys/sys/timex.h
--- src.old/sys/sys/timex.h	2002-04-28 11:51:45.000000000 +0200
+++ src/sys/sys/timex.h	2004-08-07 00:11:26.000000000 +0200
@@ -69,7 +69,7 @@
  *	int ntp_gettime(struct ntptimeval *ntv);
  *
  * DESCRIPTION
- *	The time returned by ntp_gettime() is in a timespec structure,
+ *	The time returned by ntp_gettime() is in a __kernel_timespec structure,
  *	but may be in either microsecond (seconds and microseconds) or
  *	nanosecond (seconds and nanoseconds) format. The particular
  *	format in use is determined by the STA_NANO bit of the status
@@ -94,11 +94,9 @@
  */
 #ifndef _SYS_TIMEX_H_
 #define _SYS_TIMEX_H_ 1
-#define NTP_API		4	/* NTP API version */
 
-#ifndef MSDOS			/* Microsoft specific */
-#include <sys/syscall.h>
-#endif /* MSDOS */
+#include <features.h>
+#include <time.h>
 
 /*
  * The following defines establish the performance envelope of the
@@ -175,8 +173,14 @@
  * Note: The time member is in microseconds if STA_NANO is zero and
  * nanoseconds if not.
  */
-struct ntptimeval {
-	struct timespec time;	/* current time (ns) (ro) */
+struct ntptimeval3 {
+	struct __kernel_timespec time;	/* current time (ns) (ro) */
+	long maxerror;		/* maximum error (us) (ro) */
+	long esterror;		/* estimated error (us) (ro) */
+	int time_state;		/* time status */
+};
+struct ntptimeval4 {
+	struct __kernel_timespec time;	/* current time (ns) (ro) */
 	long maxerror;		/* maximum error (us) (ro) */
 	long esterror;		/* estimated error (us) (ro) */
 	long tai;		/* TAI offset */
@@ -217,19 +221,18 @@
 	long	stbcnt;		/* stability limit exceeded (ro) */
 };
 
-#ifdef __FreeBSD__
-
 #ifdef _KERNEL
 void	ntp_update_second(int64_t *adjustment, time_t *newsec);
 #else /* !_KERNEL */
 #include <sys/cdefs.h>
 
+#define NTP_API		4	/* NTP API version */
+#define ntptimeval	ntptimeval4
+
 __BEGIN_DECLS
-int	ntp_adjtime(struct timex *);
-int	ntp_gettime(struct ntptimeval *);
+extern int	ntp_adjtime(struct timex *) __THROW;
+extern int	ntp_gettime(struct ntptimeval *) __THROW;
 __END_DECLS
 #endif /* _KERNEL */
 
-#endif /* __FreeBSD__ */
-
 #endif /* !_SYS_TIMEX_H_ */
diff -ur src.old/sys/sys/ttycom.h src/sys/sys/ttycom.h
--- src.old/sys/sys/ttycom.h	2000-01-29 17:47:35.000000000 +0100
+++ src/sys/sys/ttycom.h	2004-08-03 08:59:32.000000000 +0200
@@ -124,9 +124,9 @@
 #define	TIOCDRAIN	 _IO('t', 94)		/* wait till output drained */
 #define	TIOCMSDTRWAIT	_IOW('t', 91, int)	/* modem: set wait on close */
 #define	TIOCMGDTRWAIT	_IOR('t', 90, int)	/* modem: get wait on close */
-#define	TIOCTIMESTAMP	_IOR('t', 89, struct timeval)	/* enable/get timestamp
+#define	TIOCTIMESTAMP	_IOR('t', 89, struct __kernel_timeval)	/* enable/get timestamp
 						 * of last input event */
-#define	TIOCDCDTIMESTAMP _IOR('t', 88, struct timeval)	/* enable/get timestamp
+#define	TIOCDCDTIMESTAMP _IOR('t', 88, struct __kernel_timeval)	/* enable/get timestamp
 						 * of last DCd rise */
 #define	TIOCSDRAINWAIT	_IOW('t', 87, int)	/* set ttywait timeout */
 #define	TIOCGDRAINWAIT	_IOR('t', 86, int)	/* get ttywait timeout */
diff -ur src.old/sys/sys/ucred.h src/sys/sys/ucred.h
--- src.old/sys/sys/ucred.h	2003-11-12 16:07:18.000000000 +0100
+++ src/sys/sys/ucred.h	2004-08-03 08:59:32.000000000 +0200
@@ -37,6 +37,9 @@
 #ifndef _SYS_UCRED_H_
 #define	_SYS_UCRED_H_
 
+#include <sys/types.h>
+#include <sys/param.h>
+
 /*
  * Credentials.
  *
diff -ur src.old/sys/sys/user.h src/sys/sys/user.h
--- src.old/sys/sys/user.h	2003-05-13 22:36:02.000000000 +0200
+++ src/sys/sys/user.h	2004-08-07 00:12:46.000000000 +0200
@@ -112,7 +112,7 @@
 	pid_t	ki_sid;			/* Process session ID */
 	pid_t	ki_tsid;		/* Terminal session ID */
 	short	ki_jobc;		/* job control counter */
-	udev_t	ki_tdev;		/* controlling tty dev */
+	dev_t	ki_tdev;		/* controlling tty dev */
 	sigset_t ki_siglist;		/* Signals arrived but not delivered */
 	sigset_t ki_sigmask;		/* Current signal mask */
 	sigset_t ki_sigignore;		/* Signals being ignored */
diff -ur src.old/sys/sys/vnode.h src/sys/sys/vnode.h
--- src.old/sys/sys/vnode.h	2003-11-12 04:14:31.000000000 +0100
+++ src/sys/sys/vnode.h	2004-08-07 00:13:28.000000000 +0200
@@ -255,10 +255,10 @@
 	long		va_fileid;	/* file id */
 	u_quad_t	va_size;	/* file size in bytes */
 	long		va_blocksize;	/* blocksize preferred for i/o */
-	struct timespec	va_atime;	/* time of last access */
-	struct timespec	va_mtime;	/* time of last modification */
-	struct timespec	va_ctime;	/* time file changed */
-	struct timespec	va_birthtime;	/* time file created */
+	struct __kernel_timespec	va_atime;	/* time of last access */
+	struct __kernel_timespec	va_mtime;	/* time of last modification */
+	struct __kernel_timespec	va_ctime;	/* time file changed */
+	struct __kernel_timespec	va_birthtime;	/* time file created */
 	u_long		va_gen;		/* generation number of file */
 	u_long		va_flags;	/* flags defined for file */
 	udev_t		va_rdev;	/* device the special file represents */
@@ -678,7 +678,7 @@
 int	vfs_cache_lookup(struct vop_lookup_args *ap);
 int	vfs_object_create(struct vnode *vp, struct thread *td,
 	    struct ucred *cred);
-void	vfs_timestamp(struct timespec *);
+void	vfs_timestamp(struct __kernel_timespec *);
 void	vfs_write_resume(struct mount *mp);
 int	vfs_write_suspend(struct mount *mp);
 int	vop_stdbmap(struct vop_bmap_args *);
diff -ur src.old/sys/sys/xrpuio.h src/sys/sys/xrpuio.h
--- src.old/sys/sys/xrpuio.h	1999-08-28 02:52:12.000000000 +0200
+++ src/sys/sys/xrpuio.h	2004-08-03 08:59:32.000000000 +0200
@@ -13,6 +13,7 @@
 #ifndef _SYS_XRPUIO_H_
 #define _SYS_XRPUIO_H_
 
+#include <sys/types.h>
 #include <sys/ioccom.h>
 
 #define XRPU_MAX_PPS	16
diff -ur src.old/sys/ufs/ufs/ufsmount.h src/sys/ufs/ufs/ufsmount.h
--- src.old/sys/ufs/ufs/ufsmount.h	2003-01-07 19:23:50.000000000 +0100
+++ src/sys/ufs/ufs/ufsmount.h	2004-08-03 09:00:12.000000000 +0200
@@ -54,7 +54,7 @@
 struct buf;
 struct inode;
 struct nameidata;
-struct timeval;
+struct __kernel_timeval;
 struct ucred;
 struct uio;
 struct vnode;
@@ -74,8 +74,8 @@
 	u_long	um_bptrtodb;			/* indir ptr to disk block */
 	u_long	um_seqinc;			/* inc between seq blocks */
 	long	um_numindirdeps;		/* indirdeps for this filesys */
-	time_t	um_btime[MAXQUOTAS];		/* block quota time limit */
-	time_t	um_itime[MAXQUOTAS];		/* inode quota time limit */
+	__kernel_time_t	um_btime[MAXQUOTAS];		/* block quota time limit */
+	__kernel_time_t	um_itime[MAXQUOTAS];		/* inode quota time limit */
 	char	um_qflags[MAXQUOTAS];		/* quota specific flags */
 	int64_t	um_savedmaxfilesize;		/* XXX - limit maxfilesize */
 	int	(*um_balloc)(struct vnode *, off_t, int, struct ucred *, int, struct buf **);
diff -ur src.old/sys/vm/vm.h src/sys/vm/vm.h
--- src.old/sys/vm/vm.h	2002-12-16 20:24:43.000000000 +0100
+++ src/sys/vm/vm.h	2004-08-03 08:59:32.000000000 +0200
@@ -65,6 +65,8 @@
 #ifndef VM_H
 #define VM_H
 
+#include <sys/types.h>
+
 typedef char vm_inherit_t;	/* inheritance codes */
 
 #define	VM_INHERIT_SHARE	((vm_inherit_t) 0)
diff -ur src.old/sys/vm/vm_map.h src/sys/vm/vm_map.h
--- src.old/sys/vm/vm_map.h	2003-11-09 06:25:35.000000000 +0100
+++ src/sys/vm/vm_map.h	2004-08-03 08:59:32.000000000 +0200
@@ -74,6 +74,12 @@
 #include <sys/lockmgr.h>
 #include <sys/_mutex.h>
 
+#include <sys/types.h>
+#include <machine/types.h>
+#include <machine/pmap.h>
+#include <vm/vm.h>
+#include <sys/lock.h>
+
 /*
  *	Types defined:
  *
