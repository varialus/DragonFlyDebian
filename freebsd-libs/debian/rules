#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
SHELL=bash

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# This has to be exported to make some magic below work.
export DH_OPTIONS

CFLAGS = -Wall -g -pipe -fPIC -I. -D_GNU_SOURCE

ifneq (,$(filter noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

ANONCVS=anoncvs@anoncvs.fr.freebsd.org:/home/ncvs
RELENG=RELENG_7_1_0_RELEASE
VERSION=7.1
PATH:=/usr/lib/freebsd:$(PATH)
DESTDIR=$(CURDIR)/debian/tmp
PMAKE=COPTS="$(CFLAGS)" CFLAGS="$(CFLAGS)" NO_WERROR=1 NOGCCERROR=1 NOSHARED=NO NO_SHARED=NO DESTDIR=$(DESTDIR) make
export SHLIB_MAJOR=0
export SHLIBDIR=/usr/lib

build: build-arch build-indep

get-orig-source:
	rm -rf freebsd-libs-$(VERSION)
	for i in lib/libcam lib/libdevstat lib/libgeom lib/libipx lib/libkiconv \
	         lib/libkvm lib/libsbuf lib/libusbhid sys/cam sys/kern/subr_sbuf.c ; do \
	    cvs -d $(ANONCVS) export -r $(RELENG) -N -d freebsd-libs-$(VERSION) src/$$i ; \
	done
	mv freebsd-libs-$(VERSION)/src/* freebsd-libs-$(VERSION)
	rmdir freebsd-libs-$(VERSION)/src
	# Remove unused files with non GPL compatible license (eg BSD 4 clauses)
	rm -f freebsd-libs-$(VERSION)/sys/cam/scsi/scsi_ch.*
	rm -f freebsd-libs-$(VERSION)/lib/libkvm/kvm_ia64.c
	rm -f freebsd-libs-$(VERSION)/lib/libkvm/kvm_powerpc.c
	tar -czf ../freebsd-libs_$(VERSION).orig.tar.gz freebsd-libs-$(VERSION)
	rm -rf freebsd-libs-$(VERSION)

patch: patch-stamp
patch-stamp:
	QUILT_PATCHES=debian/patches quilt push -a || test $$? = 2
	touch $@

build-arch: build-cam build-geom build-sbuf build-ipx build-kiconv build-kvm build-usbhid build-devstat

build-cam: build-cam-stamp
build-cam-stamp: patch build-sbuf
	$(PMAKE) -C $(CURDIR)/lib/libcam
	touch $@

build-geom: build-geom-stamp
build-geom-stamp: patch build-sbuf
	$(PMAKE) -C $(CURDIR)/lib/libgeom
	touch $@

build-ipx: build-ipx-stamp
build-ipx-stamp: patch
	$(PMAKE) -C $(CURDIR)/lib/libipx
	touch $@

build-kiconv: build-kiconv-stamp
build-kiconv-stamp: patch
	$(PMAKE) -C $(CURDIR)/lib/libkiconv
	touch $@

build-kvm: build-kvm-stamp
build-kvm-stamp: patch
	$(PMAKE) -C $(CURDIR)/lib/libkvm
	touch $@

build-devstat: build-devstat-stamp
build-devstat-stamp: patch build-kvm
	$(PMAKE) -C $(CURDIR)/lib/libdevstat
	touch $@

build-sbuf: build-sbuf-stamp
build-sbuf-stamp: patch
	$(PMAKE) -C $(CURDIR)/lib/libsbuf
	touch $@

build-usbhid: build-usbhid-stamp
build-usbhid-stamp: patch
	$(PMAKE) -C $(CURDIR)/lib/libusbhid
	touch $@

build-indep: build-indep-stamp
build-indep-stamp:
	touch $@

clean:
	dh_testdir
	dh_testroot
	$(PMAKE) -C $(CURDIR)/lib/libcam clean
	$(PMAKE) -C $(CURDIR)/lib/libdevstat clean
	$(PMAKE) -C $(CURDIR)/lib/libgeom clean
	$(PMAKE) -C $(CURDIR)/lib/libipx clean
	$(PMAKE) -C $(CURDIR)/lib/libkiconv clean
	$(PMAKE) -C $(CURDIR)/lib/libkvm clean
	$(PMAKE) -C $(CURDIR)/lib/libsbuf clean
	$(PMAKE) -C $(CURDIR)/lib/libusbhid clean
	QUILT_PATCHES=debian/patches quilt pop -a -R || test $$? = 2
	rm -rf .pc
	rm -f *stamp
	dh_clean

install: install-indep install-arch
install-indep:

install-arch:
	dh_testdir
	dh_testroot
	dh_clean -k -s
	dh_installdirs -s

	mkdir -p $(DESTDIR)/usr/lib $(DESTDIR)/usr/include $(DESTDIR)/usr/share/man/man3
	$(PMAKE) -C $(CURDIR)/lib/libsbuf install
	$(PMAKE) -C $(CURDIR)/lib/libcam install
	$(PMAKE) -C $(CURDIR)/lib/libgeom install
	$(PMAKE) -C $(CURDIR)/lib/libipx install
	$(PMAKE) -C $(CURDIR)/lib/libkiconv install
	$(PMAKE) -C $(CURDIR)/lib/libkvm install
	$(PMAKE) -C $(CURDIR)/lib/libdevstat install
	$(PMAKE) -C $(CURDIR)/lib/libusbhid install

	dh_install -s --list-missing --sourcedir=debian/tmp

# Must not depend on anything. This is to be called by
# binary-arch/binary-indep
# in another 'make' thread.
binary-common:
	dh_testdir
	dh_testroot
	dh_installchangelogs
	dh_installdocs
#	dh_installexamples
#	dh_installmenu
#	dh_installdebconf
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_installinit
#	dh_installcron
#	dh_installinfo
#	dh_installman
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
#	dh_perl
#	dh_python
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb
# Build architecture independant packages using the common target.
binary-indep: build-indep install-indep
#	$(MAKE) -f debian/rules DH_OPTIONS=-i binary-common

# Build architecture dependant packages using the common target.
binary-arch: build-arch install-arch
	$(MAKE) -f debian/rules DH_OPTIONS=-s binary-common

binary: binary-arch binary-indep
.PHONY: build clean binary-indep binary-arch binary install install-indep install-arch configure
