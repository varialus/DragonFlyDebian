#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
SHELL=bash

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# This has to be exported to make some magic below work.
export DH_OPTIONS

CFLAGS = -Wall -g -pipe -fPIC -I. -D_GNU_SOURCE -D'__FBSDID(string)=' -D__va_list=__builtin_va_list

ifneq (,$(filter noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

VERSION=$(shell dpkg-parsechangelog | sed -e '/^Version:/!d' -e 's/^Version: //g' -e 's/-.*//g')
SVN=http://svn.freebsd.org/base/release/$(VERSION).0
#SVN=http://svn.freebsd.org/base/releng/8.1
ORIGDIR=freebsd-libs-$(VERSION)
PATH:=/usr/lib/freebsd:$(PATH)
DESTDIR=$(CURDIR)/debian/tmp
PMAKE=COPTS="$(CFLAGS)" CFLAGS="$(CFLAGS)" NO_WERROR=1 NOGCCERROR=1 NOSHARED=NO NO_SHARED=NO DESTDIR=$(DESTDIR) make
export SHLIB_MAJOR=0
kernel=$(shell dpkg-architecture -qDEB_HOST_ARCH_OS)

get-orig-source:
	rm -rf $(ORIGDIR)
	for i in lib/libcam lib/libdevstat lib/libgeom lib/libipx \
	         lib/libkiconv lib/libnetgraph \
	         lib/libkvm lib/libmemstat lib/libsbuf lib/libusb \
	         lib/libusbhid sys/cam ; do \
	    svn export $(SVN)/$$i $(ORIGDIR)/$$i ; \
	done
	svn cat $(SVN)/share/misc/usb_hid_usages > $(ORIGDIR)/lib/libusbhid/usb_hid_usages
	mkdir -p $(ORIGDIR)/sys/kern && \
	    svn cat $(SVN)/sys/kern/subr_sbuf.c > $(ORIGDIR)/sys/kern/subr_sbuf.c
	mkdir -p $(ORIGDIR)/sys/sys && \
	    svn cat $(SVN)/sys/sys/sbuf.h > $(ORIGDIR)/sys/sys/sbuf.h
	# Remove unused files with non GPL compatible license (eg BSD 4 clauses)
	rm -f $(ORIGDIR)/sys/cam/scsi/scsi_ch.*
	rm -f $(ORIGDIR)/lib/libkvm/kvm_ia64.c
	rm -f $(ORIGDIR)/lib/libkvm/kvm_powerpc.c
	tar -czf ../freebsd-libs_$(VERSION).orig.tar.gz $(ORIGDIR)
	rm -rf $(ORIGDIR)

patch: patch-stamp
patch-stamp:
	QUILT_PATCHES=debian/patches quilt push -a || test $$? = 2
	touch $@

ifeq ($(kernel), kfreebsd)
build: build-cam build-geom build-sbuf build-ipx build-kiconv build-kvm build-usbhid build-usb build-devstat build-memstat build-netgraph
else
build: build-sbuf
endif

build-cam: build-cam-stamp
build-cam-stamp: patch build-sbuf
	$(PMAKE) -C $(CURDIR)/lib/libcam SHLIBDIR=./
	touch $@

build-geom: build-geom-stamp
build-geom-stamp: patch build-sbuf
	$(PMAKE) -C $(CURDIR)/lib/libgeom SHLIBDIR=./
	touch $@

build-netgraph: build-netgraph-stamp
build-netgraph-stamp: patch
	$(PMAKE) -C $(CURDIR)/lib/libnetgraph SHLIBDIR=./
	touch $@

build-ipx: build-ipx-stamp
build-ipx-stamp: patch
	$(PMAKE) -C $(CURDIR)/lib/libipx SHLIBDIR=./
	touch $@

build-kiconv: build-kiconv-stamp
build-kiconv-stamp: patch
	$(PMAKE) -C $(CURDIR)/lib/libkiconv SHLIBDIR=./
	touch $@

build-kvm: build-kvm-stamp
build-kvm-stamp: patch
	$(PMAKE) -C $(CURDIR)/lib/libkvm SHLIBDIR=./
	touch $@

build-devstat: build-devstat-stamp
build-devstat-stamp: patch build-kvm
	$(PMAKE) -C $(CURDIR)/lib/libdevstat SHLIBDIR=./
	touch $@

build-memstat: build-memstat-stamp
build-memstat-stamp: patch build-kvm
	$(PMAKE) -C $(CURDIR)/lib/libmemstat SHLIBDIR=./
	touch $@

build-sbuf: build-sbuf-stamp
build-sbuf-stamp: patch
	$(PMAKE) -C $(CURDIR)/lib/libsbuf SHLIBDIR=./
	touch $@

build-usbhid: build-usbhid-stamp
build-usbhid-stamp: patch
	$(PMAKE) -C $(CURDIR)/lib/libusbhid SHLIBDIR=./
	touch $@

build-usb: build-usb-stamp
build-usb-stamp: patch
	$(PMAKE) -C $(CURDIR)/lib/libusb SHLIBDIR=./
	touch $@

clean:
	dh_testdir
	dh_testroot
	$(PMAKE) -C $(CURDIR)/lib/libsbuf clean
ifeq ($(kernel), kfreebsd)
	$(PMAKE) -C $(CURDIR)/lib/libcam clean
	$(PMAKE) -C $(CURDIR)/lib/libnetgraph clean
	$(PMAKE) -C $(CURDIR)/lib/libdevstat clean
	$(PMAKE) -C $(CURDIR)/lib/libmemstat clean
	$(PMAKE) -C $(CURDIR)/lib/libgeom clean
	$(PMAKE) -C $(CURDIR)/lib/libipx clean
	$(PMAKE) -C $(CURDIR)/lib/libkiconv clean
	$(PMAKE) -C $(CURDIR)/lib/libkvm clean
	$(PMAKE) -C $(CURDIR)/lib/libusbhid clean
	$(PMAKE) -C $(CURDIR)/lib/libusb clean
endif
	QUILT_PATCHES=debian/patches quilt pop -a -R || test $$? = 2
	rm -rf .pc
	rm -f *stamp
	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs

	mkdir -p $(DESTDIR)/lib $(DESTDIR)/usr/lib $(DESTDIR)/usr/include $(DESTDIR)/usr/share/man/man3
	$(PMAKE) -C $(CURDIR)/lib/libsbuf install SHLIBDIR=/usr/lib
ifeq ($(kernel), kfreebsd)
	$(PMAKE) -C $(CURDIR)/lib/libcam install SHLIBDIR=/usr/lib
	$(PMAKE) -C $(CURDIR)/lib/libgeom install SHLIBDIR=/lib
	$(PMAKE) -C $(CURDIR)/lib/libipx install SHLIBDIR=/usr/lib
	$(PMAKE) -C $(CURDIR)/lib/libkiconv install SHLIBDIR=/usr/lib
	$(PMAKE) -C $(CURDIR)/lib/libkvm install SHLIBDIR=/lib
	$(PMAKE) -C $(CURDIR)/lib/libdevstat install SHLIBDIR=/usr/lib
	$(PMAKE) -C $(CURDIR)/lib/libmemstat install SHLIBDIR=/usr/lib
	$(PMAKE) -C $(CURDIR)/lib/libnetgraph install SHLIBDIR=/usr/lib
	$(PMAKE) -C $(CURDIR)/lib/libusbhid install SHLIBDIR=/usr/lib
	$(PMAKE) -C $(CURDIR)/lib/libusb install SHLIBDIR=/lib

	mkdir -p $(CURDIR)/debian/tmp/usr/lib/pkgconfig
	install -m644 debian/libusb*.pc $(CURDIR)/debian/tmp/usr/lib/pkgconfig
	mkdir -p $(CURDIR)/debian/tmp/usr/bin
	install -m755 debian/libusb-config $(CURDIR)/debian/tmp/usr/bin
endif

	dh_install --list-missing

# Build architecture-independent files here.
binary-indep: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs -i
	dh_installdocs -i
	dh_link -i
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs -a
	dh_installdocs -a
#	dh_installexamples
#	dh_installinit
#	dh_installcron
#	dh_installinfo
#	dh_installman
	dh_link -a
	dh_strip -a
	dh_compress -a
	dh_fixperms -a
#	dh_perl
#	dh_python
	dh_makeshlibs -a
ifeq ($(kernel), kfreebsd)
	dh_makeshlibs -plibgeom0 --add-udeb=libgeom0-udeb
	dh_makeshlibs -plibipx2 --add-udeb=libipx2-udeb
	dh_makeshlibs -plibsbuf0 --add-udeb=libsbuf0-udeb
	dh_makeshlibs -plibusb2 --add-udeb=libusb2-udeb
endif
	dh_installdeb -a
	dh_shlibdeps -a
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-arch binary-indep
.PHONY: build clean binary-indep binary-arch binary install configure
