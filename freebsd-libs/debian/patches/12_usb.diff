--- a/lib/libusb/usb.h
+++ b/lib/libusb/usb.h
@@ -28,7 +28,7 @@
 #define	_LIBUSB20_COMPAT_01_H_
 
 #include <sys/param.h>
-#include <sys/endian.h>
+#include <endian.h>
 
 #include <stdint.h>
 
--- a/lib/libusb/Makefile
+++ b/lib/libusb/Makefile
@@ -15,6 +15,7 @@
 MAN=		libusb.3 libusb20.3
 MKLINT=		no
 NOGCCERROR=
+LDADD+=		-lpthread -lrt -lbsd
 
 MLINKS+=	libusb.3 usb.3
 
--- a/lib/libusb/libusb20.c
+++ b/lib/libusb/libusb20.c
@@ -1167,7 +1167,7 @@
 {
 	struct libusb20_backend *pbe;
 
-#ifdef __FreeBSD__
+#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
 	pbe = libusb20_be_alloc(&libusb20_ugen20_backend);
 #else
 	pbe = NULL;
--- a/lib/libusb/libusb.h
+++ b/lib/libusb/libusb.h
@@ -220,7 +220,7 @@
 	uint8_t	bSynchAddress;
 	uint8_t *extra;
 	int	extra_length;
-}	libusb_endpoint_descriptor __aligned(sizeof(void *));
+}	libusb_endpoint_descriptor __attribute__((__aligned__(sizeof(void *))));
 
 typedef struct libusb_interface_descriptor {
 	uint8_t	bLength;
@@ -235,12 +235,12 @@
 	struct libusb_endpoint_descriptor *endpoint;
 	uint8_t *extra;
 	int	extra_length;
-}	libusb_interface_descriptor __aligned(sizeof(void *));
+}	libusb_interface_descriptor __attribute__((__aligned__(sizeof(void *))));
 
 typedef struct libusb_interface {
 	struct libusb_interface_descriptor *altsetting;
 	int	num_altsetting;
-}	libusb_interface __aligned(sizeof(void *));
+}	libusb_interface __attribute__((__aligned__(sizeof(void *))));
 
 typedef struct libusb_config_descriptor {
 	uint8_t	bLength;
@@ -254,7 +254,7 @@
 	struct libusb_interface *interface;
 	uint8_t *extra;
 	int	extra_length;
-}	libusb_config_descriptor __aligned(sizeof(void *));
+}	libusb_config_descriptor __attribute__((__aligned__(sizeof(void *))));
 
 typedef struct libusb_control_setup {
 	uint8_t	bmRequestType;
@@ -270,7 +270,7 @@
 	uint32_t length;
 	uint32_t actual_length;
 	enum libusb_transfer_status status;
-}	libusb_iso_packet_descriptor __aligned(sizeof(void *));
+}	libusb_iso_packet_descriptor __attribute__((__aligned__(sizeof(void *))));
 
 typedef void (*libusb_transfer_cb_fn) (struct libusb_transfer *transfer);
 
@@ -289,7 +289,7 @@
 	void *os_priv;
 	int	num_iso_packets;
 	struct libusb_iso_packet_descriptor iso_packet_desc[0];
-}	libusb_transfer __aligned(sizeof(void *));
+}	libusb_transfer __attribute__((__aligned__(sizeof(void *))));
 
 /* Library initialisation */
 
--- a/lib/libusb/libusb20_desc.h
+++ b/lib/libusb/libusb20_desc.h
@@ -98,7 +98,7 @@
 	void   *ptr;			/* data pointer */
 	uint16_t len;			/* defaults to zero */
 	uint16_t type;			/* defaults to LIBUSB20_ME_IS_EMPTY */
-} __aligned(LIBUSB20_ME_STRUCT_ALIGN);
+} __attribute__((__aligned__(LIBUSB20_ME_STRUCT_ALIGN)));
 
 struct libusb20_me_format {
 	const uint8_t *format;		/* always set */
@@ -120,7 +120,7 @@
 	   LIBUSB20_ME_IS_##un##SIGNED ,				\
 	   (size) & 0xFF, ((size) / 0x100) & 0xFF, )		\
   LIBUSB20_NOT(ismeta) ( u##int##bits##_t				\
-		    __aligned((bits) / 8) field a; )
+		    __attribute__((__aligned__((bits) / 8))) field a; )
 
 #define	LIBUSB20_ME_UINT8_T(n, field, arg, ismeta) \
   LIBUSB20_ME_INTEGER(n, field, ismeta, UN, u, 8, , 1)
@@ -498,7 +498,7 @@
 struct libusb20_endpoint {
 	struct LIBUSB20_ENDPOINT_DESC_DECODED desc;
 	struct libusb20_me_struct extra;
-} __aligned(sizeof(void *));
+} __attribute__((__aligned__(sizeof(void *))));
 
 struct libusb20_interface {
 	struct LIBUSB20_INTERFACE_DESC_DECODED desc;
@@ -507,14 +507,14 @@
 	struct libusb20_endpoint *endpoints;
 	uint8_t	num_altsetting;
 	uint8_t	num_endpoints;
-} __aligned(sizeof(void *));
+} __attribute__((__aligned__(sizeof(void *))));
 
 struct libusb20_config {
 	struct LIBUSB20_CONFIG_DESC_DECODED desc;
 	struct libusb20_me_struct extra;
 	struct libusb20_interface *interface;
 	uint8_t	num_interface;
-} __aligned(sizeof(void *));
+} __attribute__((__aligned__(sizeof(void *))));
 
 uint8_t	libusb20_me_get_1(const struct libusb20_me_struct *ie, uint16_t offset);
 uint16_t libusb20_me_get_2(const struct libusb20_me_struct *ie, uint16_t offset);
