---
 lib/libkvm/Makefile             |    2 +-
 lib/libkvm/kvm.c                |   10 ++++++++--
 lib/libkvm/kvm_file.c           |    8 +++++++-
 lib/libkvm/kvm_getloadavg.c     |    6 ++++++
 lib/libkvm/kvm_getswapinfo.c    |    2 ++
 lib/libkvm/kvm_minidump_amd64.c |    9 +++++++++
 lib/libkvm/kvm_minidump_i386.c  |   10 ++++++++++
 lib/libkvm/kvm_private.h        |    4 ++--
 lib/libkvm/kvm_proc.c           |    3 +++
 9 files changed, 48 insertions(+), 6 deletions(-)

Index: b/lib/libkvm/Makefile
===================================================================
--- a/lib/libkvm/Makefile
+++ b/lib/libkvm/Makefile
@@ -2,8 +2,8 @@
 # $FreeBSD: src/lib/libkvm/Makefile,v 1.17.2.2.4.1 2009/04/15 03:14:26 kensmith Exp $
 
 LIB=	kvm
+LDADD= -lbsd -lfreebsd
 SHLIBDIR?= /lib
-CFLAGS+=-DLIBC_SCCS -I${.CURDIR}
 
 .if ${MACHINE} == "sun4v"
 CFLAGS+=-DSUN4V
Index: b/lib/libkvm/kvm.c
===================================================================
--- a/lib/libkvm/kvm.c
+++ b/lib/libkvm/kvm.c
@@ -46,6 +46,7 @@
 #include <sys/stat.h>
 #include <sys/sysctl.h>
 #include <sys/linker.h>
+#include <sys/sysctl.h>
 
 #include <vm/vm.h>
 #include <vm/vm_param.h>
@@ -58,11 +59,16 @@
 #include <limits.h>
 #include <nlist.h>
 #include <paths.h>
+#include <stdarg.h>
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
 #include <unistd.h>
 
+#ifndef _PATH_FWMEM
+#define _PATH_FWMEM     "/dev/fwmem"
+#endif
+
 #include "kvm_private.h"
 
 /* from src/lib/libc/gen/nlist.c */
@@ -237,7 +243,7 @@
 kvm_openfiles(uf, mf, sf, flag, errout)
 	const char *uf;
 	const char *mf;
-	const char *sf __unused;
+	const char *sf;
 	int flag;
 	char *errout;
 {
@@ -256,7 +262,7 @@
 kvm_open(uf, mf, sf, flag, errstr)
 	const char *uf;
 	const char *mf;
-	const char *sf __unused;
+	const char *sf;
 	int flag;
 	const char *errstr;
 {
Index: b/lib/libkvm/kvm_file.c
===================================================================
--- a/lib/libkvm/kvm_file.c
+++ b/lib/libkvm/kvm_file.c
@@ -59,7 +59,7 @@
 #include <sys/sysctl.h>
 
 #include <limits.h>
-#include <ndbm.h>
+#include <gdbm-ndbm.h>
 #include <paths.h>
 
 #include "kvm_private.h"
@@ -76,6 +76,7 @@
 	int op, arg, nfiles;
 	long filehead_o;
 {
+#if 0
 	int buflen = kd->arglen, n = 0;
 	struct file *fp;
 	char *where = kd->argspc;
@@ -113,6 +114,8 @@
 		return (0);
 	}
 	return (nfiles);
+#endif
+	return 0;
 }
 
 char *
@@ -121,6 +124,7 @@
 	int op, arg;
 	int *cnt;
 {
+#if 0
 	int mib[2], st, nfiles;
 	size_t size;
 	struct file *fp, *fplim;
@@ -184,4 +188,6 @@
 	}
 	*cnt = nfiles;
 	return (kd->argspc);
+#endif
+	return 0;
 }
Index: b/lib/libkvm/kvm_getloadavg.c
===================================================================
--- a/lib/libkvm/kvm_getloadavg.c
+++ b/lib/libkvm/kvm_getloadavg.c
@@ -43,6 +43,7 @@
 #include <limits.h>
 #include <nlist.h>
 #include <kvm.h>
+#include <sys/_types.h>
 
 #include "kvm_private.h"
 
@@ -54,6 +55,11 @@
 	{ "" },
 };
 
+struct loadavg {
+	__fixpt_t       ldavg[3];
+	long            fscale;
+};
+
 /*
  * kvm_getloadavg() -- Get system load averages, from live or dead kernels.
  *
Index: b/lib/libkvm/kvm_getswapinfo.c
===================================================================
--- a/lib/libkvm/kvm_getswapinfo.c
+++ b/lib/libkvm/kvm_getswapinfo.c
@@ -209,8 +209,10 @@
 			swap_ary[unswdev].ksw_total = ttl;
 			swap_ary[unswdev].ksw_used = xsd.xsw_used;
 			swap_ary[unswdev].ksw_flags = xsd.xsw_flags;
+#if 0
 			GETSWDEVNAME(xsd.xsw_dev, swap_ary[unswdev].ksw_devname,
 			     flags);
+#endif
 		}
 		tot.ksw_total += ttl;
 		tot.ksw_used += xsd.xsw_used;
Index: b/lib/libkvm/kvm_minidump_amd64.c
===================================================================
--- a/lib/libkvm/kvm_minidump_amd64.c
+++ b/lib/libkvm/kvm_minidump_amd64.c
@@ -99,6 +99,15 @@
 	return (-1);
 }
 
+__inline__ u_long
+bsfq(u_long mask)
+{
+	u_long  result;
+
+	__asm __volatile("bsfq %1,%0" : "=r" (result) : "rm" (mask));
+	return (result);
+}
+                        
 static int
 inithash(kvm_t *kd, uint64_t *base, int len, off_t off)
 {
Index: b/lib/libkvm/kvm_minidump_i386.c
===================================================================
--- a/lib/libkvm/kvm_minidump_i386.c
+++ b/lib/libkvm/kvm_minidump_i386.c
@@ -101,6 +101,16 @@
 	return (-1);
 }
 
+__inline__ u_int
+bsfl(u_int mask)
+{
+	u_int   result;
+
+	__asm __volatile("bsfl %1,%0" : "=r" (result) : "rm" (mask));
+	return (result);
+}
+                                                
+
 static int
 inithash(kvm_t *kd, uint32_t *base, int len, off_t off)
 {
Index: b/lib/libkvm/kvm_private.h
===================================================================
--- a/lib/libkvm/kvm_private.h
+++ b/lib/libkvm/kvm_private.h
@@ -68,7 +68,7 @@
  * Functions used internally by kvm, but across kvm modules.
  */
 void	 _kvm_err(kvm_t *kd, const char *program, const char *fmt, ...)
-	    __printflike(3, 4);
+	    __attribute__((format(printf,3,4)));
 void	 _kvm_freeprocs(kvm_t *kd);
 void	 _kvm_freevtop(kvm_t *);
 int	 _kvm_initvtop(kvm_t *);
@@ -76,7 +76,7 @@
 void	*_kvm_malloc(kvm_t *kd, size_t);
 void	*_kvm_realloc(kvm_t *kd, void *, size_t);
 void	 _kvm_syserr (kvm_t *kd, const char *program, const char *fmt, ...)
-	    __printflike(3, 4);
+	    __attribute__((format(printf,3,4)));
 int	 _kvm_uvatop(kvm_t *, const struct proc *, u_long, u_long *);
 
 #if defined(__amd64__) || defined(__i386__)
Index: b/lib/libkvm/kvm_proc.c
===================================================================
--- a/lib/libkvm/kvm_proc.c
+++ b/lib/libkvm/kvm_proc.c
@@ -53,7 +53,7 @@
 #include <sys/_lock.h>
 #include <sys/_mutex.h>
 #include <sys/_task.h>
-#include <sys/cpuset.h>
+
 #include <sys/user.h>
 #include <sys/proc.h>
 #define	_WANT_PRISON	/* make jail.h give us 'struct prison' */
@@ -100,6 +100,7 @@
 	struct kinfo_proc *bp;
 	int maxcnt;
 {
+#if 0
 	int cnt = 0;
 	struct kinfo_proc kinfo_proc, *kp;
 	struct pgrp pgrp;
@@ -419,6 +420,8 @@
 		++cnt;
 	}
 	return (cnt);
+#endif
+	return -1;
 }
 
 /*
