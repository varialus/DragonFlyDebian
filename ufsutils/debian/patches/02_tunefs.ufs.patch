#DPATCHLEVEL=1
diff -Naur ufsutils.orig/tunefs.ufs/tunefs.c ufsutils.new/tunefs.ufs/tunefs.c
--- ufsutils.orig/tunefs.ufs/tunefs.c	2004-04-09 21:58:40.000000000 +0200
+++ ufsutils.new/tunefs.ufs/tunefs.c	2004-05-16 23:15:29.000000000 +0200
@@ -48,8 +48,15 @@
 #include <sys/mount.h>
 #include <sys/disklabel.h>
 #include <sys/stat.h>
+#ifndef HAVE_BSD_STATFS
+#include <sys/statvfs.h>
+#define statfs statvfs
+#define f_flags f_flag
+#endif
 
+#if HAVE_BSD_MOUNT
 #include <ufs/ufs/ufsmount.h>
+#endif
 #include <ufs/ufs/dinode.h>
 #include <ufs/ffs/fs.h>
 
@@ -84,8 +91,12 @@
 	int mflag, mvalue, nflag, oflag, ovalue, pflag, sflag, svalue;
 	int ch, found_arg, i;
 	const char *chg[2];
+#ifdef HAVE_BSD_MOUNT
 	struct ufs_args args;
+#endif
+#ifdef HAVE_BSD_STATFS
 	struct statfs stfs;
+#endif
 
 	if (argc < 3)
 		usage();
@@ -228,9 +239,11 @@
 		goto err;
 	if (disk.d_name != special) {
 		special = disk.d_name;
+#ifdef HAVE_BSD_STATFS
 		if (statfs(special, &stfs) == 0 &&
 		    strcmp(special, stfs.f_mntonname) == 0)
 			active = 1;
+#endif
 	}
 
 	if (pflag) {
@@ -369,6 +382,7 @@
 	if (sbwrite(&disk, Aflag) == -1)
 		goto err;
 	ufs_disk_close(&disk);
+#if HAVE_BSD_MOUNT && HAVE_BSD_STATFS
 	if (active) {
 		bzero(&args, sizeof(args));
 		if (mount("ufs", on,
@@ -376,6 +390,7 @@
 			err(9, "%s: reload", special);
 		warnx("file system reloaded");
 	}
+#endif
 	exit(0);
 err:
 	if (disk.d_error != NULL)
diff -Naur ufsutils.orig/tunefs.ufs/Makefile ufsutils.new/tunefs.ufs/Makefile
--- ufsutils.orig/tunefs.ufs/Makefile	2003-01-23 09:15:05.000000000 +0100
+++ ufsutils.new/tunefs.ufs/Makefile	2004-05-16 21:39:19.000000000 +0200
@@ -1,9 +1,12 @@
 #	@(#)Makefile	8.1 (Berkeley) 6/5/93
 # $FreeBSD: src/sbin/tunefs/Makefile,v 1.8 2003/01/23 08:15:05 ru Exp $
 
-PROG=	tunefs
-DPADD=	${LIBUFS}
-LDADD=	-lufs
-MAN=	tunefs.8
+PROG = tunefs.ufs
+SRCS = tunefs.c
+MAN = tunefs.8:tunefs.ufs.8
+
+LDADD = -L../libufs -lufs -L../libport -lport
+INCLUDES = -I../libufs -include port/string.h
+
+include ../Makefile.common
 
-.include <bsd.prog.mk>
