#DPATCHLEVEL=1
Index: ufsutils/freebsd/sys/mount.h
===================================================================
--- ufsutils.orig/freebsd/sys/mount.h
+++ ufsutils/freebsd/sys/mount.h
@@ -34,14 +34,11 @@
 #define _SYS_MOUNT_H_
 
 #include <sys/ucred.h>
-#include <sys/queue.h>
-#ifdef _KERNEL
-#include <sys/lockmgr.h>
-#include <sys/_lock.h>
-#include <sys/_mutex.h>
-#endif
+#include <stdint.h>
+#include <sys/vfs.h>
+#include <sys/types.h>
+#include <sys/socket.h>
 
-typedef struct fsid { int32_t val[2]; } fsid_t;	/* filesystem id type */
 
 /*
  * File identifier.
@@ -60,6 +57,7 @@
  */
 #define	MFSNAMELEN	16		/* length of type name including null */
 #define	MNAMELEN	88		/* size of on/from name bufs */
+#if 0
 #define	STATFS_VERSION	0x20030518	/* current version number */
 struct statfs {
 	uint32_t f_version;		/* structure version number */
@@ -209,6 +207,7 @@
 } while (0)
 
 #endif /* _KERNEL */
+#endif
 
 /*
  * User specifiable flags.
@@ -383,6 +382,7 @@
 	char		*np_index;	/* Index file */
 };
 
+#if 0
 /*
  * Filesystem configuration information. One of these exists for each
  * type of filesystem supported by the kernel. These are searched at
@@ -420,6 +420,7 @@
 	int	vfc_flags;
 };
 #endif
+#endif
 
 /*
  * NB: these flags refer to IMPLEMENTATION properties, not properties of
@@ -484,6 +485,7 @@
 #define VQ_FLAG4000	0x4000	/* placeholder */
 #define VQ_FLAG8000	0x8000	/* placeholder */
 
+#if 0
 #ifdef _KERNEL
 /* Point a sysctl request at a vfsidctl's data. */
 #define VCTLTOREQ(vc, req)						\
@@ -739,5 +741,5 @@
 __END_DECLS
 
 #endif /* _KERNEL */
-
+#endif
 #endif /* !_SYS_MOUNT_H_ */
