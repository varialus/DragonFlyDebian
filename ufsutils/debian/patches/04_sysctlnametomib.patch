# This patch is a hack until we get sysctlnametomib() in glibc. It
# should be removed and replaced with a build-depends on libc0.1-dev 
# (>= 2.10) when available.

--- /dev/null
+++ b/libport/sysctlnametomib.c
@@ -0,0 +1,55 @@
+/*
+ * Copyright 2001 The FreeBSD Project. All Rights Reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ *
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE FREEBSD PROJECT ``AS IS'' AND ANY
+ * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED.  IN NO EVENT SHALL THE FREEBSD PROJECT BE LIABLE FOR
+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
+ * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
+ * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
+ * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+ * SUCH DAMAGE.
+ */
+
+#ifdef __FreeBSD_kernel__
+
+#include <sys/types.h>
+#include <sys/sysctl.h>
+#include <string.h>
+
+/*
+ * This function uses a presently undocumented interface to the kernel
+ * to walk the tree and get the type so it can print the value.
+ * This interface is under work and consideration, and should probably
+ * be killed with a big axe by the first person who can find the time.
+ * (be aware though, that the proper interface isn't as obvious as it
+ * may seem, there are various conflicting requirements.
+ */
+int
+sysctlnametomib(const char *name, int *mibp, size_t *sizep)
+{
+	int oid[2];
+	int error;
+
+	oid[0] = 0;
+	oid[1] = 3;
+
+	*sizep *= sizeof (int);
+	error = sysctl(oid, 2, mibp, sizep, (void *)name, strlen(name));
+	*sizep /= sizeof (int);
+	return (error);
+}
+#endif
--- a/libport/Makefile
+++ b/libport/Makefile
@@ -1,6 +1,6 @@
 LIB = port
 LIB_type = static
-LIBSRCS = blockdev.c
+LIBSRCS = blockdev.c sysctlnametomib.c
 
 ALL_CFLAGS = -D_LIBPORT
 ifdef LIBPORT_DEBUG
--- a/fsdb.ufs/Makefile
+++ b/fsdb.ufs/Makefile
@@ -6,7 +6,7 @@
 MAN = fsdb.8:fsdb.ufs.8
 SRCS = fsdb.c fsdbutil.c
 WARNS = 0
-LDADD += -ledit -ltermcap -L../libufs -lufs -lbsd -L../fsck.ufs -lfsck.ufs
+LDADD += -ledit -ltermcap -L../libufs -lufs -lbsd -L../fsck.ufs -lfsck.ufs -L../libport -lport
 DPADD += ${LIBEDIT} ${LIBTERMCAP}
 INCLUDES = -I../fsck.ufs
 
