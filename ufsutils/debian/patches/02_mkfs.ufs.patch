#DPATCHLEVEL=1
Index: ufsutils/mkfs.ufs/mkfs.c
===================================================================
--- ufsutils.orig/mkfs.ufs/mkfs.c
+++ ufsutils/mkfs.ufs/mkfs.c
@@ -53,6 +53,7 @@
 #include <stdint.h>
 #include <stdio.h>
 #include <unistd.h>
+#include <time.h>
 #include <sys/param.h>
 #include <sys/time.h>
 #include <sys/types.h>
Index: ufsutils/mkfs.ufs/newfs.c
===================================================================
--- ufsutils.orig/mkfs.ufs/newfs.c
+++ ufsutils/mkfs.ufs/newfs.c
@@ -55,7 +55,6 @@
  */
 #include <sys/param.h>
 #include <sys/stat.h>
-#include <sys/disk.h>
 #include <sys/disklabel.h>
 #include <sys/file.h>
 #include <sys/mount.h>
@@ -140,6 +139,7 @@
 static char	device[MAXPATHLEN];
 static char	*disktype;
 static int	unlabeled;
+static char	*progname;
 
 static struct disklabel *getdisklabel(char *s);
 static void rewritelabel(char *s, struct disklabel *lp);
@@ -156,6 +156,8 @@
 	int ch, i;
 	off_t mediasize;
 
+	progname = argv[0];
+
 	while ((ch = getopt(argc, argv,
 	    "EJL:NO:RS:T:Ua:b:c:d:e:f:g:h:i:lm:no:s:")) != -1)
 		switch (ch) {
@@ -297,12 +299,19 @@
 	}
 	if (fstat(disk.d_fd, &st) < 0)
 		err(1, "%s", special);
+/*
 	if ((st.st_mode & S_IFMT) != S_IFCHR)
 		errx(1, "%s: not a character-special device", special);
+*/
 
+#ifdef HAVE_BSD_DISKLABEL
 	if (sectorsize == 0)
 		ioctl(disk.d_fd, DIOCGSECTORSIZE, &sectorsize);
-	if (sectorsize && !ioctl(disk.d_fd, DIOCGMEDIASIZE, &mediasize)) {
+#else
+	sectorsize = 512;
+#endif
+	mediasize = get_block_device_size(disk.d_fd);
+	if (sectorsize && mediasize) {
 		if (fssize == 0)
 			fssize = mediasize / sectorsize;
 		else if (fssize > mediasize / sectorsize)
@@ -375,7 +384,7 @@
 			pp->p_size *= secperblk;
 	}
 	mkfs(pp, special);
-	if (!unlabeled) {
+	if (!unlabeled && pp != NULL) {
 		if (realsectorsize != DEV_BSIZE)
 			pp->p_size /= realsectorsize / DEV_BSIZE;
 		if (!Nflag && bcmp(pp, &oldpartition, sizeof(oldpartition)))
@@ -388,6 +397,7 @@
 struct disklabel *
 getdisklabel(char *s)
 {
+#if HAVE_BSD_DISKLABEL
 	static struct disklabel lab;
 	struct disklabel *lp;
 
@@ -399,6 +409,7 @@
 		if (lp != NULL)
 			return (lp);
 	}
+#endif
 	return (NULL);
 }
 
@@ -409,8 +420,10 @@
 		return;
 	lp->d_checksum = 0;
 	lp->d_checksum = dkcksum(lp);
+#if HAVE_BSD_DISKLABEL
 	if (ioctl(disk.d_fd, DIOCWDINFO, (char *)lp) < 0)
 		warn("ioctl (WDINFO): %s: can't rewrite disk label", s);
+#endif
 }
 
 static void
@@ -418,7 +431,7 @@
 {
 	fprintf(stderr,
 	    "usage: %s [ -fsoptions ] special-device%s\n",
-	    getprogname(),
+	    progname,
 	    " [device-type]");
 	fprintf(stderr, "where fsoptions are:\n");
 	fprintf(stderr, "\t-J Enable journaling via gjournal\n");
Index: ufsutils/mkfs.ufs/Makefile
===================================================================
--- ufsutils.orig/mkfs.ufs/Makefile
+++ ufsutils/mkfs.ufs/Makefile
@@ -1,17 +1,20 @@
 #	@(#)Makefile	8.2 (Berkeley) 3/27/94
 # $FreeBSD: src/sbin/newfs/Makefile,v 1.22 2003/02/11 03:06:45 jmallett Exp $
 
-PROG=	newfs
-DPADD=	${LIBUFS}
-LDADD=	-lufs
-SRCS=	newfs.c mkfs.c
-WARNS?=	2
-MAN=	newfs.8
+PROG = mkfs.ufs
+SRCS = newfs.c mkfs.c
+WARNS ?= 2
+MAN = newfs.8:mkfs.ufs.8
 
-.include <bsd.prog.mk>
+LDADD = -L../libufs -lufs -L../libdisklabel -ldisklabel -L../libport -lport
+INCLUDES = -I../libufs -include port/string.h -include port/random.h \
+           -include port/blockdev.h
+
+include ../Makefile.common
 
 test:	${PROG}
-	sh ${.CURDIR}/runtest01.sh 
-	sh ${.CURDIR}/runtest00.sh | tee _.test
-	diff --ignore-matching-lines=FreeBSD _.test ${.CURDIR}/ref.test
+	sh ${CURDIR}/runtest01.sh
+	sh ${CURDIR}/runtest00.sh | tee _.test
+	diff --ignore-matching-lines=FreeBSD _.test ${CURDIR}/ref.test
 	echo All Tests Passed
+
