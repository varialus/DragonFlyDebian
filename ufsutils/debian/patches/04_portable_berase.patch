
Replace DIOCGDELETE call in berase() with a portable implementation instead
of just disabling it.

Note: DIOCGDELETE needs to be avoided for now, even on GNU/kFreeBSD (see
PR kern/162905).

--- a/lib/libufs/block.c
+++ b/lib/libufs/block.c
@@ -144,7 +144,6 @@
 int
 berase(struct uufsd *disk, ufs2_daddr_t blockno, ufs2_daddr_t size)
 {
-	off_t ioarg[2];
 	int rv;
 
 	ERROR(disk, NULL);
@@ -153,10 +152,28 @@
 		ERROR(disk, "failed to open disk for writing");
 		return(rv);
 	}
-#ifdef HAVE_BSD_DISKLABEL
+#if 0
+	off_t ioarg[2];
 	ioarg[0] = blockno * disk->d_bsize;
 	ioarg[1] = size;
 	rv = ioctl(disk->d_fd, DIOCGDELETE, ioarg);
+#else
+	off_t offset, chunk;
+
+	offset = blockno * disk->d_bsize;
+
+	while (size > 0) { 
+		chunk = size;
+		if (chunk > 65536 * disk->d_bsize)
+			chunk = 65536 * disk->d_bsize;
+		void *zero_chunk = malloc(chunk);
+		rv = pwrite(disk->d_fd, zero_chunk, chunk, offset);
+		free(zero_chunk);
+		size -= chunk;
+		offset += chunk;
+		if (rv == -1)
+			break;
+	}
 #endif
 	return (rv);
 }
