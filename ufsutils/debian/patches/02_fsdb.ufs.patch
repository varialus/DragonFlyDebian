#DPATCHLEVEL=1
diff -Naur ufsutils.orig/fsdb.ufs/fsdb.8 ufsutils.new/fsdb.ufs/fsdb.8
--- ufsutils.orig/fsdb.ufs/fsdb.8	2003-08-30 09:49:42.000000000 +0200
+++ ufsutils.new/fsdb.ufs/fsdb.8	2004-05-13 08:22:41.000000000 +0200
@@ -242,7 +242,7 @@
 ported it to
 .Fx .
 .Sh WARNING
-Use this tool with extreme caution--you can damage an FFS file system
+Use this tool with extreme caution\-\-you can damage an FFS file system
 beyond what
 .Xr fsck 8
 can repair.
diff -Naur ufsutils.orig/fsdb.ufs/fsdb.c ufsutils.new/fsdb.ufs/fsdb.c
--- ufsutils.orig/fsdb.ufs/fsdb.c	2003-11-13 20:08:43.000000000 +0100
+++ ufsutils.new/fsdb.ufs/fsdb.c	2004-05-16 23:07:42.000000000 +0200
@@ -35,13 +35,13 @@
 
 #include <sys/param.h>
 #include <sys/time.h>
+#include <time.h>
 #include <ctype.h>
 #include <err.h>
 #include <grp.h>
 #include <histedit.h>
 #include <pwd.h>
 #include <string.h>
-#include <timeconv.h>
 
 #include <ufs/ufs/dinode.h>
 #include <ufs/ufs/dir.h>
@@ -200,7 +200,7 @@
 prompt(EditLine *el)
 {
     static char pstring[64];
-    snprintf(pstring, sizeof(pstring), "fsdb (inum: %d)> ", curinum);
+    snprintf(pstring, sizeof(pstring), "fsdb (inum: %ld)> ", curinum);
     return pstring;
 }
 
@@ -223,7 +223,9 @@
     printactive(0);
 
     hist = history_init();
+#if HAVE_BSD_LIBEDIT_H_EVENT
     history(hist, &he, H_EVENT, 100);	/* 100 elt history buffer */
+#endif
 
     elptr = el_init("fsdb", stdin, stdout, stderr);
     el_set(elptr, EL_EDITOR, "emacs");
@@ -286,7 +288,7 @@
 
 #define GETINUM(ac,inum)    inum = strtoul(argv[ac], &cp, 0); \
     if (inum < ROOTINO || inum > maxino || cp == argv[ac] || *cp != '\0' ) { \
-	printf("inode %d out of range; range is [%d,%d]\n", \
+	printf("inode %ld out of range; range is [%ld,%ld]\n", \
 	       inum, ROOTINO, maxino); \
 	return 1; \
     }
@@ -351,8 +353,8 @@
 {
     if (!checkactive())
 	return 1;
-    DIP(curinode, di_nlink) += 1;
-    printf("inode %d link count now %d\n", curinum, DIP(curinode, di_nlink));
+    DIP_add(curinode, di_nlink, 1);
+    printf("inode %ld link count now %d\n", curinum, DIP(curinode, di_nlink));
     inodirty();
     return 0;
 }
@@ -361,8 +363,8 @@
 {
     if (!checkactive())
 	return 1;
-    DIP(curinode, di_nlink) -= 1;
-    printf("inode %d link count now %d\n", curinum, DIP(curinode, di_nlink));
+    DIP_add(curinode, di_nlink, -1);
+    printf("inode %ld link count now %d\n", curinum, DIP(curinode, di_nlink));
     inodirty();
     return 0;
 }
@@ -482,7 +484,7 @@
 	return 1;
     rval = makeentry(curinum, inum, argv[2]);
     if (rval)
-	printf("Ino %d entered as `%s'\n", inum, argv[2]);
+	printf("Ino %ld entered as `%s'\n", inum, argv[2]);
     else
 	printf("could not enter name? weird.\n");
     curinode = ginode(curinum);
@@ -635,8 +637,8 @@
 	warnx("try one of `file', `dir', `socket', `fifo'");
 	return 1;
     }
-    DIP(curinode, di_mode) &= ~IFMT;
-    DIP(curinode, di_mode) |= type;
+    DIP_and(curinode, di_mode, ~IFMT);
+    DIP_or(curinode, di_mode, type);
     inodirty();
     printactive(0);
     return 0;
@@ -657,7 +659,7 @@
 	return 1;
     }
     
-    DIP(curinode, di_size) = len;
+    DIP_set(curinode, di_size, len);
     inodirty();
     printactive(0);
     return rval;
@@ -678,8 +680,8 @@
 	return 1;
     }
     
-    DIP(curinode, di_mode) &= ~07777;
-    DIP(curinode, di_mode) |= modebits;
+    DIP_and(curinode, di_mode, ~07777);
+    DIP_or(curinode, di_mode, modebits);
     inodirty();
     printactive(0);
     return rval;
@@ -704,7 +706,7 @@
 	warnx("flags set beyond 32-bit range of field (%lx)\n", flags);
 	return(1);
     }
-    DIP(curinode, di_flags) = flags;
+    DIP_set(curinode, di_flags, flags);
     inodirty();
     printactive(0);
     return rval;
@@ -729,7 +731,7 @@
 	warnx("gen set beyond 32-bit range of field (%lx)\n", gen);
 	return(1);
     }
-    DIP(curinode, di_gen) = gen;
+    DIP_set(curinode, di_gen, gen);
     inodirty();
     printactive(0);
     return rval;
@@ -754,7 +756,7 @@
 	return 1;
     }
     
-    DIP(curinode, di_nlink) = lcnt;
+    DIP_set(curinode, di_nlink, lcnt);
     inodirty();
     printactive(0);
     return rval;
@@ -781,7 +783,7 @@
 	}
     }
     
-    DIP(curinode, di_uid) = uid;
+    DIP_set(curinode, di_uid, uid);
     inodirty();
     printactive(0);
     return rval;
@@ -807,7 +809,7 @@
 	}
     }
     
-    DIP(curinode, di_gid) = gid;
+    DIP_set(curinode, di_gid, gid);
     inodirty();
     printactive(0);
     return rval;
@@ -874,10 +876,10 @@
     if (dotime(argv[1], &secs, &nsecs))
 	return 1;
     if (sblock.fs_magic == FS_UFS1_MAGIC)
-	curinode->dp1.di_mtime = _time_to_time32(secs);
+	curinode->dp1.di_mtime = (int32_t)secs;
     else
-	curinode->dp2.di_mtime = _time_to_time64(secs);
-    DIP(curinode, di_mtimensec) = nsecs;
+	curinode->dp2.di_mtime = (int64_t)secs;
+    DIP_set(curinode, di_mtimensec, nsecs);
     inodirty();
     printactive(0);
     return 0;
@@ -891,10 +893,10 @@
     if (dotime(argv[1], &secs, &nsecs))
 	return 1;
     if (sblock.fs_magic == FS_UFS1_MAGIC)
-	curinode->dp1.di_atime = _time_to_time32(secs);
+	curinode->dp1.di_atime = (int32_t)secs;
     else
-	curinode->dp2.di_atime = _time_to_time64(secs);
-    DIP(curinode, di_atimensec) = nsecs;
+	curinode->dp2.di_atime = (int64_t)secs;
+    DIP_set(curinode, di_atimensec, nsecs);
     inodirty();
     printactive(0);
     return 0;
@@ -908,10 +910,10 @@
     if (dotime(argv[1], &secs, &nsecs))
 	return 1;
     if (sblock.fs_magic == FS_UFS1_MAGIC)
-	curinode->dp1.di_ctime = _time_to_time32(secs);
+	curinode->dp1.di_ctime = (int32_t)secs;
     else
-	curinode->dp2.di_ctime = _time_to_time64(secs);
-    DIP(curinode, di_ctimensec) = nsecs;
+	curinode->dp2.di_ctime = (int64_t)secs;
+    DIP_set(curinode, di_ctimensec, nsecs);
     inodirty();
     printactive(0);
     return 0;
diff -Naur ufsutils.orig/fsdb.ufs/fsdbutil.c ufsutils.new/fsdb.ufs/fsdbutil.c
--- ufsutils.orig/fsdb.ufs/fsdbutil.c	2003-11-13 20:08:43.000000000 +0100
+++ ufsutils.new/fsdb.ufs/fsdbutil.c	2004-05-16 20:39:43.000000000 +0200
@@ -41,7 +41,6 @@
 #include <stdint.h>
 #include <string.h>
 #include <time.h>
-#include <timeconv.h>
 
 #include <ufs/ufs/dinode.h>
 #include <ufs/ffs/fs.h>
@@ -157,23 +156,23 @@
     printf("I=%lu MODE=%o SIZE=%ju", (u_long)inum, DIP(dp, di_mode),
 	(uintmax_t)DIP(dp, di_size));
     if (sblock.fs_magic == FS_UFS1_MAGIC)
-	t = _time32_to_time(dp->dp1.di_mtime);
+	t = (time_t)dp->dp1.di_mtime;
     else
-	t = _time64_to_time(dp->dp2.di_mtime);
+	t = (time_t)dp->dp2.di_mtime;
     p = ctime(&t);
     printf("\n\tMTIME=%15.15s %4.4s [%d nsec]", &p[4], &p[20],
 	   DIP(dp, di_mtimensec));
     if (sblock.fs_magic == FS_UFS1_MAGIC)
-	t = _time32_to_time(dp->dp1.di_ctime);
+	t = (time_t)dp->dp1.di_ctime;
     else
-	t = _time64_to_time(dp->dp2.di_ctime);
+	t = (time_t)dp->dp2.di_ctime;
     p = ctime(&t);
     printf("\n\tCTIME=%15.15s %4.4s [%d nsec]", &p[4], &p[20],
 	   DIP(dp, di_ctimensec));
     if (sblock.fs_magic == FS_UFS1_MAGIC)
-	t = _time32_to_time(dp->dp1.di_atime);
+	t = (time_t)dp->dp1.di_atime;
     else
-	t = _time64_to_time(dp->dp2.di_atime);
+	t = (time_t)dp->dp2.di_atime;
     p = ctime(&t);
     printf("\n\tATIME=%15.15s %4.4s [%d nsec]\n", &p[4], &p[20],
 	   DIP(dp, di_atimensec));
@@ -285,7 +284,7 @@
     long ndb, offset;
     ufs2_daddr_t blkno;
 
-    printf("Blocks for inode %d:\n", inum);
+    printf("Blocks for inode %ld:\n", inum);
     printf("Direct blocks:\n");
     ndb = howmany(DIP(dp, di_size), sblock.fs_bsize);
     for (i = 0; i < NDADDR; i++) {
@@ -335,7 +334,7 @@
 	return 0;
     }
     if ((DIP(curinode, di_mode) & IFMT) != IFDIR) {
-	warnx("inode %d not a directory", curinum);
+	warnx("inode %ld not a directory", curinum);
 	return 0;
     }
     return 1;
@@ -360,10 +359,10 @@
 	    printstat("current inode", curinum, curinode);
 	break;
     case 0:
-	printf("current inode %d: unallocated inode\n", curinum);
+	printf("current inode %ld: unallocated inode\n", curinum);
 	break;
     default:
-	printf("current inode %d: screwy itype 0%o (mode 0%o)?\n",
+	printf("current inode %ld: screwy itype 0%o (mode 0%o)?\n",
 	       curinum, DIP(curinode, di_mode) & IFMT, DIP(curinode, di_mode));
 	break;
     }
diff -Naur ufsutils.orig/fsdb.ufs/Makefile ufsutils.new/fsdb.ufs/Makefile
--- ufsutils.orig/fsdb.ufs/Makefile	2004-02-05 23:44:23.000000000 +0100
+++ ufsutils.new/fsdb.ufs/Makefile	2004-05-16 21:37:50.000000000 +0200
@@ -2,14 +2,14 @@
 #	@(#)Makefile	8.1 (Berkeley) 6/5/93
 # $FreeBSD: src/sbin/fsdb/Makefile,v 1.17 2004/02/05 22:44:23 ru Exp $
 
-PROG=	fsdb
-MAN=	fsdb.8
-SRCS=	fsdb.c fsdbutil.c \
-	dir.c ea.c fsutil.c inode.c pass1.c pass1b.c pass2.c pass3.c pass4.c \
-	pass5.c setup.c utilities.c ffs_subr.c ffs_tables.c
-CFLAGS+= -I${.CURDIR}/../fsck_ffs
-LDADD=	-ledit -ltermcap
-DPADD=	${LIBEDIT} ${LIBTERMCAP}
-.PATH:	${.CURDIR}/../fsck_ffs ${.CURDIR}/../../sys/ufs/ffs
+PROG = fsdb.ufs
+MAN = fsdb.8:fsdb.ufs.8
+SRCS = fsdb.c fsdbutil.c
+WARNS = 0
+
+LDADD += -ledit -ltermcap -L../libufs -lufs -L../fsck.ufs -lfsck.ufs
+DPADD += ${LIBEDIT} ${LIBTERMCAP}
+INCLUDES = -I../fsck.ufs
+
+include ../Makefile.common
 
-.include <bsd.prog.mk>
