#! /bin/sh
# postinst script for kfreebsd-common
#
# see: dh_installdeb(1)

set -e

. /usr/share/debconf/confmodule 

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#

get_modules ()
  {
    test -e /etc/modules.d/kldutils || return 0
    sed -e "s/#.*//g" -e "/^\( \|\t\)*$/d" /etc/modules.d/kldutils \
      | tr "\n" ":" | sed -e "s/ /:/g" -e "s/^://g" -e s/:$//g -e "s/::*/:/g"
  }

case "$1" in
    configure)
      # Transition from the old packages
      if [ -e /etc/modules.d/kfreebsd-config ] ; then
         mv -f /etc/modules.d/kfreebsd-config /etc/modules.d/kldutils
      fi
      if [ -e /etc/modules.d/module-init-tools ] ; then
         mv -f /etc/modules.d/module-init-tools /etc/modules.d/kldutils
      fi

      # Save modules that old file requested.  We might need to unload them
      old="`get_modules`"
      cat > /etc/modules.d/kldutils << EOF
# Do not edit this file!  It is automaticaly generated by kldutils
# Use "dpkg-reconfigure kldutils" instead.
EOF
      for i in network sound other ; do
        db_get kldutils/$i
        for j in `echo "$RET" | sed -e "s/, /|/g" | tr "|" "\n" | sed -e "s/ .*//g"` ; do
          echo "$j" >> /etc/modules.d/kldutils
        done
      done
      new="`get_modules`"

      # Unload modules that:
      #   a) were listed to be loaded in the old list
      #   b) are not listed to be loaded in the new list
      #   c) are actualy loaded
      #   d) are not acpi
      OLDIFS="$IFS"
      IFS=":"
      for i in ${old} ; do case :${new}: in
        *:$i:*|*:acpi:*)
	;;
        *)
          if kldstat -n $i >/dev/null 2>/dev/null ; then
            echo "Unloading $i ..."
            if ! kldunload $i ; then
              # It could well be that the module is in use.
              echo "Warning: failed to unload stale module $i, you may want to try manualy."
            fi
          else
            echo "Not unloading $i (not loaded)"
          fi
        ;;
      esac ; done
      IFS="$OLDIFS"
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)

    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


