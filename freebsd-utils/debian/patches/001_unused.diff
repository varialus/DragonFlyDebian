
Generated by running sed -e "s/__unused/__attribute__((unused))/g" command
on all source files.

--- a/sbin/camcontrol/modeedit.c
+++ b/sbin/camcontrol/modeedit.c
@@ -140,7 +140,7 @@
 
 
 static void
-editentry_create(void *hook __unused, int letter, void *arg, int count,
+editentry_create(void *hook __attribute__((unused)), int letter, void *arg, int count,
 		 char *name)
 {
 	struct editentry *newentry;	/* Buffer to hold new entry. */
@@ -162,7 +162,7 @@
 }
 
 static void
-editentry_update(void *hook __unused, int letter, void *arg, int count,
+editentry_update(void *hook __attribute__((unused)), int letter, void *arg, int count,
 		 char *name)
 {
 	struct editentry *dest;		/* Buffer to hold entry to update. */
@@ -190,7 +190,7 @@
 }
 
 static int
-editentry_save(void *hook __unused, char *name)
+editentry_save(void *hook __attribute__((unused)), char *name)
 {
 	struct editentry *src;		/* Entry value to save. */
 
--- a/sbin/camcontrol/util.c
+++ b/sbin/camcontrol/util.c
@@ -107,7 +107,7 @@
 /* arg_put: "put argument" callback
  */
 void
-arg_put(void *hook __unused, int letter, void *arg, int count, char *name)
+arg_put(void *hook __attribute__((unused)), int letter, void *arg, int count, char *name)
 {
 	if (verbose && name && *name)
 		printf("%s:  ", name);
--- a/sbin/devfs/rule.c
+++ b/sbin/devfs/rule.c
@@ -125,7 +125,7 @@
 }
 
 static int
-rule_apply(int ac __unused, char **av __unused)
+rule_apply(int ac __attribute__((unused)), char **av __attribute__((unused)))
 {
 	struct devfs_rule dr;
 	devfs_rnum rnum;
@@ -153,7 +153,7 @@
 }
 
 static int
-rule_applyset(int ac, char **av __unused)
+rule_applyset(int ac, char **av __attribute__((unused)))
 {
 	int rv;
 
@@ -166,7 +166,7 @@
 }
 
 static int
-rule_del(int ac __unused, char **av)
+rule_del(int ac __attribute__((unused)), char **av)
 {
 	devfs_rid rid;
 	int rv;
@@ -181,7 +181,7 @@
 }
 
 static int
-rule_delset(int ac, char **av __unused)
+rule_delset(int ac, char **av __attribute__((unused)))
 {
 	struct devfs_rule dr;
 	int rv;
@@ -202,7 +202,7 @@
 }
 
 static int
-rule_show(int ac __unused, char **av)
+rule_show(int ac __attribute__((unused)), char **av)
 {
 	struct devfs_rule dr;
 	devfs_rnum rnum;
@@ -229,7 +229,7 @@
 }
 
 static int
-rule_showsets(int ac, char **av __unused)
+rule_showsets(int ac, char **av __attribute__((unused)))
 {
 	devfs_rsnum rsnum;
 
@@ -307,7 +307,7 @@
  * Construct a /struct devfs_rule/ from ac and av.
  */
 static void
-rulespec_intok(struct devfs_rule *dr, int ac __unused, char **av,
+rulespec_intok(struct devfs_rule *dr, int ac __attribute__((unused)), char **av,
     devfs_rsnum rsnum)
 {
 	struct intstr *is;
--- a/sbin/geom/class/eli/geom_eli.c
+++ b/sbin/geom/class/eli/geom_eli.c
@@ -1083,7 +1083,7 @@
 }
 
 static void
-eli_delkey_attached(struct gctl_req *req, const char *prov __unused)
+eli_delkey_attached(struct gctl_req *req, const char *prov __attribute__((unused)))
 {
 
 	gctl_issue(req);
--- a/sbin/geom/class/multipath/geom_multipath.c
+++ b/sbin/geom/class/multipath/geom_multipath.c
@@ -79,7 +79,7 @@
 };
 
 static void
-mp_main(struct gctl_req *req, unsigned int flags __unused)
+mp_main(struct gctl_req *req, unsigned int flags __attribute__((unused)))
 {
 	const char *name;
 
--- a/sbin/geom/class/part/geom_part.c
+++ b/sbin/geom/class/part/geom_part.c
@@ -622,7 +622,7 @@
 }
 
 static void
-gpart_show(struct gctl_req *req, unsigned int fl __unused)
+gpart_show(struct gctl_req *req, unsigned int fl __attribute__((unused)))
 {
 	struct gmesh mesh;
 	struct gclass *classp;
@@ -668,7 +668,7 @@
 }
 
 static void
-gpart_backup(struct gctl_req *req, unsigned int fl __unused)
+gpart_backup(struct gctl_req *req, unsigned int fl __attribute__((unused)))
 {
 	struct gmesh mesh;
 	struct gclass *classp;
@@ -757,13 +757,13 @@
 }
 
 static void
-gpart_sighndl(int sig __unused)
+gpart_sighndl(int sig __attribute__((unused)))
 {
 	undo_restore = 1;
 }
 
 static void
-gpart_restore(struct gctl_req *req, unsigned int fl __unused)
+gpart_restore(struct gctl_req *req, unsigned int fl __attribute__((unused)))
 {
 	struct gmesh mesh;
 	struct gclass *classp;
@@ -1211,7 +1211,7 @@
 }
 
 static void
-gpart_issue(struct gctl_req *req, unsigned int fl __unused)
+gpart_issue(struct gctl_req *req, unsigned int fl __attribute__((unused)))
 {
 	char buf[4096];
 	const char *errstr;
--- a/sbin/geom/class/sched/geom_sched.c
+++ b/sbin/geom/class/sched/geom_sched.c
@@ -68,7 +68,7 @@
 #endif
 
 static void
-gcmd_createinsert(struct gctl_req *req, unsigned flags __unused)
+gcmd_createinsert(struct gctl_req *req, unsigned flags __attribute__((unused)))
 {
 	const char *reqalgo;
 	char name[64];
--- a/sbin/geom/core/geom.c
+++ b/sbin/geom/core/geom.c
@@ -770,7 +770,7 @@
 }
 
 static void
-std_help(struct gctl_req *req __unused, unsigned flags __unused)
+std_help(struct gctl_req *req __attribute__((unused)), unsigned flags __attribute__((unused)))
 {
 
 	usage();
@@ -794,7 +794,7 @@
 }
 
 static void
-std_list(struct gctl_req *req, unsigned flags __unused)
+std_list(struct gctl_req *req, unsigned flags __attribute__((unused)))
 {
 	struct gmesh mesh;
 	struct gclass *classp;
@@ -928,7 +928,7 @@
 }
 
 static void
-std_status(struct gctl_req *req, unsigned flags __unused)
+std_status(struct gctl_req *req, unsigned flags __attribute__((unused)))
 {
 	struct gmesh mesh;
 	struct gclass *classp;
@@ -1024,7 +1024,7 @@
 }
 
 static void
-std_load(struct gctl_req *req __unused, unsigned flags)
+std_load(struct gctl_req *req __attribute__((unused)), unsigned flags)
 {
 
 	/*
@@ -1049,7 +1049,7 @@
 }
 
 static void
-std_unload(struct gctl_req *req, unsigned flags __unused)
+std_unload(struct gctl_req *req, unsigned flags __attribute__((unused)))
 {
 	char name[64];
 	int id;
--- a/sbin/ifconfig/af_atalk.c
+++ b/sbin/ifconfig/af_atalk.c
@@ -55,7 +55,7 @@
 
 /* XXX  FIXME -- should use strtoul for better parsing. */
 static void
-setatrange(const char *range, int dummy __unused, int s, 
+setatrange(const char *range, int dummy __attribute__((unused)), int s, 
     const struct afswtch *afp)
 {
 	u_int	first = 123, last = 123;
@@ -69,7 +69,7 @@
 }
 
 static void
-setatphase(const char *phase, int dummy __unused, int s, 
+setatphase(const char *phase, int dummy __attribute__((unused)), int s, 
     const struct afswtch *afp)
 {
 	if (!strcmp(phase, "1"))
@@ -81,7 +81,7 @@
 }
 
 static void
-at_status(int s __unused, const struct ifaddrs *ifa)
+at_status(int s __attribute__((unused)), const struct ifaddrs *ifa)
 {
 	struct sockaddr_at *sat, null_sat;
 	struct netrange *nr;
--- a/sbin/ifconfig/af_inet.c
+++ b/sbin/ifconfig/af_inet.c
@@ -57,7 +57,7 @@
 static struct ifreq in_ridreq;
 
 static void
-in_status(int s __unused, const struct ifaddrs *ifa)
+in_status(int s __attribute__((unused)), const struct ifaddrs *ifa)
 {
 	struct sockaddr_in *sin, null_sin;
 	
--- a/sbin/ifconfig/af_inet6.c
+++ b/sbin/ifconfig/af_inet6.c
@@ -73,7 +73,7 @@
 static	char addr_buf[MAXHOSTNAMELEN *2 + 1];	/*for getnameinfo()*/
 
 static void
-setifprefixlen(const char *addr, int dummy __unused, int s,
+setifprefixlen(const char *addr, int dummy __attribute__((unused)), int s,
     const struct afswtch *afp)
 {
         if (afp->af_getprefix != NULL)
@@ -82,7 +82,7 @@
 }
 
 static void
-setip6flags(const char *dummyaddr __unused, int flag, int dummysoc __unused,
+setip6flags(const char *dummyaddr __attribute__((unused)), int flag, int dummysoc __attribute__((unused)),
     const struct afswtch *afp)
 {
 	if (afp->af_af != AF_INET6)
@@ -117,21 +117,21 @@
 }
 
 static void
-setip6pltime(const char *seconds, int dummy __unused, int s, 
+setip6pltime(const char *seconds, int dummy __attribute__((unused)), int s, 
     const struct afswtch *afp)
 {
 	setip6lifetime("pltime", seconds, s, afp);
 }
 
 static void
-setip6vltime(const char *seconds, int dummy __unused, int s, 
+setip6vltime(const char *seconds, int dummy __attribute__((unused)), int s, 
     const struct afswtch *afp)
 {
 	setip6lifetime("vltime", seconds, s, afp);
 }
 
 static void
-setip6eui64(const char *cmd, int dummy __unused, int s,
+setip6eui64(const char *cmd, int dummy __attribute__((unused)), int s,
     const struct afswtch *afp)
 {
 	struct ifaddrs *ifap, *ifa;
@@ -177,7 +177,7 @@
 }
 
 static void
-in6_status(int s __unused, const struct ifaddrs *ifa)
+in6_status(int s __attribute__((unused)), const struct ifaddrs *ifa)
 {
 	struct sockaddr_in6 *sin, null_sin;
 	struct in6_ifreq ifr6;
@@ -527,7 +527,7 @@
 };
 
 static void
-in6_Lopt_cb(const char *optarg __unused)
+in6_Lopt_cb(const char *optarg __attribute__((unused)))
 {
 	ip6lifetime++;	/* print IPv6 address lifetime */
 }
--- a/sbin/ifconfig/af_ipx.c
+++ b/sbin/ifconfig/af_ipx.c
@@ -54,7 +54,7 @@
 static struct ifreq ipx_ridreq;
 
 static void
-ipx_status(int s __unused, const struct ifaddrs *ifa)
+ipx_status(int s __attribute__((unused)), const struct ifaddrs *ifa)
 {
 	struct sockaddr_ipx *sipx, null_sipx;
 
--- a/sbin/ifconfig/af_link.c
+++ b/sbin/ifconfig/af_link.c
@@ -52,7 +52,7 @@
 static struct ifreq link_ridreq;
 
 static void
-link_status(int s __unused, const struct ifaddrs *ifa)
+link_status(int s __attribute__((unused)), const struct ifaddrs *ifa)
 {
 	/* XXX no const 'cuz LLADDR is defined wrong */
 	struct sockaddr_dl *sdl = (struct sockaddr_dl *) ifa->ifa_addr;
--- a/sbin/ifconfig/af_nd6.c
+++ b/sbin/ifconfig/af_nd6.c
@@ -65,7 +65,7 @@
 void setnd6defif(const char *, int, int, const struct afswtch *);
 
 void
-setnd6flags(const char *dummyaddr __unused,
+setnd6flags(const char *dummyaddr __attribute__((unused)),
 	int d, int s,
 	const struct afswtch *afp)
 {
@@ -89,7 +89,7 @@
 }
 
 void
-setnd6defif(const char *dummyaddr __unused,
+setnd6defif(const char *dummyaddr __attribute__((unused)),
 	int d, int s,
 	const struct afswtch *afp)
 {
--- a/sbin/ifconfig/ifclone.c
+++ b/sbin/ifconfig/ifclone.c
@@ -174,7 +174,7 @@
 };
 
 static void
-clone_Copt_cb(const char *optarg __unused)
+clone_Copt_cb(const char *optarg __attribute__((unused)))
 {
 	list_cloners();
 	exit(0);
--- a/sbin/ifconfig/ifconfig.c
+++ b/sbin/ifconfig/ifconfig.c
@@ -644,7 +644,7 @@
 }
 
 static void
-setifvnet(const char *jname, int dummy __unused, int s,
+setifvnet(const char *jname, int dummy __attribute__((unused)), int s,
     const struct afswtch *afp)
 {
 	struct ifreq my_ifr;
@@ -658,7 +658,7 @@
 }
 
 static void
-setifrvnet(const char *jname, int dummy __unused, int s,
+setifrvnet(const char *jname, int dummy __attribute__((unused)), int s,
     const struct afswtch *afp)
 {
 	struct ifreq my_ifr;
@@ -672,7 +672,7 @@
 }
 
 static void
-setifnetmask(const char *addr, int dummy __unused, int s,
+setifnetmask(const char *addr, int dummy __attribute__((unused)), int s,
     const struct afswtch *afp)
 {
 	if (afp->af_getaddr != NULL) {
@@ -682,7 +682,7 @@
 }
 
 static void
-setifbroadaddr(const char *addr, int dummy __unused, int s,
+setifbroadaddr(const char *addr, int dummy __attribute__((unused)), int s,
     const struct afswtch *afp)
 {
 	if (afp->af_getaddr != NULL)
@@ -690,7 +690,7 @@
 }
 
 static void
-setifipdst(const char *addr, int dummy __unused, int s,
+setifipdst(const char *addr, int dummy __attribute__((unused)), int s,
     const struct afswtch *afp)
 {
 	const struct afswtch *inet;
@@ -723,7 +723,7 @@
 
 /*ARGSUSED*/
 static void
-setifdstaddr(const char *addr, int param __unused, int s, 
+setifdstaddr(const char *addr, int param __attribute__((unused)), int s, 
     const struct afswtch *afp)
 {
 	if (afp->af_getaddr != NULL)
@@ -783,7 +783,7 @@
 }
 
 static void
-setifmetric(const char *val, int dummy __unused, int s, 
+setifmetric(const char *val, int dummy __attribute__((unused)), int s, 
     const struct afswtch *afp)
 {
 	strncpy(ifr.ifr_name, name, sizeof (ifr.ifr_name));
@@ -793,7 +793,7 @@
 }
 
 static void
-setifmtu(const char *val, int dummy __unused, int s, 
+setifmtu(const char *val, int dummy __attribute__((unused)), int s, 
     const struct afswtch *afp)
 {
 	strncpy(ifr.ifr_name, name, sizeof (ifr.ifr_name));
@@ -803,7 +803,7 @@
 }
 
 static void
-setifname(const char *val, int dummy __unused, int s, 
+setifname(const char *val, int dummy __attribute__((unused)), int s, 
     const struct afswtch *afp)
 {
 	char *newname;
@@ -825,7 +825,7 @@
 
 /* ARGSUSED */
 static void
-setifdescr(const char *val, int dummy __unused, int s, 
+setifdescr(const char *val, int dummy __attribute__((unused)), int s, 
     const struct afswtch *afp)
 {
 	char *newdescr;
--- a/sbin/ifconfig/ifgre.c
+++ b/sbin/ifconfig/ifgre.c
@@ -65,7 +65,7 @@
 }
 
 static void
-setifgrekey(const char *val, int dummy __unused, int s, 
+setifgrekey(const char *val, int dummy __attribute__((unused)), int s, 
     const struct afswtch *afp)
 {
 	uint32_t grekey = atol(val);
--- a/sbin/ipfw/ipfw2.c
+++ b/sbin/ipfw/ipfw2.c
@@ -925,7 +925,7 @@
 #define	HAVE_OPTIONS	0x8000
 
 static void
-show_prerequisites(int *flags, int want, int cmd __unused)
+show_prerequisites(int *flags, int want, int cmd __attribute__((unused)))
 {
 	if (co.comment_only)
 		return;
--- a/sbin/kldconfig/kldconfig.c
+++ b/sbin/kldconfig/kldconfig.c
@@ -208,7 +208,7 @@
 
 /* Remove a path component from the module search path */
 static void
-rempath(struct pathhead *pathq, char *path, int force, int insert __unused)
+rempath(struct pathhead *pathq, char *path, int force, int insert __attribute__((unused)))
 {
 	char pathbuf[MAXPATHLEN+1];
 	struct pathentry *pe;
--- a/sbin/mount_autofs/mount_autofs.c
+++ b/sbin/mount_autofs/mount_autofs.c
@@ -69,8 +69,8 @@
 mymount(
 	const char *type,
 	const char *dir,
-	int flags __unused,
-	void *data __unused
+	int flags __attribute__((unused)),
+	void *data __attribute__((unused))
 )
 {
 	struct iovec iov[4], *iovp;
--- a/sbin/mount_std/mount_std.c
+++ b/sbin/mount_std/mount_std.c
@@ -66,7 +66,7 @@
 static void usage(void) __dead2;
 
 static void
-catchsig(int s __unused)
+catchsig(int s __attribute__((unused)))
 {
 	caughtsig = 1;
 }
--- a/sys/contrib/pf/net/if_pfsync.c
+++ b/sys/contrib/pf/net/if_pfsync.c
@@ -488,7 +488,7 @@
 
 void
 #ifdef __FreeBSD__
-pfsync_input(struct mbuf *m, __unused int off)
+pfsync_input(struct mbuf *m, __attribute__((unused)) int off)
 #else
 pfsync_input(struct mbuf *m, ...)
 #endif
@@ -2275,7 +2275,7 @@
 }
 
 void
-pfsync_senddef(void *arg, __unused int pending)
+pfsync_senddef(void *arg, __attribute__((unused)) int pending)
 {
 	struct pfsync_softc *sc = (struct pfsync_softc *)arg;
 	struct mbuf *m;
--- a/sys/contrib/pf/net/if_pfsync.h
+++ b/sys/contrib/pf/net/if_pfsync.h
@@ -341,7 +341,7 @@
 
 #ifdef _KERNEL
 #ifdef __FreeBSD__
-void pfsync_input(struct mbuf *, __unused int);
+void pfsync_input(struct mbuf *, __attribute__((unused)) int);
 #else
 void pfsync_input(struct mbuf *, ...);
 #endif
--- a/sys/contrib/pf/net/pf_if.c
+++ b/sys/contrib/pf/net/pf_if.c
@@ -105,12 +105,12 @@
 int		 pfi_skip_if(const char *, struct pfi_kif *);
 int		 pfi_unmask(void *);
 #ifdef __FreeBSD__
-void		 pfi_attach_ifnet_event(void * __unused, struct ifnet *);
-void		 pfi_detach_ifnet_event(void * __unused, struct ifnet *);
-void		 pfi_attach_group_event(void * __unused, struct ifg_group *);
-void		 pfi_change_group_event(void * __unused, char *);
-void		 pfi_detach_group_event(void * __unused, struct ifg_group *);
-void		 pfi_ifaddr_event(void * __unused, struct ifnet *);
+void		 pfi_attach_ifnet_event(void * __attribute__((unused)), struct ifnet *);
+void		 pfi_detach_ifnet_event(void * __attribute__((unused)), struct ifnet *);
+void		 pfi_attach_group_event(void * __attribute__((unused)), struct ifg_group *);
+void		 pfi_change_group_event(void * __attribute__((unused)), char *);
+void		 pfi_detach_group_event(void * __attribute__((unused)), struct ifg_group *);
+void		 pfi_ifaddr_event(void * __attribute__((unused)), struct ifnet *);
 
 #endif
 
@@ -892,7 +892,7 @@
 
 #ifdef __FreeBSD__
 void
-pfi_attach_ifnet_event(void *arg __unused, struct ifnet *ifp)
+pfi_attach_ifnet_event(void *arg __attribute__((unused)), struct ifnet *ifp)
 {
 	PF_LOCK();
 	pfi_attach_ifnet(ifp);
@@ -903,7 +903,7 @@
 }
 
 void
-pfi_detach_ifnet_event(void *arg __unused, struct ifnet *ifp)
+pfi_detach_ifnet_event(void *arg __attribute__((unused)), struct ifnet *ifp)
 {
 	PF_LOCK();
 	pfi_detach_ifnet(ifp);
@@ -914,7 +914,7 @@
 }
 
 void
-pfi_attach_group_event(void *arg __unused, struct ifg_group *ifg)
+pfi_attach_group_event(void *arg __attribute__((unused)), struct ifg_group *ifg)
 {
 	PF_LOCK();
 	pfi_attach_ifgroup(ifg);
@@ -922,7 +922,7 @@
 }
 
 void
-pfi_change_group_event(void *arg __unused, char *gname)
+pfi_change_group_event(void *arg __attribute__((unused)), char *gname)
 {
 	PF_LOCK();
 	pfi_group_change(gname);
@@ -930,7 +930,7 @@
 }
 
 void
-pfi_detach_group_event(void *arg __unused, struct ifg_group *ifg)
+pfi_detach_group_event(void *arg __attribute__((unused)), struct ifg_group *ifg)
 {
 	PF_LOCK();
 	pfi_detach_ifgroup(ifg);
@@ -938,7 +938,7 @@
 }
 
 void
-pfi_ifaddr_event(void *arg __unused, struct ifnet *ifp)
+pfi_ifaddr_event(void *arg __attribute__((unused)), struct ifnet *ifp)
 {
 	PF_LOCK();
 	if (ifp && ifp->if_pf_kif)
--- a/sys/geom/eli/g_eli.c
+++ b/sys/geom/eli/g_eli.c
@@ -969,8 +969,8 @@
 }
 
 static int
-g_eli_destroy_geom(struct gctl_req *req __unused,
-    struct g_class *mp __unused, struct g_geom *gp)
+g_eli_destroy_geom(struct gctl_req *req __attribute__((unused)),
+    struct g_class *mp __attribute__((unused)), struct g_geom *gp)
 {
 	struct g_eli_softc *sc;
 
@@ -1041,7 +1041,7 @@
  * We detect providers which should be attached before root is mounted.
  */
 static struct g_geom *
-g_eli_taste(struct g_class *mp, struct g_provider *pp, int flags __unused)
+g_eli_taste(struct g_class *mp, struct g_provider *pp, int flags __attribute__((unused)))
 {
 	struct g_eli_metadata md;
 	struct g_geom *gp;
--- a/usr.bin/ktrace/ktrace.c
+++ b/usr.bin/ktrace/ktrace.c
@@ -200,7 +200,7 @@
 }
 
 static void
-no_ktrace(int sig __unused)
+no_ktrace(int sig __attribute__((unused)))
 {
         (void)fprintf(stderr,
 "error:\tktrace() system call not supported in the running kernel\n\tre-compile kernel with 'options KTRACE'\n");
--- a/usr.bin/netstat/atalk.c
+++ b/usr.bin/netstat/atalk.c
@@ -217,8 +217,8 @@
 }
 
 void
-atalkprotopr(u_long off __unused, const char *name, int af1 __unused,
-    int proto __unused)
+atalkprotopr(u_long off __attribute__((unused)), const char *name, int af1 __attribute__((unused)),
+    int proto __attribute__((unused)))
 {
 	struct ddpcb *this, *next;
 
@@ -267,8 +267,8 @@
  * Dump DDP statistics structure.
  */
 void
-ddp_stats(u_long off __unused, const char *name, int af1 __unused,
-    int proto __unused)
+ddp_stats(u_long off __attribute__((unused)), const char *name, int af1 __attribute__((unused)),
+    int proto __attribute__((unused)))
 {
 	struct ddpstat ddpstat;
 
--- a/usr.bin/netstat/if.c
+++ b/usr.bin/netstat/if.c
@@ -86,7 +86,7 @@
  * Dump pfsync statistics structure.
  */
 void
-pfsync_stats(u_long off, const char *name, int af1 __unused, int proto __unused)
+pfsync_stats(u_long off, const char *name, int af1 __attribute__((unused)), int proto __attribute__((unused)))
 {
 	struct pfsyncstats pfsyncstat, zerostat;
 	size_t len = sizeof(struct pfsyncstats);
@@ -707,7 +707,7 @@
  * caught.
  */
 static void
-catchalarm(int signo __unused)
+catchalarm(int signo __attribute__((unused)))
 {
 	signalled = YES;
 }
--- a/usr.bin/netstat/inet.c
+++ b/usr.bin/netstat/inet.c
@@ -559,7 +559,7 @@
  * Dump TCP statistics structure.
  */
 void
-tcp_stats(u_long off, const char *name, int af1 __unused, int proto __unused)
+tcp_stats(u_long off, const char *name, int af1 __attribute__((unused)), int proto __attribute__((unused)))
 {
 	struct tcpstat tcpstat, zerostat;
 	size_t len = sizeof tcpstat;
@@ -701,7 +701,7 @@
  * Dump UDP statistics structure.
  */
 void
-udp_stats(u_long off, const char *name, int af1 __unused, int proto __unused)
+udp_stats(u_long off, const char *name, int af1 __attribute__((unused)), int proto __attribute__((unused)))
 {
 	struct udpstat udpstat, zerostat;
 	size_t len = sizeof udpstat;
@@ -761,7 +761,7 @@
  * Dump CARP statistics structure.
  */
 void
-carp_stats(u_long off, const char *name, int af1 __unused, int proto __unused)
+carp_stats(u_long off, const char *name, int af1 __attribute__((unused)), int proto __attribute__((unused)))
 {
 	struct carpstats carpstat, zerostat;
 	size_t len = sizeof(struct carpstats);
@@ -812,7 +812,7 @@
  * Dump IP statistics structure.
  */
 void
-ip_stats(u_long off, const char *name, int af1 __unused, int proto __unused)
+ip_stats(u_long off, const char *name, int af1 __attribute__((unused)), int proto __attribute__((unused)))
 {
 	struct ipstat ipstat, zerostat;
 	size_t len = sizeof ipstat;
@@ -876,7 +876,7 @@
  * Dump ARP statistics structure.
  */
 void
-arp_stats(u_long off, const char *name, int af1 __unused, int proto __unused)
+arp_stats(u_long off, const char *name, int af1 __attribute__((unused)), int proto __attribute__((unused)))
 {
 	struct arpstat arpstat, zerostat;
 	size_t len = sizeof(arpstat);
@@ -961,7 +961,7 @@
  * Dump ICMP statistics.
  */
 void
-icmp_stats(u_long off, const char *name, int af1 __unused, int proto __unused)
+icmp_stats(u_long off, const char *name, int af1 __attribute__((unused)), int proto __attribute__((unused)))
 {
 	struct icmpstat icmpstat, zerostat;
 	int i, first;
@@ -1084,7 +1084,7 @@
  * Dump IGMP statistics structure.
  */
 void
-igmp_stats(u_long off, const char *name, int af1 __unused, int proto __unused)
+igmp_stats(u_long off, const char *name, int af1 __attribute__((unused)), int proto __attribute__((unused)))
 {
 	struct igmpstat igmpstat, zerostat;
 	size_t len;
@@ -1166,8 +1166,8 @@
  * Dump PIM statistics structure.
  */
 void
-pim_stats(u_long off __unused, const char *name, int af1 __unused,
-    int proto __unused)
+pim_stats(u_long off __attribute__((unused)), const char *name, int af1 __attribute__((unused)),
+    int proto __attribute__((unused)))
 {
 	struct pimstat pimstat, zerostat;
 	size_t len = sizeof pimstat;
--- a/usr.bin/netstat/inet6.c
+++ b/usr.bin/netstat/inet6.c
@@ -362,7 +362,7 @@
  * Dump IP6 statistics structure.
  */
 void
-ip6_stats(u_long off, const char *name, int af1 __unused, int proto __unused)
+ip6_stats(u_long off, const char *name, int af1 __attribute__((unused)), int proto __attribute__((unused)))
 {
 	struct ip6stat ip6stat;
 	int first, i;
@@ -842,7 +842,7 @@
  * Dump ICMP6 statistics.
  */
 void
-icmp6_stats(u_long off, const char *name, int af1 __unused, int proto __unused)
+icmp6_stats(u_long off, const char *name, int af1 __attribute__((unused)), int proto __attribute__((unused)))
 {
 	struct icmp6stat icmp6stat;
 	int i, first;
@@ -997,7 +997,7 @@
  * Dump PIM statistics structure.
  */
 void
-pim6_stats(u_long off, const char *name, int af1 __unused, int proto __unused)
+pim6_stats(u_long off, const char *name, int af1 __attribute__((unused)), int proto __attribute__((unused)))
 {
 	struct pim6stat pim6stat, zerostat;
 	size_t len = sizeof pim6stat;
@@ -1035,7 +1035,7 @@
  * Dump raw ip6 statistics structure.
  */
 void
-rip6_stats(u_long off, const char *name, int af1 __unused, int proto __unused)
+rip6_stats(u_long off, const char *name, int af1 __attribute__((unused)), int proto __attribute__((unused)))
 {
 	struct rip6stat rip6stat;
 	u_quad_t delivered;
--- a/usr.bin/netstat/ipsec.c
+++ b/usr.bin/netstat/ipsec.c
@@ -265,7 +265,7 @@
 }
 
 void
-ipsec_stats(u_long off, const char *name, int af1 __unused, int proto __unused)
+ipsec_stats(u_long off, const char *name, int af1 __attribute__((unused)), int proto __attribute__((unused)))
 {
 	struct ipsecstat ipsecstat;
 
@@ -353,7 +353,7 @@
 }
 
 void
-ah_stats(u_long off, const char *name, int family __unused, int proto __unused)
+ah_stats(u_long off, const char *name, int family __attribute__((unused)), int proto __attribute__((unused)))
 {
 	struct ahstat ahstat;
 
@@ -403,7 +403,7 @@
 }
 
 void
-esp_stats(u_long off, const char *name, int family __unused, int proto __unused)
+esp_stats(u_long off, const char *name, int family __attribute__((unused)), int proto __attribute__((unused)))
 {
 	struct espstat espstat;
 
@@ -458,8 +458,8 @@
 }
 
 void
-ipcomp_stats(u_long off, const char *name, int family __unused,
-    int proto __unused)
+ipcomp_stats(u_long off, const char *name, int family __attribute__((unused)),
+    int proto __attribute__((unused)))
 {
 	struct ipcompstat ipcompstat;
 
--- a/usr.bin/netstat/ipx.c
+++ b/usr.bin/netstat/ipx.c
@@ -81,7 +81,7 @@
  */
 
 void
-ipxprotopr(u_long off, const char *name, int af1 __unused, int proto __unused)
+ipxprotopr(u_long off, const char *name, int af1 __attribute__((unused)), int proto __attribute__((unused)))
 {
 	struct ipxpcbhead cb;
 	struct ipxpcb *ipxp;
@@ -154,7 +154,7 @@
  * Dump SPX statistics structure.
  */
 void
-spx_stats(u_long off, const char *name, int af1 __unused, int proto __unused)
+spx_stats(u_long off, const char *name, int af1 __attribute__((unused)), int proto __attribute__((unused)))
 {
 	struct spx_istat spx_istat;
 #define	spxstat spx_istat.newstats
@@ -230,7 +230,7 @@
  * Dump IPX statistics structure.
  */
 void
-ipx_stats(u_long off, const char *name, int af1 __unused, int proto __unused)
+ipx_stats(u_long off, const char *name, int af1 __attribute__((unused)), int proto __attribute__((unused)))
 {
 	struct ipxstat ipxstat;
 
@@ -273,7 +273,7 @@
  */
 /*ARGSUSED*/
 void
-ipxerr_stats(u_long off, const char *name, int af __unused, int proto __unused)
+ipxerr_stats(u_long off, const char *name, int af __attribute__((unused)), int proto __attribute__((unused)))
 {
 	struct ipx_errstat ipx_errstat;
 	int j;
--- a/usr.bin/netstat/netgraph.c
+++ b/usr.bin/netstat/netgraph.c
@@ -62,8 +62,8 @@
 static	int csock = -1;
 
 void
-netgraphprotopr(u_long off, const char *name, int af1 __unused,
-    int proto __unused)
+netgraphprotopr(u_long off, const char *name, int af1 __attribute__((unused)),
+    int proto __attribute__((unused)))
 {
 	struct ngpcb *this, *next;
 	struct ngpcb ngpcb;
--- a/usr.bin/netstat/pfkey.c
+++ b/usr.bin/netstat/pfkey.c
@@ -114,8 +114,8 @@
 }
 
 void
-pfkey_stats(u_long off, const char *name, int family __unused,
-    int proto __unused)
+pfkey_stats(u_long off, const char *name, int family __attribute__((unused)),
+    int proto __attribute__((unused)))
 {
 	struct pfkeystat pfkeystat;
 	unsigned first, type;
--- a/usr.bin/netstat/route.c
+++ b/usr.bin/netstat/route.c
@@ -283,7 +283,7 @@
 static int wid_expire;
 
 static void
-size_cols(int ef __unused, struct radix_node *rn)
+size_cols(int ef __attribute__((unused)), struct radix_node *rn)
 {
 	wid_dst = WID_DST_DEFAULT(ef);
 	wid_gw = WID_GW_DEFAULT(ef);
@@ -840,7 +840,7 @@
 	0)
 
 static void
-domask(char *dst, in_addr_t addr __unused, u_long mask)
+domask(char *dst, in_addr_t addr __attribute__((unused)), u_long mask)
 {
 	int b, i;
 
--- a/usr.bin/netstat/sctp.c
+++ b/usr.bin/netstat/sctp.c
@@ -431,7 +431,7 @@
  * protocol.
  */
 void
-sctp_protopr(u_long off __unused,
+sctp_protopr(u_long off __attribute__((unused)),
     const char *name, int af1, int proto)
 {
 	char *buf;
@@ -510,7 +510,7 @@
  * Dump SCTP statistics structure.
  */
 void
-sctp_stats(u_long off, const char *name, int af1 __unused, int proto __unused)
+sctp_stats(u_long off, const char *name, int af1 __attribute__((unused)), int proto __attribute__((unused)))
 {
 	struct sctpstat sctpstat, zerostat;
 	size_t len = sizeof(sctpstat);
--- a/usr.bin/vmstat/vmstat.c
+++ b/usr.bin/vmstat/vmstat.c
@@ -861,7 +861,7 @@
  * Force a header to be prepended to the next output.
  */
 static void
-needhdr(int dummy __unused)
+needhdr(int dummy __attribute__((unused)))
 {
 
 	hdrcnt = 1;
--- a/usr.sbin/arp/arp.c
+++ b/usr.sbin/arp/arp.c
@@ -656,8 +656,8 @@
  * Nuke an arp entry
  */
 static void
-nuke_entry(struct sockaddr_dl *sdl __unused,
-	struct sockaddr_inarp *addr, struct rt_msghdr *rtm __unused)
+nuke_entry(struct sockaddr_dl *sdl __attribute__((unused)),
+	struct sockaddr_inarp *addr, struct rt_msghdr *rtm __attribute__((unused)))
 {
 	char ip[20];
 
--- a/usr.sbin/nfscbd/nfscbd.c
+++ b/usr.sbin/nfscbd/nfscbd.c
@@ -323,13 +323,13 @@
 }
 
 static void
-nonfs(int signo __unused)
+nonfs(int signo __attribute__((unused)))
 {
 	syslog(LOG_ERR, "missing system call: NFS not available");
 }
 
 static void
-reapchild(int signo __unused)
+reapchild(int signo __attribute__((unused)))
 {
 	pid_t pid;
 
@@ -351,7 +351,7 @@
  * Cleanup master after SIGUSR1.
  */
 static void
-cleanup(int signo __unused)
+cleanup(int signo __attribute__((unused)))
 {
 	nfscbd_exit(0);
 }
@@ -360,13 +360,13 @@
  * Cleanup child after SIGUSR1.
  */
 static void
-child_cleanup(int signo __unused)
+child_cleanup(int signo __attribute__((unused)))
 {
 	exit(0);
 }
 
 static void
-nfscbd_exit(int status __unused)
+nfscbd_exit(int status __attribute__((unused)))
 {
 	killchildren();
 	exit(status);
--- a/usr.sbin/nfsd/nfsd.c
+++ b/usr.sbin/nfsd/nfsd.c
@@ -849,13 +849,13 @@
 }
 
 void
-nonfs(__unused int signo)
+nonfs(__attribute__((unused)) int signo)
 {
 	syslog(LOG_ERR, "missing system call: NFS not available");
 }
 
 void
-reapchild(__unused int signo)
+reapchild(__attribute__((unused)) int signo)
 {
 	pid_t pid;
 	int i;
@@ -890,7 +890,7 @@
  * Cleanup master after SIGUSR1.
  */
 void
-cleanup(__unused int signo)
+cleanup(__attribute__((unused)) int signo)
 {
 	nfsd_exit(0);
 }
@@ -899,7 +899,7 @@
  * Cleanup child after SIGUSR1.
  */
 void
-child_cleanup(__unused int signo)
+child_cleanup(__attribute__((unused)) int signo)
 {
 	exit(0);
 }
--- a/usr.sbin/nfsuserd/nfsuserd.c
+++ b/usr.sbin/nfsuserd/nfsuserd.c
@@ -618,7 +618,7 @@
  * cleanup_term() called via SIGUSR1.
  */
 static void
-cleanup_term(int signo __unused)
+cleanup_term(int signo __attribute__((unused)))
 {
 	int i, cnt;
 
--- a/usr.sbin/ppp/acf.c
+++ b/usr.sbin/ppp/acf.c
@@ -56,8 +56,8 @@
 }
 
 static struct mbuf *
-acf_LayerPush(struct bundle *b __unused, struct link *l, struct mbuf *bp,
-              int pri __unused, u_short *proto)
+acf_LayerPush(struct bundle *b __attribute__((unused)), struct link *l, struct mbuf *bp,
+              int pri __attribute__((unused)), u_short *proto)
 {
   const u_char cp[2] = { HDLC_ADDR, HDLC_UI };
 
@@ -70,8 +70,8 @@
 }
 
 static struct mbuf *
-acf_LayerPull(struct bundle *b __unused, struct link *l, struct mbuf *bp,
-	      u_short *proto __unused)
+acf_LayerPull(struct bundle *b __attribute__((unused)), struct link *l, struct mbuf *bp,
+	      u_short *proto __attribute__((unused)))
 {
   struct physical *p = link2physical(l);
   u_char cp[2];
--- a/usr.sbin/ppp/async.c
+++ b/usr.sbin/ppp/async.c
@@ -100,8 +100,8 @@
 }
 
 static struct mbuf *
-async_LayerPush(struct bundle *b __unused, struct link *l, struct mbuf *bp,
-                int pri __unused, u_short *proto)
+async_LayerPush(struct bundle *b __attribute__((unused)), struct link *l, struct mbuf *bp,
+                int pri __attribute__((unused)), u_short *proto)
 {
   struct physical *p = link2physical(l);
   u_char *cp, *sp, *ep;
@@ -187,8 +187,8 @@
 }
 
 static struct mbuf *
-async_LayerPull(struct bundle *b __unused, struct link *l, struct mbuf *bp,
-                u_short *proto __unused)
+async_LayerPull(struct bundle *b __attribute__((unused)), struct link *l, struct mbuf *bp,
+                u_short *proto __attribute__((unused)))
 {
   struct mbuf *nbp, **last;
   struct physical *p = link2physical(l);
--- a/usr.sbin/ppp/atm.c
+++ b/usr.sbin/ppp/atm.c
@@ -106,7 +106,7 @@
 
 static void
 atm_device2iov(struct device *d, struct iovec *iov, int *niov,
-               int maxiov __unused, int *auxfd __unused, int *nauxfd __unused)
+               int maxiov __attribute__((unused)), int *auxfd __attribute__((unused)), int *nauxfd __attribute__((unused)))
 {
   int sz = physical_MaxDeviceSize();
 
@@ -142,7 +142,7 @@
 
 struct device *
 atm_iov2device(int type, struct physical *p, struct iovec *iov, int *niov,
-               int maxiov __unused, int *auxfd __unused, int *nauxfd __unused)
+               int maxiov __attribute__((unused)), int *auxfd __attribute__((unused)), int *nauxfd __attribute__((unused)))
 {
   if (type == ATM_DEVICE) {
     struct atmdevice *dev = (struct atmdevice *)iov[(*niov)++].iov_base;
--- a/usr.sbin/ppp/bundle.c
+++ b/usr.sbin/ppp/bundle.c
@@ -164,7 +164,7 @@
 }
 
 static void
-bundle_LayerStart(void *v __unused, struct fsm *fp __unused)
+bundle_LayerStart(void *v __attribute__((unused)), struct fsm *fp __attribute__((unused)))
 {
   /* The given FSM is about to start up ! */
 }
@@ -529,7 +529,7 @@
 }
 
 static void
-bundle_DescriptorRead(struct fdescriptor *d __unused, struct bundle *bundle,
+bundle_DescriptorRead(struct fdescriptor *d __attribute__((unused)), struct bundle *bundle,
                       const fd_set *fdset)
 {
   struct datalink *dl;
@@ -641,7 +641,7 @@
 }
 
 static int
-bundle_DescriptorWrite(struct fdescriptor *d __unused, struct bundle *bundle,
+bundle_DescriptorWrite(struct fdescriptor *d __attribute__((unused)), struct bundle *bundle,
                        const fd_set *fdset)
 {
   struct datalink *dl;
--- a/usr.sbin/ppp/cbcp.c
+++ b/usr.sbin/ppp/cbcp.c
@@ -619,7 +619,7 @@
 }
 
 extern struct mbuf *
-cbcp_Input(struct bundle *bundle __unused, struct link *l, struct mbuf *bp)
+cbcp_Input(struct bundle *bundle __attribute__((unused)), struct link *l, struct mbuf *bp)
 {
   struct physical *p = link2physical(l);
   struct cbcp_header *head;
--- a/usr.sbin/ppp/ccp.c
+++ b/usr.sbin/ppp/ccp.c
@@ -407,7 +407,7 @@
 }
 
 static void
-CcpSentTerminateReq(struct fsm *fp __unused)
+CcpSentTerminateReq(struct fsm *fp __attribute__((unused)))
 {
   /* Term REQ just sent by FSM */
 }
@@ -715,7 +715,7 @@
 }
 
 static struct mbuf *
-ccp_LayerPush(struct bundle *b __unused, struct link *l, struct mbuf *bp,
+ccp_LayerPush(struct bundle *b __attribute__((unused)), struct link *l, struct mbuf *bp,
               int pri, u_short *proto)
 {
   if (PROTO_COMPRESSIBLE(*proto)) {
@@ -745,7 +745,7 @@
 }
 
 static struct mbuf *
-ccp_LayerPull(struct bundle *b __unused, struct link *l, struct mbuf *bp,
+ccp_LayerPull(struct bundle *b __attribute__((unused)), struct link *l, struct mbuf *bp,
 	      u_short *proto)
 {
   /*
@@ -812,13 +812,13 @@
 }
 
 int
-ccp_DefaultUsable(struct fsm *fp __unused)
+ccp_DefaultUsable(struct fsm *fp __attribute__((unused)))
 {
   return 1;
 }
 
 int
-ccp_DefaultRequired(struct fsm *fp __unused)
+ccp_DefaultRequired(struct fsm *fp __attribute__((unused)))
 {
   return 0;
 }
--- a/usr.sbin/ppp/chap.c
+++ b/usr.sbin/ppp/chap.c
@@ -393,8 +393,8 @@
 }
 
 static int
-chap_UpdateSet(struct fdescriptor *d, fd_set *r, fd_set *w __unused,
-	       fd_set *e __unused, int *n)
+chap_UpdateSet(struct fdescriptor *d, fd_set *r, fd_set *w __attribute__((unused)),
+	       fd_set *e __attribute__((unused)), int *n)
 {
   struct chap *chap = descriptor2chap(d);
 
@@ -418,8 +418,8 @@
 }
 
 static void
-chap_Read(struct fdescriptor *d, struct bundle *bundle __unused,
-	  const fd_set *fdset __unused)
+chap_Read(struct fdescriptor *d, struct bundle *bundle __attribute__((unused)),
+	  const fd_set *fdset __attribute__((unused)))
 {
   struct chap *chap = descriptor2chap(d);
   int got;
@@ -475,8 +475,8 @@
 }
 
 static int
-chap_Write(struct fdescriptor *d __unused, struct bundle *bundle __unused,
-	   const fd_set *fdset __unused)
+chap_Write(struct fdescriptor *d __attribute__((unused)), struct bundle *bundle __attribute__((unused)),
+	   const fd_set *fdset __attribute__((unused)))
 {
   /* We never want to write here ! */
   log_Printf(LogALERT, "chap_Write: Internal error: Bad call !\n");
--- a/usr.sbin/ppp/chat.c
+++ b/usr.sbin/ppp/chat.c
@@ -371,8 +371,8 @@
 }
 
 static void
-chat_Read(struct fdescriptor *d, struct bundle *bundle __unused,
-	  const fd_set *fdset __unused)
+chat_Read(struct fdescriptor *d, struct bundle *bundle __attribute__((unused)),
+	  const fd_set *fdset __attribute__((unused)))
 {
   struct chat *c = descriptor2chat(d);
 
@@ -486,8 +486,8 @@
 }
 
 static int
-chat_Write(struct fdescriptor *d, struct bundle *bundle __unused,
-	   const fd_set *fdset __unused)
+chat_Write(struct fdescriptor *d, struct bundle *bundle __attribute__((unused)),
+	   const fd_set *fdset __attribute__((unused)))
 {
   struct chat *c = descriptor2chat(d);
   int result = 0;
--- a/usr.sbin/ppp/command.c
+++ b/usr.sbin/ppp/command.c
@@ -383,7 +383,7 @@
 }
 
 static int
-SaveCommand(struct cmdargs const *arg __unused)
+SaveCommand(struct cmdargs const *arg __attribute__((unused)))
 {
   log_Printf(LogWARN, "save command is not yet implemented.\n");
   return 1;
--- a/usr.sbin/ppp/deflate.c
+++ b/usr.sbin/ppp/deflate.c
@@ -66,8 +66,8 @@
 }
 
 static struct mbuf *
-DeflateOutput(void *v, struct ccp *ccp, struct link *l __unused,
-	      int pri __unused, u_short *proto, struct mbuf *mp)
+DeflateOutput(void *v, struct ccp *ccp, struct link *l __attribute__((unused)),
+	      int pri __attribute__((unused)), u_short *proto, struct mbuf *mp)
 {
   struct deflate_state *state = (struct deflate_state *)v;
   u_char *wp, *rp;
@@ -440,7 +440,7 @@
 }
 
 static void
-DeflateInitOptsOutput(struct bundle *bundle __unused, struct fsm_opt *o,
+DeflateInitOptsOutput(struct bundle *bundle __attribute__((unused)), struct fsm_opt *o,
                       const struct ccp_config *cfg)
 {
   o->hdr.len = 4;
@@ -449,8 +449,8 @@
 }
 
 static int
-DeflateSetOptsOutput(struct bundle *bundle __unused, struct fsm_opt *o,
-                     const struct ccp_config *cfg __unused)
+DeflateSetOptsOutput(struct bundle *bundle __attribute__((unused)), struct fsm_opt *o,
+                     const struct ccp_config *cfg __attribute__((unused)))
 {
   if (o->hdr.len != 4 || (o->data[0] & 15) != 8 || o->data[1] != '\0')
     return MODE_REJ;
@@ -464,7 +464,7 @@
 }
 
 static int
-DeflateSetOptsInput(struct bundle *bundle __unused, struct fsm_opt *o,
+DeflateSetOptsInput(struct bundle *bundle __attribute__((unused)), struct fsm_opt *o,
                     const struct ccp_config *cfg)
 {
   int want;
@@ -486,7 +486,7 @@
 }
 
 static void *
-DeflateInitInput(struct bundle *bundle __unused, struct fsm_opt *o)
+DeflateInitInput(struct bundle *bundle __attribute__((unused)), struct fsm_opt *o)
 {
   struct deflate_state *state;
 
@@ -509,7 +509,7 @@
 }
 
 static void *
-DeflateInitOutput(struct bundle *bundle __unused, struct fsm_opt *o)
+DeflateInitOutput(struct bundle *bundle __attribute__((unused)), struct fsm_opt *o)
 {
   struct deflate_state *state;
 
--- a/usr.sbin/ppp/defs.c
+++ b/usr.sbin/ppp/defs.c
@@ -443,7 +443,7 @@
 }
 #else
 int
-loadmodules(int how __unused, const char *module __unused, ...)
+loadmodules(int how __attribute__((unused)), const char *module __attribute__((unused)), ...)
 {
   return 0;
 }
--- a/usr.sbin/ppp/ether.c
+++ b/usr.sbin/ppp/ether.c
@@ -191,7 +191,7 @@
 
 static void
 ether_device2iov(struct device *d, struct iovec *iov, int *niov,
-                 int maxiov __unused, int *auxfd, int *nauxfd)
+                 int maxiov __attribute__((unused)), int *auxfd, int *nauxfd)
 {
   struct etherdevice *dev;
   int sz = physical_MaxDeviceSize();
@@ -344,7 +344,7 @@
 
 struct device *
 ether_iov2device(int type, struct physical *p, struct iovec *iov, int *niov,
-                 int maxiov __unused, int *auxfd, int *nauxfd)
+                 int maxiov __attribute__((unused)), int *auxfd, int *nauxfd)
 {
   if (type == ETHER_DEVICE) {
     struct etherdevice *dev = (struct etherdevice *)iov[(*niov)++].iov_base;
--- a/usr.sbin/ppp/exec.c
+++ b/usr.sbin/ppp/exec.c
@@ -94,7 +94,7 @@
 
 static void
 exec_device2iov(struct device *d, struct iovec *iov, int *niov,
-               int maxiov __unused, int *auxfd, int *nauxfd)
+               int maxiov __attribute__((unused)), int *auxfd, int *nauxfd)
 {
   struct execdevice *dev;
   int sz = physical_MaxDeviceSize();
@@ -172,7 +172,7 @@
 
 struct device *
 exec_iov2device(int type, struct physical *p, struct iovec *iov,
-                int *niov, int maxiov __unused, int *auxfd, int *nauxfd)
+                int *niov, int maxiov __attribute__((unused)), int *auxfd, int *nauxfd)
 {
   if (type == EXEC_DEVICE) {
     struct execdevice *dev = (struct execdevice *)iov[(*niov)++].iov_base;
--- a/usr.sbin/ppp/fsm.c
+++ b/usr.sbin/ppp/fsm.c
@@ -771,7 +771,7 @@
 }
 
 static void
-FsmRecvTermAck(struct fsm *fp, struct fsmheader *lhp __unused, struct mbuf *bp)
+FsmRecvTermAck(struct fsm *fp, struct fsmheader *lhp __attribute__((unused)), struct mbuf *bp)
 /* RTA */
 {
   switch (fp->state) {
@@ -867,14 +867,14 @@
 }
 
 static void
-FsmRecvCodeRej(struct fsm *fp __unused, struct fsmheader *lhp __unused,
+FsmRecvCodeRej(struct fsm *fp __attribute__((unused)), struct fsmheader *lhp __attribute__((unused)),
 	       struct mbuf *bp)
 {
   m_freem(bp);
 }
 
 static void
-FsmRecvProtoRej(struct fsm *fp, struct fsmheader *lhp __unused, struct mbuf *bp)
+FsmRecvProtoRej(struct fsm *fp, struct fsmheader *lhp __attribute__((unused)), struct mbuf *bp)
 {
   struct physical *p = link2physical(fp->link);
   u_short proto;
@@ -974,7 +974,7 @@
 }
 
 static void
-FsmRecvEchoRep(struct fsm *fp, struct fsmheader *lhp __unused, struct mbuf *bp)
+FsmRecvEchoRep(struct fsm *fp, struct fsmheader *lhp __attribute__((unused)), struct mbuf *bp)
 {
   if (fsm2lcp(fp))
     bp = lqr_RecvEcho(fp, bp);
@@ -983,7 +983,7 @@
 }
 
 static void
-FsmRecvDiscReq(struct fsm *fp __unused, struct fsmheader *lhp __unused,
+FsmRecvDiscReq(struct fsm *fp __attribute__((unused)), struct fsmheader *lhp __attribute__((unused)),
 	       struct mbuf *bp)
 {
   m_freem(bp);
@@ -1012,7 +1012,7 @@
 }
 
 static void
-FsmRecvTimeRemain(struct fsm *fp __unused, struct fsmheader *lhp __unused,
+FsmRecvTimeRemain(struct fsm *fp __attribute__((unused)), struct fsmheader *lhp __attribute__((unused)),
 		  struct mbuf *bp)
 {
   m_freem(bp);
@@ -1103,7 +1103,7 @@
 }
 
 void
-fsm_NullRecvResetAck(struct fsm *fp, u_char id __unused)
+fsm_NullRecvResetAck(struct fsm *fp, u_char id __attribute__((unused)))
 {
   log_Printf(fp->LogLevel, "%s: Oops - received unexpected reset ack\n",
             fp->link->name);
--- a/usr.sbin/ppp/hdlc.c
+++ b/usr.sbin/ppp/hdlc.c
@@ -138,8 +138,8 @@
 }
 
 static struct mbuf *
-hdlc_LayerPush(struct bundle *bundle __unused, struct link *l __unused,
-	       struct mbuf *bp, int pri __unused, u_short *proto __unused)
+hdlc_LayerPush(struct bundle *bundle __attribute__((unused)), struct link *l __attribute__((unused)),
+	       struct mbuf *bp, int pri __attribute__((unused)), u_short *proto __attribute__((unused)))
 {
   struct mbuf *last;
   u_char *cp;
@@ -298,8 +298,8 @@
 }
 
 static struct mbuf *
-hdlc_LayerPull(struct bundle *b __unused, struct link *l, struct mbuf *bp,
-               u_short *proto __unused)
+hdlc_LayerPull(struct bundle *b __attribute__((unused)), struct link *l, struct mbuf *bp,
+               u_short *proto __attribute__((unused)))
 {
   struct physical *p = link2physical(l);
   u_short fcs;
--- a/usr.sbin/ppp/ip.c
+++ b/usr.sbin/ppp/ip.c
@@ -208,7 +208,7 @@
 int
 FilterCheck(const unsigned char *packet,
 #ifdef NOINET6
-	    u_int32_t family __unused,
+	    u_int32_t family __attribute__((unused)),
 #else
 	    u_int32_t family,
 #endif
--- a/usr.sbin/ppp/ipcp.c
+++ b/usr.sbin/ppp/ipcp.c
@@ -800,7 +800,7 @@
 }
 
 static void
-IpcpSentTerminateReq(struct fsm *fp __unused)
+IpcpSentTerminateReq(struct fsm *fp __attribute__((unused)))
 {
   /* Term REQ just sent by FSM */
 }
--- a/usr.sbin/ppp/ipv6cp.c
+++ b/usr.sbin/ppp/ipv6cp.c
@@ -376,14 +376,14 @@
 }
 
 void
-ipv6cp_IfaceAddrAdded(struct ipv6cp *ipv6cp __unused,
-		      const struct iface_addr *addr __unused)
+ipv6cp_IfaceAddrAdded(struct ipv6cp *ipv6cp __attribute__((unused)),
+		      const struct iface_addr *addr __attribute__((unused)))
 {
 }
 
 void
-ipv6cp_IfaceAddrDeleted(struct ipv6cp *ipv6cp __unused,
-			const struct iface_addr *addr __unused)
+ipv6cp_IfaceAddrDeleted(struct ipv6cp *ipv6cp __attribute__((unused)),
+			const struct iface_addr *addr __attribute__((unused)))
 {
 }
 
@@ -633,7 +633,7 @@
 }
 
 static void
-ipv6cp_SentTerminateReq(struct fsm *fp __unused)
+ipv6cp_SentTerminateReq(struct fsm *fp __attribute__((unused)))
 {
   /* Term REQ just sent by FSM */
 }
--- a/usr.sbin/ppp/lcp.c
+++ b/usr.sbin/ppp/lcp.c
@@ -532,7 +532,7 @@
 }
 
 static void
-LcpSentTerminateReq(struct fsm *fp __unused)
+LcpSentTerminateReq(struct fsm *fp __attribute__((unused)))
 {
   /* Term REQ just sent by FSM */
 }
@@ -1296,7 +1296,7 @@
 }
 
 extern struct mbuf *
-lcp_Input(struct bundle *bundle __unused, struct link *l, struct mbuf *bp)
+lcp_Input(struct bundle *bundle __attribute__((unused)), struct link *l, struct mbuf *bp)
 {
   /* Got PROTO_LCP from link */
   m_settype(bp, MB_LCPIN);
--- a/usr.sbin/ppp/lqr.c
+++ b/usr.sbin/ppp/lqr.c
@@ -198,7 +198,7 @@
 }
 
 struct mbuf *
-lqr_Input(struct bundle *bundle __unused, struct link *l, struct mbuf *bp)
+lqr_Input(struct bundle *bundle __attribute__((unused)), struct link *l, struct mbuf *bp)
 {
   struct physical *p = link2physical(l);
   struct lcp *lcp = p->hdlc.lqm.owner;
@@ -413,8 +413,8 @@
 }
 
 static struct mbuf *
-lqr_LayerPush(struct bundle *b __unused, struct link *l, struct mbuf *bp,
-              int pri __unused, u_short *proto)
+lqr_LayerPush(struct bundle *b __attribute__((unused)), struct link *l, struct mbuf *bp,
+              int pri __attribute__((unused)), u_short *proto)
 {
   struct physical *p = link2physical(l);
   int len, layer, extra_async_bytes;
@@ -510,7 +510,7 @@
 }
 
 static struct mbuf *
-lqr_LayerPull(struct bundle *b __unused, struct link *l __unused,
+lqr_LayerPull(struct bundle *b __attribute__((unused)), struct link *l __attribute__((unused)),
 	      struct mbuf *bp, u_short *proto)
 {
   /*
--- a/usr.sbin/ppp/main.c
+++ b/usr.sbin/ppp/main.c
@@ -158,14 +158,14 @@
 }
 
 static void
-TerminalCont(int signo __unused)
+TerminalCont(int signo __attribute__((unused)))
 {
   signal(SIGCONT, SIG_DFL);
   prompt_Continue(SignalPrompt);
 }
 
 static void
-TerminalStop(int signo __unused)
+TerminalStop(int signo __attribute__((unused)))
 {
   prompt_Suspend(SignalPrompt);
   signal(SIGCONT, TerminalCont);
@@ -173,7 +173,7 @@
 }
 
 static void
-BringDownServer(int signo __unused)
+BringDownServer(int signo __attribute__((unused)))
 {
   /* Drops all child prompts too ! */
   if (server_Close(SignalBundle))
@@ -181,7 +181,7 @@
 }
 
 static void
-RestartServer(int signo __unused)
+RestartServer(int signo __attribute__((unused)))
 {
   /* Drops all child prompts and re-opens the socket */
   server_Reopen(SignalBundle);
--- a/usr.sbin/ppp/mp.c
+++ b/usr.sbin/ppp/mp.c
@@ -161,13 +161,13 @@
 }
 
 static void
-mp_LayerStart(void *v __unused, struct fsm *fp __unused)
+mp_LayerStart(void *v __attribute__((unused)), struct fsm *fp __attribute__((unused)))
 {
   /* The given FSM (ccp) is about to start up ! */
 }
 
 static void
-mp_LayerUp(void *v __unused, struct fsm *fp)
+mp_LayerUp(void *v __attribute__((unused)), struct fsm *fp)
 {
   /* The given fsm (ccp) is now up */
 
@@ -175,13 +175,13 @@
 }
 
 static void
-mp_LayerDown(void *v __unused, struct fsm *fp __unused)
+mp_LayerDown(void *v __attribute__((unused)), struct fsm *fp __attribute__((unused)))
 {
   /* The given FSM (ccp) has been told to come down */
 }
 
 static void
-mp_LayerFinish(void *v __unused, struct fsm *fp)
+mp_LayerFinish(void *v __attribute__((unused)), struct fsm *fp)
 {
   /* The given fsm (ccp) is now down */
   if (fp->state == ST_CLOSED && fp->open_mode == OPEN_PASSIVE)
@@ -1076,7 +1076,7 @@
 
 static void
 mpserver_Read(struct fdescriptor *d, struct bundle *bundle,
-	      const fd_set *fdset __unused)
+	      const fd_set *fdset __attribute__((unused)))
 {
   struct mpserver *s = descriptor2mpserver(d);
 
@@ -1084,8 +1084,8 @@
 }
 
 static int
-mpserver_Write(struct fdescriptor *d __unused, struct bundle *bundle __unused,
-               const fd_set *fdset __unused)
+mpserver_Write(struct fdescriptor *d __attribute__((unused)), struct bundle *bundle __attribute__((unused)),
+               const fd_set *fdset __attribute__((unused)))
 {
   /* We never want to write here ! */
   log_Printf(LogALERT, "mpserver_Write: Internal error: Bad call !\n");
--- a/usr.sbin/ppp/mppe.c
+++ b/usr.sbin/ppp/mppe.c
@@ -155,7 +155,7 @@
 }
 
 static struct mbuf *
-MPPEOutput(void *v, struct ccp *ccp, struct link *l __unused, int pri __unused,
+MPPEOutput(void *v, struct ccp *ccp, struct link *l __attribute__((unused)), int pri __attribute__((unused)),
 	   u_short *proto, struct mbuf *mp)
 {
   struct mppe_state *mop = (struct mppe_state *)v;
@@ -232,7 +232,7 @@
 }
 
 static void
-MPPEResetInput(void *v __unused)
+MPPEResetInput(void *v __attribute__((unused)))
 {
   log_Printf(LogCCP, "MPPE: Unexpected input channel ack\n");
 }
@@ -372,8 +372,8 @@
 }
 
 static void
-MPPEDictSetup(void *v __unused, struct ccp *ccp __unused,
-	      u_short proto __unused, struct mbuf *mp __unused)
+MPPEDictSetup(void *v __attribute__((unused)), struct ccp *ccp __attribute__((unused)),
+	      u_short proto __attribute__((unused)), struct mbuf *mp __attribute__((unused)))
 {
   /* Nothing to see here */
 }
@@ -470,7 +470,7 @@
 }
 
 static u_int32_t
-MPPE_ConfigVal(struct bundle *bundle __unused, const struct ccp_config *cfg)
+MPPE_ConfigVal(struct bundle *bundle __attribute__((unused)), const struct ccp_config *cfg)
 {
   u_int32_t val;
 
@@ -676,7 +676,7 @@
 }
 
 static void *
-MPPEInitInput(struct bundle *bundle __unused, struct fsm_opt *o)
+MPPEInitInput(struct bundle *bundle __attribute__((unused)), struct fsm_opt *o)
 {
   struct mppe_state *mip;
 
@@ -732,7 +732,7 @@
 }
 
 static void *
-MPPEInitOutput(struct bundle *bundle __unused, struct fsm_opt *o)
+MPPEInitOutput(struct bundle *bundle __attribute__((unused)), struct fsm_opt *o)
 {
   struct mppe_state *mop;
 
--- a/usr.sbin/ppp/nat_cmd.c
+++ b/usr.sbin/ppp/nat_cmd.c
@@ -496,8 +496,8 @@
 }
 
 static struct mbuf *
-nat_LayerPush(struct bundle *bundle, struct link *l __unused, struct mbuf *bp,
-                int pri __unused, u_short *proto)
+nat_LayerPush(struct bundle *bundle, struct link *l __attribute__((unused)), struct mbuf *bp,
+                int pri __attribute__((unused)), u_short *proto)
 {
   if (!bundle->NatEnabled || *proto != PROTO_IP)
     return bp;
@@ -513,7 +513,7 @@
 }
 
 static struct mbuf *
-nat_LayerPull(struct bundle *bundle, struct link *l __unused, struct mbuf *bp,
+nat_LayerPull(struct bundle *bundle, struct link *l __attribute__((unused)), struct mbuf *bp,
                 u_short *proto)
 {
   static int gfrags;
--- a/usr.sbin/ppp/ncp.c
+++ b/usr.sbin/ppp/ncp.c
@@ -146,7 +146,7 @@
 int
 ncp_fsmStart(struct ncp *ncp,
 #ifdef NOINET6
-	     struct bundle *bundle __unused
+	     struct bundle *bundle __attribute__((unused))
 #else
 	     struct bundle *bundle
 #endif
@@ -337,9 +337,9 @@
  * of what is to be pushed next, coming either from mp->out or ncp->afq.
  */
 int
-ncp_PushPacket(struct ncp *ncp __unused,
+ncp_PushPacket(struct ncp *ncp __attribute__((unused)),
 #ifdef NOINET6
-	       int *af __unused,
+	       int *af __attribute__((unused)),
 #else
 	       int *af,
 #endif
--- a/usr.sbin/ppp/netgraph.c
+++ b/usr.sbin/ppp/netgraph.c
@@ -279,7 +279,7 @@
 
 static void
 ng_device2iov(struct device *d, struct iovec *iov, int *niov,
-              int maxiov __unused, int *auxfd, int *nauxfd)
+              int maxiov __attribute__((unused)), int *auxfd, int *nauxfd)
 {
   struct ngdevice *dev;
   int sz = physical_MaxDeviceSize();
@@ -320,7 +320,7 @@
 
 struct device *
 ng_iov2device(int type, struct physical *p, struct iovec *iov, int *niov,
-              int maxiov __unused, int *auxfd, int *nauxfd)
+              int maxiov __attribute__((unused)), int *auxfd, int *nauxfd)
 {
   if (type == NG_DEVICE) {
     struct ngdevice *dev = (struct ngdevice *)iov[(*niov)++].iov_base;
--- a/usr.sbin/ppp/physical.c
+++ b/usr.sbin/ppp/physical.c
@@ -397,8 +397,8 @@
 }
 
 static int
-physical_DescriptorWrite(struct fdescriptor *d, struct bundle *bundle __unused,
-                         const fd_set *fdset __unused)
+physical_DescriptorWrite(struct fdescriptor *d, struct bundle *bundle __attribute__((unused)),
+                         const fd_set *fdset __attribute__((unused)))
 {
   struct physical *p = descriptor2physical(d);
   int nw, result = 0;
@@ -530,7 +530,7 @@
 
 void
 physical_DescriptorRead(struct fdescriptor *d, struct bundle *bundle,
-                     const fd_set *fdset __unused)
+                     const fd_set *fdset __attribute__((unused)))
 {
   struct physical *p = descriptor2physical(d);
   u_char *rbuff;
--- a/usr.sbin/ppp/pred.c
+++ b/usr.sbin/ppp/pred.c
@@ -151,7 +151,7 @@
 }
 
 static void *
-Pred1InitInput(struct bundle *bundle __unused, struct fsm_opt *o __unused)
+Pred1InitInput(struct bundle *bundle __attribute__((unused)), struct fsm_opt *o __attribute__((unused)))
 {
   struct pred1_state *state;
   state = (struct pred1_state *)malloc(sizeof(struct pred1_state));
@@ -161,7 +161,7 @@
 }
 
 static void *
-Pred1InitOutput(struct bundle *bundle __unused, struct fsm_opt *o __unused)
+Pred1InitOutput(struct bundle *bundle __attribute__((unused)), struct fsm_opt *o __attribute__((unused)))
 {
   struct pred1_state *state;
   state = (struct pred1_state *)malloc(sizeof(struct pred1_state));
@@ -171,8 +171,8 @@
 }
 
 static struct mbuf *
-Pred1Output(void *v, struct ccp *ccp, struct link *l __unused,
-	    int pri __unused, u_short *proto, struct mbuf *bp)
+Pred1Output(void *v, struct ccp *ccp, struct link *l __attribute__((unused)),
+	    int pri __attribute__((unused)), u_short *proto, struct mbuf *bp)
 {
   struct pred1_state *state = (struct pred1_state *)v;
   struct mbuf *mwp;
@@ -289,28 +289,28 @@
 }
 
 static void
-Pred1DictSetup(void *v __unused, struct ccp *ccp __unused,
-	       u_short proto __unused, struct mbuf *bp __unused)
+Pred1DictSetup(void *v __attribute__((unused)), struct ccp *ccp __attribute__((unused)),
+	       u_short proto __attribute__((unused)), struct mbuf *bp __attribute__((unused)))
 {
   /* Nothing to see here */
 }
 
 static const char *
-Pred1DispOpts(struct fsm_opt *o __unused)
+Pred1DispOpts(struct fsm_opt *o __attribute__((unused)))
 {
   return NULL;
 }
 
 static void
-Pred1InitOptsOutput(struct bundle *bundle __unused, struct fsm_opt *o,
-                    const struct ccp_config *cfg __unused)
+Pred1InitOptsOutput(struct bundle *bundle __attribute__((unused)), struct fsm_opt *o,
+                    const struct ccp_config *cfg __attribute__((unused)))
 {
   o->hdr.len = 2;
 }
 
 static int
-Pred1SetOpts(struct bundle *bundle __unused, struct fsm_opt *o,
-             const struct ccp_config *cfg __unused)
+Pred1SetOpts(struct bundle *bundle __attribute__((unused)), struct fsm_opt *o,
+             const struct ccp_config *cfg __attribute__((unused)))
 {
   if (o->hdr.len != 2) {
     o->hdr.len = 2;
--- a/usr.sbin/ppp/prompt.c
+++ b/usr.sbin/ppp/prompt.c
@@ -129,7 +129,7 @@
 }
 
 static int
-prompt_UpdateSet(struct fdescriptor *d, fd_set *r, fd_set *w __unused,
+prompt_UpdateSet(struct fdescriptor *d, fd_set *r, fd_set *w __attribute__((unused)),
 		 fd_set *e, int *n)
 {
   struct prompt *p = descriptor2prompt(d);
@@ -181,7 +181,7 @@
 
 static void
 prompt_Read(struct fdescriptor *d, struct bundle *bundle,
-	    const fd_set *fdset __unused)
+	    const fd_set *fdset __attribute__((unused)))
 {
   struct prompt *p = descriptor2prompt(d);
   struct prompt *op;
@@ -302,8 +302,8 @@
 }
 
 static int
-prompt_Write(struct fdescriptor *d __unused, struct bundle *bundle __unused,
-	     const fd_set *fdset __unused)
+prompt_Write(struct fdescriptor *d __attribute__((unused)), struct bundle *bundle __attribute__((unused)),
+	     const fd_set *fdset __attribute__((unused)))
 {
   /* We never want to write here ! */
   log_Printf(LogALERT, "prompt_Write: Internal error: Bad call !\n");
--- a/usr.sbin/ppp/proto.c
+++ b/usr.sbin/ppp/proto.c
@@ -69,8 +69,8 @@
 }
 
 static struct mbuf *
-proto_LayerPush(struct bundle *b __unused, struct link *l, struct mbuf *bp,
-                int pri __unused, u_short *proto)
+proto_LayerPush(struct bundle *b __attribute__((unused)), struct link *l, struct mbuf *bp,
+                int pri __attribute__((unused)), u_short *proto)
 {
   log_Printf(LogDEBUG, "proto_LayerPush: Using 0x%04x\n", *proto);
   bp = proto_Prepend(bp, *proto, l->lcp.his_protocomp,
@@ -82,7 +82,7 @@
 }
 
 static struct mbuf *
-proto_LayerPull(struct bundle *b __unused, struct link *l, struct mbuf *bp,
+proto_LayerPull(struct bundle *b __attribute__((unused)), struct link *l, struct mbuf *bp,
                 u_short *proto)
 {
   u_char cp[2];
--- a/usr.sbin/ppp/radius.c
+++ b/usr.sbin/ppp/radius.c
@@ -682,8 +682,8 @@
  * Time to call rad_continue_send_request() - something to read.
  */
 static void
-radius_Read(struct fdescriptor *d, struct bundle *bundle __unused,
-	    const fd_set *fdset __unused)
+radius_Read(struct fdescriptor *d, struct bundle *bundle __attribute__((unused)),
+	    const fd_set *fdset __attribute__((unused)))
 {
   radius_Continue(descriptor2radius(d), 1);
 }
@@ -711,8 +711,8 @@
  * Behave as a struct fdescriptor (descriptor.h)
  */
 static int
-radius_UpdateSet(struct fdescriptor *d, fd_set *r, fd_set *w __unused,
-		 fd_set *e __unused, int *n)
+radius_UpdateSet(struct fdescriptor *d, fd_set *r, fd_set *w __attribute__((unused)),
+		 fd_set *e __attribute__((unused)), int *n)
 {
   struct radius *rad = descriptor2radius(d);
 
@@ -742,8 +742,8 @@
  * Behave as a struct fdescriptor (descriptor.h)
  */
 static int
-radius_Write(struct fdescriptor *d __unused, struct bundle *bundle __unused,
-	     const fd_set *fdset __unused)
+radius_Write(struct fdescriptor *d __attribute__((unused)), struct bundle *bundle __attribute__((unused)),
+	     const fd_set *fdset __attribute__((unused)))
 {
   /* We never want to write here ! */
   log_Printf(LogALERT, "radius_Write: Internal error: Bad call !\n");
--- a/usr.sbin/ppp/server.c
+++ b/usr.sbin/ppp/server.c
@@ -192,8 +192,8 @@
 }
 
 static int
-server_Write(struct fdescriptor *d __unused, struct bundle *bundle __unused,
-	     const fd_set *fdset __unused)
+server_Write(struct fdescriptor *d __attribute__((unused)), struct bundle *bundle __attribute__((unused)),
+	     const fd_set *fdset __attribute__((unused)))
 {
   /* We never want to write here ! */
   log_Printf(LogALERT, "server_Write: Internal error: Bad call !\n");
@@ -384,7 +384,7 @@
 }
 
 int
-server_Close(struct bundle *bundle __unused)
+server_Close(struct bundle *bundle __attribute__((unused)))
 {
   if (server.fd >= 0) {
     if (*server.cfg.sockname != '\0') {
--- a/usr.sbin/ppp/sync.c
+++ b/usr.sbin/ppp/sync.c
@@ -49,8 +49,8 @@
 #include "physical.h"
 
 static struct mbuf *
-sync_LayerPush(struct bundle *bundle __unused, struct link *l __unused,
-	       struct mbuf *bp, int pri __unused, u_short *proto __unused)
+sync_LayerPush(struct bundle *bundle __attribute__((unused)), struct link *l __attribute__((unused)),
+	       struct mbuf *bp, int pri __attribute__((unused)), u_short *proto __attribute__((unused)))
 {
   log_DumpBp(LogSYNC, "Write", bp);
   m_settype(bp, MB_SYNCOUT);
@@ -59,8 +59,8 @@
 }
 
 static struct mbuf *
-sync_LayerPull(struct bundle *b __unused, struct link *l, struct mbuf *bp,
-               u_short *proto __unused)
+sync_LayerPull(struct bundle *b __attribute__((unused)), struct link *l, struct mbuf *bp,
+               u_short *proto __attribute__((unused)))
 {
   struct physical *p = link2physical(l);
   int len;
--- a/usr.sbin/ppp/tcp.c
+++ b/usr.sbin/ppp/tcp.c
@@ -119,8 +119,8 @@
 
 struct device *
 tcp_iov2device(int type, struct physical *p, struct iovec *iov,
-               int *niov, int maxiov __unused, int *auxfd __unused,
-	       int *nauxfd __unused)
+               int *niov, int maxiov __attribute__((unused)), int *auxfd __attribute__((unused)),
+	       int *nauxfd __attribute__((unused)))
 {
   if (type == TCP_DEVICE) {
     free(iov[(*niov)++].iov_base);
--- a/usr.sbin/ppp/tcpmss.c
+++ b/usr.sbin/ppp/tcpmss.c
@@ -168,15 +168,15 @@
 }
 
 static struct mbuf *
-tcpmss_LayerPush(struct bundle *bundle, struct link *l __unused,
-		 struct mbuf *bp, int pri __unused, u_short *proto __unused)
+tcpmss_LayerPush(struct bundle *bundle, struct link *l __attribute__((unused)),
+		 struct mbuf *bp, int pri __attribute__((unused)), u_short *proto __attribute__((unused)))
 {
 	return tcpmss_Check(bundle, bp);
 }
 
 static struct mbuf *
-tcpmss_LayerPull(struct bundle *bundle, struct link *l __unused,
-		 struct mbuf *bp, u_short *proto __unused)
+tcpmss_LayerPull(struct bundle *bundle, struct link *l __attribute__((unused)),
+		 struct mbuf *bp, u_short *proto __attribute__((unused)))
 {
 	return tcpmss_Check(bundle, bp);
 }
--- a/usr.sbin/ppp/tty.c
+++ b/usr.sbin/ppp/tty.c
@@ -573,11 +573,11 @@
 
 static void
 tty_device2iov(struct device *d, struct iovec *iov, int *niov,
-               int maxiov __unused,
+               int maxiov __attribute__((unused)),
 #ifndef NONETGRAPH
                int *auxfd, int *nauxfd
 #else
-               int *auxfd __unused, int *nauxfd __unused
+               int *auxfd __attribute__((unused)), int *nauxfd __attribute__((unused))
 #endif
                )
 {
@@ -630,11 +630,11 @@
 
 struct device *
 tty_iov2device(int type, struct physical *p, struct iovec *iov, int *niov,
-               int maxiov __unused,
+               int maxiov __attribute__((unused)),
 #ifndef NONETGRAPH
                int *auxfd, int *nauxfd
 #else
-               int *auxfd __unused, int *nauxfd __unused
+               int *auxfd __attribute__((unused)), int *nauxfd __attribute__((unused))
 #endif
                )
 {
--- a/usr.sbin/ppp/udp.c
+++ b/usr.sbin/ppp/udp.c
@@ -138,7 +138,7 @@
 
 static void
 udp_device2iov(struct device *d, struct iovec *iov, int *niov,
-               int maxiov __unused, int *auxfd __unused, int *nauxfd __unused)
+               int maxiov __attribute__((unused)), int *auxfd __attribute__((unused)), int *nauxfd __attribute__((unused)))
 {
   int sz = physical_MaxDeviceSize();
 
@@ -174,7 +174,7 @@
 
 struct device *
 udp_iov2device(int type, struct physical *p, struct iovec *iov, int *niov,
-               int maxiov __unused, int *auxfd __unused, int *nauxfd __unused)
+               int maxiov __attribute__((unused)), int *auxfd __attribute__((unused)), int *nauxfd __attribute__((unused)))
 {
   if (type == UDP_DEVICE) {
     struct udpdevice *dev = (struct udpdevice *)iov[(*niov)++].iov_base;
--- a/usr.sbin/ppp/vjcomp.c
+++ b/usr.sbin/ppp/vjcomp.c
@@ -70,8 +70,8 @@
 #define MAX_VJHEADER 16		/* Maximum size of compressed header */
 
 static struct mbuf *
-vj_LayerPush(struct bundle *bundle, struct link *l __unused, struct mbuf *bp,
-	     int pri __unused, u_short *proto)
+vj_LayerPush(struct bundle *bundle, struct link *l __attribute__((unused)), struct mbuf *bp,
+	     int pri __attribute__((unused)), u_short *proto)
 {
   int type;
   struct ip *pip;
@@ -162,7 +162,7 @@
 }
 
 static struct mbuf *
-vj_LayerPull(struct bundle *bundle, struct link *l __unused, struct mbuf *bp,
+vj_LayerPull(struct bundle *bundle, struct link *l __attribute__((unused)), struct mbuf *bp,
              u_short *proto)
 {
   u_char type;
--- a/usr.sbin/rpc.lockd/lock_proc.c
+++ b/usr.sbin/rpc.lockd/lock_proc.c
@@ -770,7 +770,7 @@
  */
 void *
 nlm_cancel_res_1_svc(arg, rqstp)
-	nlm_res *arg __unused;
+	nlm_res *arg __attribute__((unused));
 	struct svc_req *rqstp;
 {
 	if (debug_level)
@@ -803,7 +803,7 @@
  */
 void *
 nlm_granted_res_1_svc(arg, rqstp)
-	nlm_res *arg __unused;
+	nlm_res *arg __attribute__((unused));
 	struct svc_req *rqstp;
 {
 	if (debug_level)
@@ -902,7 +902,7 @@
  */
 void *
 nlm_free_all_3_svc(arg, rqstp)
-	nlm_notify *arg __unused;
+	nlm_notify *arg __attribute__((unused));
 	struct svc_req *rqstp;
 {
 	static char dummy;
@@ -1260,7 +1260,7 @@
  */
 void *
 nlm4_cancel_res_4_svc(arg, rqstp)
-	nlm4_res *arg __unused;
+	nlm4_res *arg __attribute__((unused));
 	struct svc_req *rqstp;
 {
 	if (debug_level)
@@ -1275,7 +1275,7 @@
  */
 void *
 nlm4_unlock_res_4_svc(arg, rqstp)
-	nlm4_res *arg __unused;
+	nlm4_res *arg __attribute__((unused));
 	struct svc_req *rqstp;
 {
 	if (debug_level)
@@ -1290,7 +1290,7 @@
  */
 void *
 nlm4_granted_res_4_svc(arg, rqstp)
-	nlm4_res *arg __unused;
+	nlm4_res *arg __attribute__((unused));
 	struct svc_req *rqstp;
 {
 	if (debug_level)
@@ -1389,7 +1389,7 @@
  */
 void *
 nlm4_free_all_4_svc(arg, rqstp)
-	struct nlm4_notify *arg __unused;
+	struct nlm4_notify *arg __attribute__((unused));
 	struct svc_req *rqstp;
 {
 	static char dummy;
@@ -1407,7 +1407,7 @@
 void *
 nlm_sm_notify_0_svc(arg, rqstp)
 	struct nlm_sm_status *arg;
-	struct svc_req *rqstp __unused;
+	struct svc_req *rqstp __attribute__((unused));
 {
 	static char dummy;
 	notify(arg->mon_name, arg->state);
--- a/usr.sbin/rpc.lockd/lockd_lock.c
+++ b/usr.sbin/rpc.lockd/lockd_lock.c
@@ -1176,8 +1176,8 @@
 
 enum hwlock_status
 test_hwlock(fl, conflicting_fl)
-	const struct file_lock *fl __unused;
-	struct file_lock **conflicting_fl __unused;
+	const struct file_lock *fl __attribute__((unused));
+	struct file_lock **conflicting_fl __attribute__((unused));
 {
 
 	/*
@@ -1891,7 +1891,7 @@
  */
 
 struct nlm4_holder *
-testlock(struct nlm4_lock *lock, bool_t exclusive, int flags __unused)
+testlock(struct nlm4_lock *lock, bool_t exclusive, int flags __attribute__((unused)))
 {
 	struct file_lock test_fl, *conflicting_fl;
 
@@ -1991,7 +1991,7 @@
 
 /* unlock a filehandle */
 enum nlm_stats
-unlock(nlm4_lock *lock, const int flags __unused)
+unlock(nlm4_lock *lock, const int flags __attribute__((unused)))
 {
 	struct file_lock fl;
 	enum nlm_stats err;
@@ -2187,7 +2187,7 @@
 void
 send_granted(fl, opcode)
 	struct file_lock *fl;
-	int opcode __unused;
+	int opcode __attribute__((unused));
 {
 	CLIENT *cli;
 	static char dummy;
--- a/usr.sbin/rpc.statd/procs.c
+++ b/usr.sbin/rpc.statd/procs.c
@@ -257,7 +257,7 @@
 		earlier call to sm_mon_1
 */
 
-struct sm_stat *sm_unmon_1_svc(mon_id *arg, struct svc_req *req __unused)
+struct sm_stat *sm_unmon_1_svc(mon_id *arg, struct svc_req *req __attribute__((unused)))
 {
   static sm_stat res;
   HostInfo *hp;
@@ -295,7 +295,7 @@
 		host and program number.
 */
 
-struct sm_stat *sm_unmon_all_1_svc(my_id *arg, struct svc_req *req __unused)
+struct sm_stat *sm_unmon_all_1_svc(my_id *arg, struct svc_req *req __attribute__((unused)))
 {
   static sm_stat res;
   HostInfo *hp;
@@ -332,7 +332,7 @@
 		and inform all hosts on the monitor list.
 */
 
-void *sm_simu_crash_1_svc(void *v __unused, struct svc_req *req __unused)
+void *sm_simu_crash_1_svc(void *v __attribute__((unused)), struct svc_req *req __attribute__((unused)))
 {
   static char dummy;
   int work_to_do;
@@ -377,7 +377,7 @@
 		that modify the list.
 */
 
-void *sm_notify_1_svc(stat_chge *arg, struct svc_req *req __unused)
+void *sm_notify_1_svc(stat_chge *arg, struct svc_req *req __attribute__((unused)))
 {
   struct timeval timeout = { 20, 0 };	/* 20 secs timeout		*/
   CLIENT *cli;
--- a/usr.sbin/rpc.statd/statd.c
+++ b/usr.sbin/rpc.statd/statd.c
@@ -446,7 +446,7 @@
 		children to exit when they have done their work.
 */
 
-static void handle_sigchld(int sig __unused)
+static void handle_sigchld(int sig __attribute__((unused)))
 {
   int pid, status;
   pid = wait4(-1, &status, WNOHANG, (struct rusage*)0);
