--- a/usr.sbin/ppp/acf.c
+++ b/usr.sbin/ppp/acf.c
@@ -56,8 +56,8 @@
 }
 
 static struct mbuf *
-acf_LayerPush(struct bundle *b __unused, struct link *l, struct mbuf *bp,
-              int pri __unused, u_short *proto)
+acf_LayerPush(struct bundle *b __attribute__((unused)), struct link *l, struct mbuf *bp,
+              int pri __attribute__((unused)), u_short *proto)
 {
   const u_char cp[2] = { HDLC_ADDR, HDLC_UI };
 
@@ -70,8 +70,8 @@
 }
 
 static struct mbuf *
-acf_LayerPull(struct bundle *b __unused, struct link *l, struct mbuf *bp,
-	      u_short *proto __unused)
+acf_LayerPull(struct bundle *b __attribute__((unused)), struct link *l, struct mbuf *bp,
+	      u_short *proto __attribute__((unused)))
 {
   struct physical *p = link2physical(l);
   u_char cp[2];
--- a/usr.sbin/ppp/async.c
+++ b/usr.sbin/ppp/async.c
@@ -100,8 +100,8 @@
 }
 
 static struct mbuf *
-async_LayerPush(struct bundle *b __unused, struct link *l, struct mbuf *bp,
-                int pri __unused, u_short *proto)
+async_LayerPush(struct bundle *b __attribute__((unused)), struct link *l, struct mbuf *bp,
+                int pri __attribute__((unused)), u_short *proto)
 {
   struct physical *p = link2physical(l);
   u_char *cp, *sp, *ep;
@@ -187,8 +187,8 @@
 }
 
 static struct mbuf *
-async_LayerPull(struct bundle *b __unused, struct link *l, struct mbuf *bp,
-                u_short *proto __unused)
+async_LayerPull(struct bundle *b __attribute__((unused)), struct link *l, struct mbuf *bp,
+                u_short *proto __attribute__((unused)))
 {
   struct mbuf *nbp, **last;
   struct physical *p = link2physical(l);
--- a/usr.sbin/ppp/atm.c
+++ b/usr.sbin/ppp/atm.c
@@ -106,7 +106,7 @@
 
 static void
 atm_device2iov(struct device *d, struct iovec *iov, int *niov,
-               int maxiov __unused, int *auxfd __unused, int *nauxfd __unused)
+               int maxiov __attribute__((unused)), int *auxfd __attribute__((unused)), int *nauxfd __attribute__((unused)))
 {
   int sz = physical_MaxDeviceSize();
 
@@ -142,7 +142,7 @@
 
 struct device *
 atm_iov2device(int type, struct physical *p, struct iovec *iov, int *niov,
-               int maxiov __unused, int *auxfd __unused, int *nauxfd __unused)
+               int maxiov __attribute__((unused)), int *auxfd __attribute__((unused)), int *nauxfd __attribute__((unused)))
 {
   if (type == ATM_DEVICE) {
     struct atmdevice *dev = (struct atmdevice *)iov[(*niov)++].iov_base;
--- a/usr.sbin/ppp/bundle.c
+++ b/usr.sbin/ppp/bundle.c
@@ -164,7 +164,7 @@
 }
 
 static void
-bundle_LayerStart(void *v __unused, struct fsm *fp __unused)
+bundle_LayerStart(void *v __attribute__((unused)), struct fsm *fp __attribute__((unused)))
 {
   /* The given FSM is about to start up ! */
 }
@@ -529,7 +529,7 @@
 }
 
 static void
-bundle_DescriptorRead(struct fdescriptor *d __unused, struct bundle *bundle,
+bundle_DescriptorRead(struct fdescriptor *d __attribute__((unused)), struct bundle *bundle,
                       const fd_set *fdset)
 {
   struct datalink *dl;
@@ -641,7 +641,7 @@
 }
 
 static int
-bundle_DescriptorWrite(struct fdescriptor *d __unused, struct bundle *bundle,
+bundle_DescriptorWrite(struct fdescriptor *d __attribute__((unused)), struct bundle *bundle,
                        const fd_set *fdset)
 {
   struct datalink *dl;
--- a/usr.sbin/ppp/cbcp.c
+++ b/usr.sbin/ppp/cbcp.c
@@ -619,7 +619,7 @@
 }
 
 extern struct mbuf *
-cbcp_Input(struct bundle *bundle __unused, struct link *l, struct mbuf *bp)
+cbcp_Input(struct bundle *bundle __attribute__((unused)), struct link *l, struct mbuf *bp)
 {
   struct physical *p = link2physical(l);
   struct cbcp_header *head;
--- a/usr.sbin/ppp/ccp.c
+++ b/usr.sbin/ppp/ccp.c
@@ -407,7 +407,7 @@
 }
 
 static void
-CcpSentTerminateReq(struct fsm *fp __unused)
+CcpSentTerminateReq(struct fsm *fp __attribute__((unused)))
 {
   /* Term REQ just sent by FSM */
 }
@@ -715,7 +715,7 @@
 }
 
 static struct mbuf *
-ccp_LayerPush(struct bundle *b __unused, struct link *l, struct mbuf *bp,
+ccp_LayerPush(struct bundle *b __attribute__((unused)), struct link *l, struct mbuf *bp,
               int pri, u_short *proto)
 {
   if (PROTO_COMPRESSIBLE(*proto)) {
@@ -745,7 +745,7 @@
 }
 
 static struct mbuf *
-ccp_LayerPull(struct bundle *b __unused, struct link *l, struct mbuf *bp,
+ccp_LayerPull(struct bundle *b __attribute__((unused)), struct link *l, struct mbuf *bp,
 	      u_short *proto)
 {
   /*
@@ -812,13 +812,13 @@
 }
 
 int
-ccp_DefaultUsable(struct fsm *fp __unused)
+ccp_DefaultUsable(struct fsm *fp __attribute__((unused)))
 {
   return 1;
 }
 
 int
-ccp_DefaultRequired(struct fsm *fp __unused)
+ccp_DefaultRequired(struct fsm *fp __attribute__((unused)))
 {
   return 0;
 }
--- a/usr.sbin/ppp/chap.c
+++ b/usr.sbin/ppp/chap.c
@@ -393,8 +393,8 @@
 }
 
 static int
-chap_UpdateSet(struct fdescriptor *d, fd_set *r, fd_set *w __unused,
-	       fd_set *e __unused, int *n)
+chap_UpdateSet(struct fdescriptor *d, fd_set *r, fd_set *w __attribute__((unused)),
+	       fd_set *e __attribute__((unused)), int *n)
 {
   struct chap *chap = descriptor2chap(d);
 
@@ -418,8 +418,8 @@
 }
 
 static void
-chap_Read(struct fdescriptor *d, struct bundle *bundle __unused,
-	  const fd_set *fdset __unused)
+chap_Read(struct fdescriptor *d, struct bundle *bundle __attribute__((unused)),
+	  const fd_set *fdset __attribute__((unused)))
 {
   struct chap *chap = descriptor2chap(d);
   int got;
@@ -475,8 +475,8 @@
 }
 
 static int
-chap_Write(struct fdescriptor *d __unused, struct bundle *bundle __unused,
-	   const fd_set *fdset __unused)
+chap_Write(struct fdescriptor *d __attribute__((unused)), struct bundle *bundle __attribute__((unused)),
+	   const fd_set *fdset __attribute__((unused)))
 {
   /* We never want to write here ! */
   log_Printf(LogALERT, "chap_Write: Internal error: Bad call !\n");
--- a/usr.sbin/ppp/chat.c
+++ b/usr.sbin/ppp/chat.c
@@ -371,8 +371,8 @@
 }
 
 static void
-chat_Read(struct fdescriptor *d, struct bundle *bundle __unused,
-	  const fd_set *fdset __unused)
+chat_Read(struct fdescriptor *d, struct bundle *bundle __attribute__((unused)),
+	  const fd_set *fdset __attribute__((unused)))
 {
   struct chat *c = descriptor2chat(d);
 
@@ -486,8 +486,8 @@
 }
 
 static int
-chat_Write(struct fdescriptor *d, struct bundle *bundle __unused,
-	   const fd_set *fdset __unused)
+chat_Write(struct fdescriptor *d, struct bundle *bundle __attribute__((unused)),
+	   const fd_set *fdset __attribute__((unused)))
 {
   struct chat *c = descriptor2chat(d);
   int result = 0;
--- a/usr.sbin/ppp/command.c
+++ b/usr.sbin/ppp/command.c
@@ -383,7 +383,7 @@
 }
 
 static int
-SaveCommand(struct cmdargs const *arg __unused)
+SaveCommand(struct cmdargs const *arg __attribute__((unused)))
 {
   log_Printf(LogWARN, "save command is not yet implemented.\n");
   return 1;
--- a/usr.sbin/ppp/deflate.c
+++ b/usr.sbin/ppp/deflate.c
@@ -66,8 +66,8 @@
 }
 
 static struct mbuf *
-DeflateOutput(void *v, struct ccp *ccp, struct link *l __unused,
-	      int pri __unused, u_short *proto, struct mbuf *mp)
+DeflateOutput(void *v, struct ccp *ccp, struct link *l __attribute__((unused)),
+	      int pri __attribute__((unused)), u_short *proto, struct mbuf *mp)
 {
   struct deflate_state *state = (struct deflate_state *)v;
   u_char *wp, *rp;
@@ -440,7 +440,7 @@
 }
 
 static void
-DeflateInitOptsOutput(struct bundle *bundle __unused, struct fsm_opt *o,
+DeflateInitOptsOutput(struct bundle *bundle __attribute__((unused)), struct fsm_opt *o,
                       const struct ccp_config *cfg)
 {
   o->hdr.len = 4;
@@ -449,8 +449,8 @@
 }
 
 static int
-DeflateSetOptsOutput(struct bundle *bundle __unused, struct fsm_opt *o,
-                     const struct ccp_config *cfg __unused)
+DeflateSetOptsOutput(struct bundle *bundle __attribute__((unused)), struct fsm_opt *o,
+                     const struct ccp_config *cfg __attribute__((unused)))
 {
   if (o->hdr.len != 4 || (o->data[0] & 15) != 8 || o->data[1] != '\0')
     return MODE_REJ;
@@ -464,7 +464,7 @@
 }
 
 static int
-DeflateSetOptsInput(struct bundle *bundle __unused, struct fsm_opt *o,
+DeflateSetOptsInput(struct bundle *bundle __attribute__((unused)), struct fsm_opt *o,
                     const struct ccp_config *cfg)
 {
   int want;
@@ -486,7 +486,7 @@
 }
 
 static void *
-DeflateInitInput(struct bundle *bundle __unused, struct fsm_opt *o)
+DeflateInitInput(struct bundle *bundle __attribute__((unused)), struct fsm_opt *o)
 {
   struct deflate_state *state;
 
@@ -509,7 +509,7 @@
 }
 
 static void *
-DeflateInitOutput(struct bundle *bundle __unused, struct fsm_opt *o)
+DeflateInitOutput(struct bundle *bundle __attribute__((unused)), struct fsm_opt *o)
 {
   struct deflate_state *state;
 
--- a/usr.sbin/ppp/defs.c
+++ b/usr.sbin/ppp/defs.c
@@ -443,7 +443,7 @@
 }
 #else
 int
-loadmodules(int how __unused, const char *module __unused, ...)
+loadmodules(int how __attribute__((unused)), const char *module __attribute__((unused)), ...)
 {
   return 0;
 }
--- a/usr.sbin/ppp/ether.c
+++ b/usr.sbin/ppp/ether.c
@@ -191,7 +191,7 @@
 
 static void
 ether_device2iov(struct device *d, struct iovec *iov, int *niov,
-                 int maxiov __unused, int *auxfd, int *nauxfd)
+                 int maxiov __attribute__((unused)), int *auxfd, int *nauxfd)
 {
   struct etherdevice *dev;
   int sz = physical_MaxDeviceSize();
@@ -344,7 +344,7 @@
 
 struct device *
 ether_iov2device(int type, struct physical *p, struct iovec *iov, int *niov,
-                 int maxiov __unused, int *auxfd, int *nauxfd)
+                 int maxiov __attribute__((unused)), int *auxfd, int *nauxfd)
 {
   if (type == ETHER_DEVICE) {
     struct etherdevice *dev = (struct etherdevice *)iov[(*niov)++].iov_base;
--- a/usr.sbin/ppp/exec.c
+++ b/usr.sbin/ppp/exec.c
@@ -94,7 +94,7 @@
 
 static void
 exec_device2iov(struct device *d, struct iovec *iov, int *niov,
-               int maxiov __unused, int *auxfd, int *nauxfd)
+               int maxiov __attribute__((unused)), int *auxfd, int *nauxfd)
 {
   struct execdevice *dev;
   int sz = physical_MaxDeviceSize();
@@ -172,7 +172,7 @@
 
 struct device *
 exec_iov2device(int type, struct physical *p, struct iovec *iov,
-                int *niov, int maxiov __unused, int *auxfd, int *nauxfd)
+                int *niov, int maxiov __attribute__((unused)), int *auxfd, int *nauxfd)
 {
   if (type == EXEC_DEVICE) {
     struct execdevice *dev = (struct execdevice *)iov[(*niov)++].iov_base;
--- a/usr.sbin/ppp/fsm.c
+++ b/usr.sbin/ppp/fsm.c
@@ -771,7 +771,7 @@
 }
 
 static void
-FsmRecvTermAck(struct fsm *fp, struct fsmheader *lhp __unused, struct mbuf *bp)
+FsmRecvTermAck(struct fsm *fp, struct fsmheader *lhp __attribute__((unused)), struct mbuf *bp)
 /* RTA */
 {
   switch (fp->state) {
@@ -867,14 +867,14 @@
 }
 
 static void
-FsmRecvCodeRej(struct fsm *fp __unused, struct fsmheader *lhp __unused,
+FsmRecvCodeRej(struct fsm *fp __attribute__((unused)), struct fsmheader *lhp __attribute__((unused)),
 	       struct mbuf *bp)
 {
   m_freem(bp);
 }
 
 static void
-FsmRecvProtoRej(struct fsm *fp, struct fsmheader *lhp __unused, struct mbuf *bp)
+FsmRecvProtoRej(struct fsm *fp, struct fsmheader *lhp __attribute__((unused)), struct mbuf *bp)
 {
   struct physical *p = link2physical(fp->link);
   u_short proto;
@@ -974,7 +974,7 @@
 }
 
 static void
-FsmRecvEchoRep(struct fsm *fp, struct fsmheader *lhp __unused, struct mbuf *bp)
+FsmRecvEchoRep(struct fsm *fp, struct fsmheader *lhp __attribute__((unused)), struct mbuf *bp)
 {
   if (fsm2lcp(fp))
     bp = lqr_RecvEcho(fp, bp);
@@ -983,7 +983,7 @@
 }
 
 static void
-FsmRecvDiscReq(struct fsm *fp __unused, struct fsmheader *lhp __unused,
+FsmRecvDiscReq(struct fsm *fp __attribute__((unused)), struct fsmheader *lhp __attribute__((unused)),
 	       struct mbuf *bp)
 {
   m_freem(bp);
@@ -1012,7 +1012,7 @@
 }
 
 static void
-FsmRecvTimeRemain(struct fsm *fp __unused, struct fsmheader *lhp __unused,
+FsmRecvTimeRemain(struct fsm *fp __attribute__((unused)), struct fsmheader *lhp __attribute__((unused)),
 		  struct mbuf *bp)
 {
   m_freem(bp);
@@ -1103,7 +1103,7 @@
 }
 
 void
-fsm_NullRecvResetAck(struct fsm *fp, u_char id __unused)
+fsm_NullRecvResetAck(struct fsm *fp, u_char id __attribute__((unused)))
 {
   log_Printf(fp->LogLevel, "%s: Oops - received unexpected reset ack\n",
             fp->link->name);
--- a/usr.sbin/ppp/hdlc.c
+++ b/usr.sbin/ppp/hdlc.c
@@ -138,8 +138,8 @@
 }
 
 static struct mbuf *
-hdlc_LayerPush(struct bundle *bundle __unused, struct link *l __unused,
-	       struct mbuf *bp, int pri __unused, u_short *proto __unused)
+hdlc_LayerPush(struct bundle *bundle __attribute__((unused)), struct link *l __attribute__((unused)),
+	       struct mbuf *bp, int pri __attribute__((unused)), u_short *proto __attribute__((unused)))
 {
   struct mbuf *last;
   u_char *cp;
@@ -298,8 +298,8 @@
 }
 
 static struct mbuf *
-hdlc_LayerPull(struct bundle *b __unused, struct link *l, struct mbuf *bp,
-               u_short *proto __unused)
+hdlc_LayerPull(struct bundle *b __attribute__((unused)), struct link *l, struct mbuf *bp,
+               u_short *proto __attribute__((unused)))
 {
   struct physical *p = link2physical(l);
   u_short fcs;
--- a/usr.sbin/ppp/ip.c
+++ b/usr.sbin/ppp/ip.c
@@ -208,7 +208,7 @@
 int
 FilterCheck(const unsigned char *packet,
 #ifdef NOINET6
-	    u_int32_t family __unused,
+	    u_int32_t family __attribute__((unused)),
 #else
 	    u_int32_t family,
 #endif
--- a/usr.sbin/ppp/ipcp.c
+++ b/usr.sbin/ppp/ipcp.c
@@ -800,7 +800,7 @@
 }
 
 static void
-IpcpSentTerminateReq(struct fsm *fp __unused)
+IpcpSentTerminateReq(struct fsm *fp __attribute__((unused)))
 {
   /* Term REQ just sent by FSM */
 }
--- a/usr.sbin/ppp/ipv6cp.c
+++ b/usr.sbin/ppp/ipv6cp.c
@@ -376,14 +376,14 @@
 }
 
 void
-ipv6cp_IfaceAddrAdded(struct ipv6cp *ipv6cp __unused,
-		      const struct iface_addr *addr __unused)
+ipv6cp_IfaceAddrAdded(struct ipv6cp *ipv6cp __attribute__((unused)),
+		      const struct iface_addr *addr __attribute__((unused)))
 {
 }
 
 void
-ipv6cp_IfaceAddrDeleted(struct ipv6cp *ipv6cp __unused,
-			const struct iface_addr *addr __unused)
+ipv6cp_IfaceAddrDeleted(struct ipv6cp *ipv6cp __attribute__((unused)),
+			const struct iface_addr *addr __attribute__((unused)))
 {
 }
 
@@ -633,7 +633,7 @@
 }
 
 static void
-ipv6cp_SentTerminateReq(struct fsm *fp __unused)
+ipv6cp_SentTerminateReq(struct fsm *fp __attribute__((unused)))
 {
   /* Term REQ just sent by FSM */
 }
--- a/usr.sbin/ppp/lcp.c
+++ b/usr.sbin/ppp/lcp.c
@@ -532,7 +532,7 @@
 }
 
 static void
-LcpSentTerminateReq(struct fsm *fp __unused)
+LcpSentTerminateReq(struct fsm *fp __attribute__((unused)))
 {
   /* Term REQ just sent by FSM */
 }
@@ -1296,7 +1296,7 @@
 }
 
 extern struct mbuf *
-lcp_Input(struct bundle *bundle __unused, struct link *l, struct mbuf *bp)
+lcp_Input(struct bundle *bundle __attribute__((unused)), struct link *l, struct mbuf *bp)
 {
   /* Got PROTO_LCP from link */
   m_settype(bp, MB_LCPIN);
--- a/usr.sbin/ppp/lqr.c
+++ b/usr.sbin/ppp/lqr.c
@@ -198,7 +198,7 @@
 }
 
 struct mbuf *
-lqr_Input(struct bundle *bundle __unused, struct link *l, struct mbuf *bp)
+lqr_Input(struct bundle *bundle __attribute__((unused)), struct link *l, struct mbuf *bp)
 {
   struct physical *p = link2physical(l);
   struct lcp *lcp = p->hdlc.lqm.owner;
@@ -413,8 +413,8 @@
 }
 
 static struct mbuf *
-lqr_LayerPush(struct bundle *b __unused, struct link *l, struct mbuf *bp,
-              int pri __unused, u_short *proto)
+lqr_LayerPush(struct bundle *b __attribute__((unused)), struct link *l, struct mbuf *bp,
+              int pri __attribute__((unused)), u_short *proto)
 {
   struct physical *p = link2physical(l);
   int len, layer, extra_async_bytes;
@@ -510,7 +510,7 @@
 }
 
 static struct mbuf *
-lqr_LayerPull(struct bundle *b __unused, struct link *l __unused,
+lqr_LayerPull(struct bundle *b __attribute__((unused)), struct link *l __attribute__((unused)),
 	      struct mbuf *bp, u_short *proto)
 {
   /*
--- a/usr.sbin/ppp/main.c
+++ b/usr.sbin/ppp/main.c
@@ -158,14 +158,14 @@
 }
 
 static void
-TerminalCont(int signo __unused)
+TerminalCont(int signo __attribute__((unused)))
 {
   signal(SIGCONT, SIG_DFL);
   prompt_Continue(SignalPrompt);
 }
 
 static void
-TerminalStop(int signo __unused)
+TerminalStop(int signo __attribute__((unused)))
 {
   prompt_Suspend(SignalPrompt);
   signal(SIGCONT, TerminalCont);
@@ -173,7 +173,7 @@
 }
 
 static void
-BringDownServer(int signo __unused)
+BringDownServer(int signo __attribute__((unused)))
 {
   /* Drops all child prompts too ! */
   if (server_Close(SignalBundle))
@@ -181,7 +181,7 @@
 }
 
 static void
-RestartServer(int signo __unused)
+RestartServer(int signo __attribute__((unused)))
 {
   /* Drops all child prompts and re-opens the socket */
   server_Reopen(SignalBundle);
--- a/usr.sbin/ppp/mp.c
+++ b/usr.sbin/ppp/mp.c
@@ -161,13 +161,13 @@
 }
 
 static void
-mp_LayerStart(void *v __unused, struct fsm *fp __unused)
+mp_LayerStart(void *v __attribute__((unused)), struct fsm *fp __attribute__((unused)))
 {
   /* The given FSM (ccp) is about to start up ! */
 }
 
 static void
-mp_LayerUp(void *v __unused, struct fsm *fp)
+mp_LayerUp(void *v __attribute__((unused)), struct fsm *fp)
 {
   /* The given fsm (ccp) is now up */
 
@@ -175,13 +175,13 @@
 }
 
 static void
-mp_LayerDown(void *v __unused, struct fsm *fp __unused)
+mp_LayerDown(void *v __attribute__((unused)), struct fsm *fp __attribute__((unused)))
 {
   /* The given FSM (ccp) has been told to come down */
 }
 
 static void
-mp_LayerFinish(void *v __unused, struct fsm *fp)
+mp_LayerFinish(void *v __attribute__((unused)), struct fsm *fp)
 {
   /* The given fsm (ccp) is now down */
   if (fp->state == ST_CLOSED && fp->open_mode == OPEN_PASSIVE)
@@ -1076,7 +1076,7 @@
 
 static void
 mpserver_Read(struct fdescriptor *d, struct bundle *bundle,
-	      const fd_set *fdset __unused)
+	      const fd_set *fdset __attribute__((unused)))
 {
   struct mpserver *s = descriptor2mpserver(d);
 
@@ -1084,8 +1084,8 @@
 }
 
 static int
-mpserver_Write(struct fdescriptor *d __unused, struct bundle *bundle __unused,
-               const fd_set *fdset __unused)
+mpserver_Write(struct fdescriptor *d __attribute__((unused)), struct bundle *bundle __attribute__((unused)),
+               const fd_set *fdset __attribute__((unused)))
 {
   /* We never want to write here ! */
   log_Printf(LogALERT, "mpserver_Write: Internal error: Bad call !\n");
--- a/usr.sbin/ppp/mppe.c
+++ b/usr.sbin/ppp/mppe.c
@@ -155,7 +155,7 @@
 }
 
 static struct mbuf *
-MPPEOutput(void *v, struct ccp *ccp, struct link *l __unused, int pri __unused,
+MPPEOutput(void *v, struct ccp *ccp, struct link *l __attribute__((unused)), int pri __attribute__((unused)),
 	   u_short *proto, struct mbuf *mp)
 {
   struct mppe_state *mop = (struct mppe_state *)v;
@@ -232,7 +232,7 @@
 }
 
 static void
-MPPEResetInput(void *v __unused)
+MPPEResetInput(void *v __attribute__((unused)))
 {
   log_Printf(LogCCP, "MPPE: Unexpected input channel ack\n");
 }
@@ -372,8 +372,8 @@
 }
 
 static void
-MPPEDictSetup(void *v __unused, struct ccp *ccp __unused,
-	      u_short proto __unused, struct mbuf *mp __unused)
+MPPEDictSetup(void *v __attribute__((unused)), struct ccp *ccp __attribute__((unused)),
+	      u_short proto __attribute__((unused)), struct mbuf *mp __attribute__((unused)))
 {
   /* Nothing to see here */
 }
@@ -470,7 +470,7 @@
 }
 
 static u_int32_t
-MPPE_ConfigVal(struct bundle *bundle __unused, const struct ccp_config *cfg)
+MPPE_ConfigVal(struct bundle *bundle __attribute__((unused)), const struct ccp_config *cfg)
 {
   u_int32_t val;
 
@@ -676,7 +676,7 @@
 }
 
 static void *
-MPPEInitInput(struct bundle *bundle __unused, struct fsm_opt *o)
+MPPEInitInput(struct bundle *bundle __attribute__((unused)), struct fsm_opt *o)
 {
   struct mppe_state *mip;
 
@@ -732,7 +732,7 @@
 }
 
 static void *
-MPPEInitOutput(struct bundle *bundle __unused, struct fsm_opt *o)
+MPPEInitOutput(struct bundle *bundle __attribute__((unused)), struct fsm_opt *o)
 {
   struct mppe_state *mop;
 
--- a/usr.sbin/ppp/nat_cmd.c
+++ b/usr.sbin/ppp/nat_cmd.c
@@ -496,8 +496,8 @@
 }
 
 static struct mbuf *
-nat_LayerPush(struct bundle *bundle, struct link *l __unused, struct mbuf *bp,
-                int pri __unused, u_short *proto)
+nat_LayerPush(struct bundle *bundle, struct link *l __attribute__((unused)), struct mbuf *bp,
+                int pri __attribute__((unused)), u_short *proto)
 {
   if (!bundle->NatEnabled || *proto != PROTO_IP)
     return bp;
@@ -513,7 +513,7 @@
 }
 
 static struct mbuf *
-nat_LayerPull(struct bundle *bundle, struct link *l __unused, struct mbuf *bp,
+nat_LayerPull(struct bundle *bundle, struct link *l __attribute__((unused)), struct mbuf *bp,
                 u_short *proto)
 {
   static int gfrags;
--- a/usr.sbin/ppp/ncp.c
+++ b/usr.sbin/ppp/ncp.c
@@ -146,7 +146,7 @@
 int
 ncp_fsmStart(struct ncp *ncp,
 #ifdef NOINET6
-	     struct bundle *bundle __unused
+	     struct bundle *bundle __attribute__((unused))
 #else
 	     struct bundle *bundle
 #endif
@@ -337,9 +337,9 @@
  * of what is to be pushed next, coming either from mp->out or ncp->afq.
  */
 int
-ncp_PushPacket(struct ncp *ncp __unused,
+ncp_PushPacket(struct ncp *ncp __attribute__((unused)),
 #ifdef NOINET6
-	       int *af __unused,
+	       int *af __attribute__((unused)),
 #else
 	       int *af,
 #endif
--- a/usr.sbin/ppp/netgraph.c
+++ b/usr.sbin/ppp/netgraph.c
@@ -279,7 +279,7 @@
 
 static void
 ng_device2iov(struct device *d, struct iovec *iov, int *niov,
-              int maxiov __unused, int *auxfd, int *nauxfd)
+              int maxiov __attribute__((unused)), int *auxfd, int *nauxfd)
 {
   struct ngdevice *dev;
   int sz = physical_MaxDeviceSize();
@@ -320,7 +320,7 @@
 
 struct device *
 ng_iov2device(int type, struct physical *p, struct iovec *iov, int *niov,
-              int maxiov __unused, int *auxfd, int *nauxfd)
+              int maxiov __attribute__((unused)), int *auxfd, int *nauxfd)
 {
   if (type == NG_DEVICE) {
     struct ngdevice *dev = (struct ngdevice *)iov[(*niov)++].iov_base;
--- a/usr.sbin/ppp/physical.c
+++ b/usr.sbin/ppp/physical.c
@@ -397,8 +397,8 @@
 }
 
 static int
-physical_DescriptorWrite(struct fdescriptor *d, struct bundle *bundle __unused,
-                         const fd_set *fdset __unused)
+physical_DescriptorWrite(struct fdescriptor *d, struct bundle *bundle __attribute__((unused)),
+                         const fd_set *fdset __attribute__((unused)))
 {
   struct physical *p = descriptor2physical(d);
   int nw, result = 0;
@@ -530,7 +530,7 @@
 
 void
 physical_DescriptorRead(struct fdescriptor *d, struct bundle *bundle,
-                     const fd_set *fdset __unused)
+                     const fd_set *fdset __attribute__((unused)))
 {
   struct physical *p = descriptor2physical(d);
   u_char *rbuff;
--- a/usr.sbin/ppp/pred.c
+++ b/usr.sbin/ppp/pred.c
@@ -151,7 +151,7 @@
 }
 
 static void *
-Pred1InitInput(struct bundle *bundle __unused, struct fsm_opt *o __unused)
+Pred1InitInput(struct bundle *bundle __attribute__((unused)), struct fsm_opt *o __attribute__((unused)))
 {
   struct pred1_state *state;
   state = (struct pred1_state *)malloc(sizeof(struct pred1_state));
@@ -161,7 +161,7 @@
 }
 
 static void *
-Pred1InitOutput(struct bundle *bundle __unused, struct fsm_opt *o __unused)
+Pred1InitOutput(struct bundle *bundle __attribute__((unused)), struct fsm_opt *o __attribute__((unused)))
 {
   struct pred1_state *state;
   state = (struct pred1_state *)malloc(sizeof(struct pred1_state));
@@ -171,8 +171,8 @@
 }
 
 static struct mbuf *
-Pred1Output(void *v, struct ccp *ccp, struct link *l __unused,
-	    int pri __unused, u_short *proto, struct mbuf *bp)
+Pred1Output(void *v, struct ccp *ccp, struct link *l __attribute__((unused)),
+	    int pri __attribute__((unused)), u_short *proto, struct mbuf *bp)
 {
   struct pred1_state *state = (struct pred1_state *)v;
   struct mbuf *mwp;
@@ -289,28 +289,28 @@
 }
 
 static void
-Pred1DictSetup(void *v __unused, struct ccp *ccp __unused,
-	       u_short proto __unused, struct mbuf *bp __unused)
+Pred1DictSetup(void *v __attribute__((unused)), struct ccp *ccp __attribute__((unused)),
+	       u_short proto __attribute__((unused)), struct mbuf *bp __attribute__((unused)))
 {
   /* Nothing to see here */
 }
 
 static const char *
-Pred1DispOpts(struct fsm_opt *o __unused)
+Pred1DispOpts(struct fsm_opt *o __attribute__((unused)))
 {
   return NULL;
 }
 
 static void
-Pred1InitOptsOutput(struct bundle *bundle __unused, struct fsm_opt *o,
-                    const struct ccp_config *cfg __unused)
+Pred1InitOptsOutput(struct bundle *bundle __attribute__((unused)), struct fsm_opt *o,
+                    const struct ccp_config *cfg __attribute__((unused)))
 {
   o->hdr.len = 2;
 }
 
 static int
-Pred1SetOpts(struct bundle *bundle __unused, struct fsm_opt *o,
-             const struct ccp_config *cfg __unused)
+Pred1SetOpts(struct bundle *bundle __attribute__((unused)), struct fsm_opt *o,
+             const struct ccp_config *cfg __attribute__((unused)))
 {
   if (o->hdr.len != 2) {
     o->hdr.len = 2;
--- a/usr.sbin/ppp/prompt.c
+++ b/usr.sbin/ppp/prompt.c
@@ -129,7 +129,7 @@
 }
 
 static int
-prompt_UpdateSet(struct fdescriptor *d, fd_set *r, fd_set *w __unused,
+prompt_UpdateSet(struct fdescriptor *d, fd_set *r, fd_set *w __attribute__((unused)),
 		 fd_set *e, int *n)
 {
   struct prompt *p = descriptor2prompt(d);
@@ -181,7 +181,7 @@
 
 static void
 prompt_Read(struct fdescriptor *d, struct bundle *bundle,
-	    const fd_set *fdset __unused)
+	    const fd_set *fdset __attribute__((unused)))
 {
   struct prompt *p = descriptor2prompt(d);
   struct prompt *op;
@@ -302,8 +302,8 @@
 }
 
 static int
-prompt_Write(struct fdescriptor *d __unused, struct bundle *bundle __unused,
-	     const fd_set *fdset __unused)
+prompt_Write(struct fdescriptor *d __attribute__((unused)), struct bundle *bundle __attribute__((unused)),
+	     const fd_set *fdset __attribute__((unused)))
 {
   /* We never want to write here ! */
   log_Printf(LogALERT, "prompt_Write: Internal error: Bad call !\n");
--- a/usr.sbin/ppp/proto.c
+++ b/usr.sbin/ppp/proto.c
@@ -69,8 +69,8 @@
 }
 
 static struct mbuf *
-proto_LayerPush(struct bundle *b __unused, struct link *l, struct mbuf *bp,
-                int pri __unused, u_short *proto)
+proto_LayerPush(struct bundle *b __attribute__((unused)), struct link *l, struct mbuf *bp,
+                int pri __attribute__((unused)), u_short *proto)
 {
   log_Printf(LogDEBUG, "proto_LayerPush: Using 0x%04x\n", *proto);
   bp = proto_Prepend(bp, *proto, l->lcp.his_protocomp,
@@ -82,7 +82,7 @@
 }
 
 static struct mbuf *
-proto_LayerPull(struct bundle *b __unused, struct link *l, struct mbuf *bp,
+proto_LayerPull(struct bundle *b __attribute__((unused)), struct link *l, struct mbuf *bp,
                 u_short *proto)
 {
   u_char cp[2];
--- a/usr.sbin/ppp/radius.c
+++ b/usr.sbin/ppp/radius.c
@@ -682,8 +682,8 @@
  * Time to call rad_continue_send_request() - something to read.
  */
 static void
-radius_Read(struct fdescriptor *d, struct bundle *bundle __unused,
-	    const fd_set *fdset __unused)
+radius_Read(struct fdescriptor *d, struct bundle *bundle __attribute__((unused)),
+	    const fd_set *fdset __attribute__((unused)))
 {
   radius_Continue(descriptor2radius(d), 1);
 }
@@ -711,8 +711,8 @@
  * Behave as a struct fdescriptor (descriptor.h)
  */
 static int
-radius_UpdateSet(struct fdescriptor *d, fd_set *r, fd_set *w __unused,
-		 fd_set *e __unused, int *n)
+radius_UpdateSet(struct fdescriptor *d, fd_set *r, fd_set *w __attribute__((unused)),
+		 fd_set *e __attribute__((unused)), int *n)
 {
   struct radius *rad = descriptor2radius(d);
 
@@ -742,8 +742,8 @@
  * Behave as a struct fdescriptor (descriptor.h)
  */
 static int
-radius_Write(struct fdescriptor *d __unused, struct bundle *bundle __unused,
-	     const fd_set *fdset __unused)
+radius_Write(struct fdescriptor *d __attribute__((unused)), struct bundle *bundle __attribute__((unused)),
+	     const fd_set *fdset __attribute__((unused)))
 {
   /* We never want to write here ! */
   log_Printf(LogALERT, "radius_Write: Internal error: Bad call !\n");
--- a/usr.sbin/ppp/server.c
+++ b/usr.sbin/ppp/server.c
@@ -192,8 +192,8 @@
 }
 
 static int
-server_Write(struct fdescriptor *d __unused, struct bundle *bundle __unused,
-	     const fd_set *fdset __unused)
+server_Write(struct fdescriptor *d __attribute__((unused)), struct bundle *bundle __attribute__((unused)),
+	     const fd_set *fdset __attribute__((unused)))
 {
   /* We never want to write here ! */
   log_Printf(LogALERT, "server_Write: Internal error: Bad call !\n");
@@ -384,7 +384,7 @@
 }
 
 int
-server_Close(struct bundle *bundle __unused)
+server_Close(struct bundle *bundle __attribute__((unused)))
 {
   if (server.fd >= 0) {
     if (*server.cfg.sockname != '\0') {
--- a/usr.sbin/ppp/sync.c
+++ b/usr.sbin/ppp/sync.c
@@ -49,8 +49,8 @@
 #include "physical.h"
 
 static struct mbuf *
-sync_LayerPush(struct bundle *bundle __unused, struct link *l __unused,
-	       struct mbuf *bp, int pri __unused, u_short *proto __unused)
+sync_LayerPush(struct bundle *bundle __attribute__((unused)), struct link *l __attribute__((unused)),
+	       struct mbuf *bp, int pri __attribute__((unused)), u_short *proto __attribute__((unused)))
 {
   log_DumpBp(LogSYNC, "Write", bp);
   m_settype(bp, MB_SYNCOUT);
@@ -59,8 +59,8 @@
 }
 
 static struct mbuf *
-sync_LayerPull(struct bundle *b __unused, struct link *l, struct mbuf *bp,
-               u_short *proto __unused)
+sync_LayerPull(struct bundle *b __attribute__((unused)), struct link *l, struct mbuf *bp,
+               u_short *proto __attribute__((unused)))
 {
   struct physical *p = link2physical(l);
   int len;
--- a/usr.sbin/ppp/tcp.c
+++ b/usr.sbin/ppp/tcp.c
@@ -119,8 +119,8 @@
 
 struct device *
 tcp_iov2device(int type, struct physical *p, struct iovec *iov,
-               int *niov, int maxiov __unused, int *auxfd __unused,
-	       int *nauxfd __unused)
+               int *niov, int maxiov __attribute__((unused)), int *auxfd __attribute__((unused)),
+	       int *nauxfd __attribute__((unused)))
 {
   if (type == TCP_DEVICE) {
     free(iov[(*niov)++].iov_base);
--- a/usr.sbin/ppp/tcpmss.c
+++ b/usr.sbin/ppp/tcpmss.c
@@ -168,15 +168,15 @@
 }
 
 static struct mbuf *
-tcpmss_LayerPush(struct bundle *bundle, struct link *l __unused,
-		 struct mbuf *bp, int pri __unused, u_short *proto __unused)
+tcpmss_LayerPush(struct bundle *bundle, struct link *l __attribute__((unused)),
+		 struct mbuf *bp, int pri __attribute__((unused)), u_short *proto __attribute__((unused)))
 {
 	return tcpmss_Check(bundle, bp);
 }
 
 static struct mbuf *
-tcpmss_LayerPull(struct bundle *bundle, struct link *l __unused,
-		 struct mbuf *bp, u_short *proto __unused)
+tcpmss_LayerPull(struct bundle *bundle, struct link *l __attribute__((unused)),
+		 struct mbuf *bp, u_short *proto __attribute__((unused)))
 {
 	return tcpmss_Check(bundle, bp);
 }
--- a/usr.sbin/ppp/tty.c
+++ b/usr.sbin/ppp/tty.c
@@ -573,11 +573,11 @@
 
 static void
 tty_device2iov(struct device *d, struct iovec *iov, int *niov,
-               int maxiov __unused,
+               int maxiov __attribute__((unused)),
 #ifndef NONETGRAPH
                int *auxfd, int *nauxfd
 #else
-               int *auxfd __unused, int *nauxfd __unused
+               int *auxfd __attribute__((unused)), int *nauxfd __attribute__((unused))
 #endif
                )
 {
@@ -630,11 +630,11 @@
 
 struct device *
 tty_iov2device(int type, struct physical *p, struct iovec *iov, int *niov,
-               int maxiov __unused,
+               int maxiov __attribute__((unused)),
 #ifndef NONETGRAPH
                int *auxfd, int *nauxfd
 #else
-               int *auxfd __unused, int *nauxfd __unused
+               int *auxfd __attribute__((unused)), int *nauxfd __attribute__((unused))
 #endif
                )
 {
--- a/usr.sbin/ppp/udp.c
+++ b/usr.sbin/ppp/udp.c
@@ -138,7 +138,7 @@
 
 static void
 udp_device2iov(struct device *d, struct iovec *iov, int *niov,
-               int maxiov __unused, int *auxfd __unused, int *nauxfd __unused)
+               int maxiov __attribute__((unused)), int *auxfd __attribute__((unused)), int *nauxfd __attribute__((unused)))
 {
   int sz = physical_MaxDeviceSize();
 
@@ -174,7 +174,7 @@
 
 struct device *
 udp_iov2device(int type, struct physical *p, struct iovec *iov, int *niov,
-               int maxiov __unused, int *auxfd __unused, int *nauxfd __unused)
+               int maxiov __attribute__((unused)), int *auxfd __attribute__((unused)), int *nauxfd __attribute__((unused)))
 {
   if (type == UDP_DEVICE) {
     struct udpdevice *dev = (struct udpdevice *)iov[(*niov)++].iov_base;
--- a/usr.sbin/ppp/vjcomp.c
+++ b/usr.sbin/ppp/vjcomp.c
@@ -70,8 +70,8 @@
 #define MAX_VJHEADER 16		/* Maximum size of compressed header */
 
 static struct mbuf *
-vj_LayerPush(struct bundle *bundle, struct link *l __unused, struct mbuf *bp,
-	     int pri __unused, u_short *proto)
+vj_LayerPush(struct bundle *bundle, struct link *l __attribute__((unused)), struct mbuf *bp,
+	     int pri __attribute__((unused)), u_short *proto)
 {
   int type;
   struct ip *pip;
@@ -162,7 +162,7 @@
 }
 
 static struct mbuf *
-vj_LayerPull(struct bundle *bundle, struct link *l __unused, struct mbuf *bp,
+vj_LayerPull(struct bundle *bundle, struct link *l __attribute__((unused)), struct mbuf *bp,
              u_short *proto)
 {
   u_char type;
