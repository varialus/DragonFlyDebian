#!/usr/bin/make -f
# Sample debian/rules that uses cdbs.  Originaly written by Robert Millan.
# This file is public domain.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

CFLAGS = -Wall -g -pipe -fPIC -I. -D_GNU_SOURCE -D'__FBSDID(string)='
CXXFLAGS = -Wall -g -pipe -fPIC -I. -D_GNU_SOURCE -D'__FBSDID(string)='

ifneq (,$(filter noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
	CXXFLAGS += -O0
else
	CFLAGS += -O2
	CXXFLAGS += -O2
endif

VERSION = $(shell dpkg-parsechangelog | sed -e '/^Version:/!d' -e 's/^Version: //g' -e 's/-.*//g')
SVN = http://svn.freebsd.org/base/release/$(VERSION).0
#SVN = http://svn.freebsd.org/base/releng/8.1
ORIGDIR = freebsd-utils-$(VERSION)
PATH := /usr/lib/freebsd:$(PATH)
DESTDIR = $(CURDIR)/debian/tmp
PMAKE = COPTS="$(CFLAGS)" CFLAGS="$(CFLAGS) -I$(CURDIR)/debian/include" NO_WERROR=1 NOGCCERROR=1 NOSHARED=NO NO_SHARED=NO DESTDIR=$(DESTDIR) make

build: build-arch build-indep

get-orig-source:
	rm -rf $(ORIGDIR)
	mkdir -p $(ORIGDIR)/sys/kern $(ORIGDIR)/etc
	for i in sbin/dmesg sbin/sysctl usr.bin/kdump usr.bin/ktrace \
		 usr.sbin/jail bin/chflags sbin/devd usr.sbin/acpi/acpiconf \
		 sbin/kldconfig sbin/kldload sbin/kldstat sbin/kldunload \
		 usr.bin/ktrdump usr.bin/vmstat sbin/devfs sbin/fdisk \
		 sbin/ifconfig sbin/route usr.bin/netstat usr.sbin/rpc.umntall \
		 usr.sbin/ppp usr.sbin/pppctl usr.sbin/arp usr.bin/mkuzip \
		 sbin/ipfw contrib/pf sbin/pfctl usr.sbin/authpf \
		 sbin/mount_std sbin/umount sbin/mount_autofs sbin/mount_cd9660 \
		 sbin/mount_ext2fs sbin/mount_hpfs sbin/mount_msdosfs sbin/mount_nfs \
		 sbin/mount_ntfs sbin/mount_nullfs sbin/mount_udf sbin/mount_unionfs \
		 sbin/mount_reiserfs sbin/mount \
		 sbin/mdconfig sbin/ccdconfig sbin/swapon sbin/atacontrol sbin/camcontrol \
		 sbin/gbde sbin/geom bin/kenv \
		 usr.sbin/kbdcontrol usr.sbin/vidcontrol share/syscons \
		 sbin/savecore sbin/dumpon \
		 sys/kern/syscalls.c etc/pf.os ; do \
	    svn export $(SVN)/$$i $(ORIGDIR)/$$i ; \
	done
	tar --numeric-owner --owner 0 --group 0 -czf ../freebsd-utils_$(VERSION).orig.tar.gz $(ORIGDIR)
	rm -rf $(ORIGDIR)

patch: patch-stamp
patch-stamp:
	QUILT_PATCHES=debian/patches quilt push -a || test $$? = 2
	touch $@

lib: lib-stamp
lib-stamp: patch-stamp
	$(MAKE) -C lib
	touch $@

build-arch: freebsd-utils gbde geli kbdcontrol vidcontrol kldutils freebsd-net-tools

freebsd-utils: freebsd-utils-stamp
freebsd-utils-stamp: patch-stamp
#	$(PMAKE) -C bin/chflags
	$(PMAKE) -C bin/kenv
	$(PMAKE) -C sbin/atacontrol
	$(PMAKE) -C sbin/camcontrol
	$(PMAKE) -C sbin/ccdconfig
	$(PMAKE) -C sbin/devd
	$(PMAKE) -C sbin/devfs
	$(PMAKE) -C sbin/dmesg
	$(PMAKE) -C sbin/dumpon
	$(PMAKE) -C sbin/mdconfig
	$(PMAKE) -C sbin/mount
	$(PMAKE) -C sbin/mount_autofs
	$(PMAKE) -C sbin/mount_cd9660
	$(PMAKE) -C sbin/mount_ext2fs
	$(PMAKE) -C sbin/mount_hpfs
	$(PMAKE) -C sbin/mount_msdosfs
#	$(PMAKE) -C sbin/mount_nfs
	$(PMAKE) -C sbin/mount_ntfs
	$(PMAKE) -C sbin/mount_nullfs
	$(PMAKE) -C sbin/mount_reiserfs
	$(PMAKE) -C sbin/mount_udf
	$(PMAKE) -C sbin/mount_unionfs
	$(PMAKE) -C sbin/mount_std
	$(PMAKE) -C sbin/savecore
	$(PMAKE) -C sbin/swapon
	$(PMAKE) -C sbin/sysctl
	$(PMAKE) -C sbin/umount
	$(PMAKE) -C usr.bin/kdump
	$(PMAKE) -C usr.bin/ktrace
	$(PMAKE) -C usr.bin/mkuzip
	$(PMAKE) -C usr.sbin/acpi/acpiconf
	$(PMAKE) -C usr.sbin/rpc.umntall
	touch $@

gbde: gbde-stamp
gbde-stamp: patch-stamp
#	$(PMAKE) -C sbin/gbde
	touch $@

geli: geli-stamp
geli-stamp: patch-stamp
#	$(PMAKE) -C sbin/geom/class/eli
	touch $@

kbdcontrol: kbdcontrol-stamp
kbdcontrol-stamp: patch-stamp
	$(PMAKE) -C usr.sbin/kbdcontrol
	sed -i -e "s/^choices=.*/choices=\"`cd share/syscons/keymaps && echo *.kbd | sed -e 's/ /, /g'`\"/g" \
	debian/kbdcontrol.config
	touch $@

vidcontrol: vidcontrol-stamp
vidcontrol-stamp: patch-stamp
	$(PMAKE) -C usr.sbin/vidcontrol
	$(PMAKE) -C share/syscons/scrnmaps
	touch $@

kldutils: kldutils-stamp
kldutils-stamp: patch-stamp
	$(PMAKE) -C sbin/kldconfig
	$(PMAKE) -C sbin/kldload
	$(PMAKE) -C sbin/kldstat
	$(PMAKE) -C sbin/kldunload
	touch $@

freebsd-net-tools: freebsd-net-tools-stamp
freebsd-net-tools-stamp: patch-stamp lib-stamp
	$(PMAKE) -C sbin/ifconfig
	$(PMAKE) -C sbin/pfctl
	$(PMAKE) -C sbin/route
	$(PMAKE) -C usr.bin/netstat
	$(PMAKE) -C usr.sbin/arp
	$(PMAKE) -C usr.sbin/authpf
	$(PMAKE) -C usr.sbin/pppctl
	touch $@

build-indep: build-indep-stamp
build-indep-stamp:
	touch $@

clean:
	dh_testdir
	dh_testroot

	[ ! -f lib/Makefile ] || $(MAKE) -C lib clean

	$(PMAKE) -C bin/chflags clean
	$(PMAKE) -C bin/kenv clean
	$(PMAKE) -C sbin/ccdconfig clean
	$(PMAKE) -C sbin/atacontrol clean
	$(PMAKE) -C sbin/camcontrol clean
	$(PMAKE) -C sbin/devd clean
	$(PMAKE) -C sbin/devfs clean
	$(PMAKE) -C sbin/dmesg clean
	$(PMAKE) -C sbin/dumpon clean
	$(PMAKE) -C sbin/mdconfig clean
	$(PMAKE) -C sbin/mount clean
	$(PMAKE) -C sbin/mount_autofs clean
	$(PMAKE) -C sbin/mount_cd9660 clean
	$(PMAKE) -C sbin/mount_ext2fs clean
	$(PMAKE) -C sbin/mount_hpfs clean
	$(PMAKE) -C sbin/mount_msdosfs clean
	$(PMAKE) -C sbin/mount_nfs clean
	$(PMAKE) -C sbin/mount_ntfs clean
	$(PMAKE) -C sbin/mount_nullfs clean
	$(PMAKE) -C sbin/mount_reiserfs clean
	$(PMAKE) -C sbin/mount_udf clean
	$(PMAKE) -C sbin/mount_unionfs clean
	$(PMAKE) -C sbin/mount_std clean
	$(PMAKE) -C sbin/savecore clean
	$(PMAKE) -C sbin/swapon clean
	$(PMAKE) -C sbin/sysctl  clean
	$(PMAKE) -C sbin/umount clean
	$(PMAKE) -C usr.bin/kdump clean
	$(PMAKE) -C usr.bin/ktrace clean
	$(PMAKE) -C usr.bin/mkuzip clean
	$(PMAKE) -C usr.sbin/acpi/acpiconf clean
	$(PMAKE) -C usr.sbin/rpc.umntall clean

	$(PMAKE) -C sbin/gbde clean

	$(PMAKE) -C usr.sbin/kbdcontrol clean

	$(PMAKE) -C usr.sbin/vidcontrol clean
	$(PMAKE) -C share/syscons/scrnmaps clean

	$(PMAKE) -C sbin/kldconfig clean
	$(PMAKE) -C sbin/kldload clean
	$(PMAKE) -C sbin/kldstat clean
	$(PMAKE) -C sbin/kldunload clean

	$(PMAKE) -C sbin/ifconfig clean
	$(PMAKE) -C sbin/pfctl clean
	$(PMAKE) -C sbin/route clean
	$(PMAKE) -C usr.bin/netstat clean
	$(PMAKE) -C usr.sbin/arp clean
	$(PMAKE) -C usr.sbin/authpf clean
	$(PMAKE) -C usr.sbin/pppctl clean

	QUILT_PATCHES=debian/patches quilt pop -a -R || test $$? = 2
	rm -rf .pc
	rm -f *stamp
	dh_clean

install: install-indep install-arch
install-indep:

install-arch:
	dh_testdir
	dh_testroot
	dh_prep -a
	dh_installdirs -a
	dh_install -a

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependant files that arn't kernel modules here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs
	dh_installdocs
#	dh_installexamples
#	dh_installmenu
	dh_installdebconf
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
	dh_installinit -pfreebsd-utils -- start 03 S .
	dh_installinit -pkldutils --no-start -- start 12 S .
	dh_installinit -pkbdcontrol -- start 20 S .
#	dh_installcron
#	dh_installinfo
	dh_installman
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
#	dh_perl
#	dh_python
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-arch binary-indep
.PHONY: build clean binary-indep binary-arch binary install install-indep install-arch configure
