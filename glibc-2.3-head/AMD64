TODO:

* decide ld.so location
	It should be unique between all (at least Debian) ports,
	namely not the same as on kfreebsd-i386 (/lib/ld.so.1).
	See also http://www.linuxbase.org/futures/ideas/multiarch/index.html

	Proposed: /lib/ld-kfreebsd-amd64.so.1


* toolchain (gcc, binutils) support
	Write config bits for proper
	ld.so location:		/lib/ld.so.1	/lib/ld-kfreebsd-amd64.so.1
	emulation:		elf_i386_fbsd	elf_x86_64_fbsd
	...

	Ideally, we should support gcc in variants
	        cross
        	biarch on i386 
	        native on amd6 
	        biarch on amd64

* biarch capable kfreebsd-kernel-headers
	similarly to linux-kernel-headers,
	all files in /usr/include/machine should be autogenerated in form
        on kfreebsd-i386
		#ifdef __x86_64__
		# include <amd64/param.h>
		#else
		# include <i386/param.h>
		#endif
	on kfreebsd-amd64
		#ifdef __i386__
		# include <i386/param.h>
		#else
		# include <amd64/param.h>
		#endif

	the first step is to provide content of dir amd64,
	it would be sufficient for test builds of glibc


* prepare kernel

* archive 
        ? ftp.gnuab.org 


* buildd machine
* buildd admin

* porting machine
* porting machine admin

