TODO:

* glibc testsuite failures:

[localedata/sort-test.out] Error 1
[stdlib/tst-setcontext.out] Error 255
[posix/tst-rxspencer.out] Error 139
[posix/tst-waitid.out] Error 1
[posix/annexc.out] Error 1 (ignored)
[rt/tst-timer2.o] Error 1
[rt/tst-aio.out] Error 1
[rt/tst-aio64.out] Error 1
[rt/tst-mqueue5.o] Error 1
[rt/tst-timer4.o] Error 1
[rt/tst-timer5.o] Error 1

* decide ld.so location
	It should be unique between all (at least Debian) ports,
	namely not the same as on kfreebsd-i386 (/lib/ld.so.1).
	See also http://www.linuxbase.org/futures/ideas/multiarch/index.html

	Result: /lib/ld-kfreebsd-x86-64.so.1


* toolchain (gcc, binutils) support
	Write config bits for proper
	ld.so location:		/lib/ld.so.1	/lib/ld-kfreebsd-x86-64.so.1
	emulation:		elf_i386_fbsd	elf_x86_64_fbsd
	...

	Ideally, we should support gcc in variants
	        cross
        	biarch on i386 
	        native on amd64
	        biarch on amd64

* biarch capable kfreebsd-kernel-headers
	similarly to linux-kernel-headers,
	all files in /usr/include/machine should be autogenerated in form
        on kfreebsd-i386
		#ifdef __x86_64__
		# include <amd64/param.h>
		#else
		# include <i386/param.h>
		#endif
	on kfreebsd-amd64
		#ifdef __i386__
		# include <i386/param.h>
		#else
		# include <amd64/param.h>
		#endif

	the first step is to provide content of dir amd64,
	it would be sufficient for test builds of glibc


* prepare kernel

* buildd machine
* buildd admin

* porting machine
* porting machine admin


binutils:
---------
See web/patches/binutils_elfosabi.diff

for biarch simply add to debian/rules:
	ifeq ($(DEB_HOST_ARCH),kfreebsd-i386)
        	CONFARGS += --enable-targets=x86_64-kfreebsd-gnu
	endif

gcc-x.y:
--------

See web/patches/gcc_amd64.diff
