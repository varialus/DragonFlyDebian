Status: in upstream as of 2006/07/24
	see http://sourceware.org/bugzilla/show_bug.cgi?id=2383

===================================================================
RCS file: /cvs/glibc/linuxthreads/linuxthreads/pthread.c,v
retrieving revision 1.140
retrieving revision 1.141
diff -u -r1.140 -r1.141
--- linuxthreads/pthread.c	2006/07/24 15:12:15	1.140
+++ linuxthreads/pthread.c	2006/07/24 19:20:26	1.141
@@ -37,7 +37,7 @@
 #include <not-cancel.h>
 
 /* Sanity check.  */
-#if !defined __SIGRTMIN || (__SIGRTMAX - __SIGRTMIN) < 3
+#if !defined PTHREAD_SIGBASE && (!defined __SIGRTMIN || (__SIGRTMAX - __SIGRTMIN) < 3)
 # error "This must not happen"
 #endif
 
@@ -181,9 +181,15 @@
    platform does not support any real-time signals we will define the
    values to some unreasonable value which will signal failing of all
    the functions below.  */
+#if defined (PTHREAD_SIGBASE)
+int __pthread_sig_restart = PTHREAD_SIGBASE;
+int __pthread_sig_cancel = PTHREAD_SIGBASE + 1;
+int __pthread_sig_debug = PTHREAD_SIGBASE + 2;
+#else
 int __pthread_sig_restart = __SIGRTMIN;
 int __pthread_sig_cancel = __SIGRTMIN + 1;
 int __pthread_sig_debug = __SIGRTMIN + 2;
+#endif
 
 extern int __libc_current_sigrtmin_private (void);
 
@@ -198,9 +204,11 @@
 
   if (__libc_current_sigrtmin_private () == -1)
     {
+#ifndef PTHREAD_SIGBASE
       __pthread_sig_restart = SIGUSR1;
       __pthread_sig_cancel = SIGUSR2;
       __pthread_sig_debug = 0;
+#endif
     }
   else
     {
