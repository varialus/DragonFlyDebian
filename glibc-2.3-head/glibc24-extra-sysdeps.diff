
 patch to kfreebsd sysdeps for building glibc 2.4 snapshot
 see also NOTES-2.4

diff -urN linuxthreads/kfreebsd/allocrtsig.c linuxthreads/kfreebsd/allocrtsig.c
--- linuxthreads/kfreebsd/allocrtsig.c	2005-12-19 08:43:29.000000000 +0100
+++ linuxthreads/kfreebsd/allocrtsig.c	2006-03-02 10:34:13.000000000 +0100
@@ -1,4 +1,4 @@
-#include <sysdeps/generic/allocrtsig.c>
+#include <signal/allocrtsig.c>
 strong_alias (__libc_current_sigrtmin, __libc_current_sigrtmin_private);
 strong_alias (__libc_current_sigrtmax, __libc_current_sigrtmax_private);
 strong_alias (__libc_allocate_rtsig, __libc_allocate_rtsig_private);
diff -urN -x .svn sysdeps/kfreebsd/kernel-posix-cpu-timers.h sysdeps/kfreebsd/kernel-posix-cpu-timers.h
--- sysdeps/kfreebsd/kernel-posix-cpu-timers.h	1970-01-01 01:00:00.000000000 +0100
+++ sysdeps/kfreebsd/kernel-posix-cpu-timers.h	2006-03-02 14:04:19.000000000 +0100
@@ -0,0 +1 @@
+/* placeholder */
diff -urN -x .svn sysdeps/kfreebsd/bits/fcntl.h sysdeps/kfreebsd/bits/fcntl.h
--- sysdeps/kfreebsd/bits/fcntl.h	2005-12-16 16:29:14.000000000 +0100
+++ sysdeps/kfreebsd/bits/fcntl.h	2006-03-02 11:24:01.000000000 +0100
@@ -43,6 +43,8 @@
 #define O_NOFOLLOW	0x0100	/* Don't follow symlinks.  */
 #endif
 
+enum { O_DIRECTORY = 0 };
+
 /* File status flags for `open' and `fcntl'.  */
 #define	O_APPEND	0x0008	/* Writes append to the file.  */
 #define	O_NONBLOCK	0x0004	/* Non-blocking I/O.  */
diff -urN -x .svn sysdeps/kfreebsd/check_fds.c sysdeps/kfreebsd/check_fds.c
--- sysdeps/kfreebsd/check_fds.c	1970-01-01 01:00:00.000000000 +0100
+++ sysdeps/kfreebsd/check_fds.c	2006-03-02 10:30:14.000000000 +0100
@@ -0,0 +1 @@
+void __libc_check_standard_fds (void) {;}
diff -urN -x .svn sysdeps/kfreebsd/check_pf.c sysdeps/kfreebsd/check_pf.c
--- sysdeps/kfreebsd/check_pf.c	1970-01-01 01:00:00.000000000 +0100
+++ sysdeps/kfreebsd/check_pf.c	2006-03-02 10:39:53.000000000 +0100
@@ -0,0 +1 @@
+#include <inet/check_pf.c>
diff -urN -x .svn sysdeps/kfreebsd/dl-osinfo.h sysdeps/kfreebsd/dl-osinfo.h
--- sysdeps/kfreebsd/dl-osinfo.h	2006-02-14 18:12:55.000000000 +0100
+++ sysdeps/kfreebsd/dl-osinfo.h	2006-03-02 11:24:32.000000000 +0100
@@ -97,3 +97,24 @@
           }								      \
       }									      \
   } while (0)
+
+static inline uintptr_t __attribute__ ((always_inline))
+_dl_setup_stack_chk_guard (void)
+{
+  uintptr_t ret;
+#ifdef ENABLE_STACKGUARD_RANDOMIZE 
+  int fd = __open ("/dev/urandom", O_RDONLY);
+  if (fd >= 0)
+    {
+      ssize_t reslen = __read (fd, &ret, sizeof (ret));
+      __close (fd);
+      if (reslen == (ssize_t) sizeof (ret))
+        return ret;
+    }
+#endif
+  ret = 0;
+  unsigned char *p = (unsigned char *) &ret;
+  p[sizeof (ret) - 1] = 255;
+  p[sizeof (ret) - 2] = '\n';
+  return ret;
+}
diff -urN -x .svn sysdeps/kfreebsd/glob.c sysdeps/kfreebsd/glob.c
--- sysdeps/kfreebsd/glob.c	2006-01-23 11:02:39.000000000 +0100
+++ sysdeps/kfreebsd/glob.c	2006-03-02 10:37:07.000000000 +0100
@@ -1,3 +1,3 @@
 /* 'glob64' is different from 'glob', because
    'struct stat64' != 'struct stat'.  */
-#include <sysdeps/generic/glob.c>
+#include <posix/glob.c>
diff -urN -x .svn sysdeps/kfreebsd/i386/sysdep.h sysdeps/kfreebsd/i386/sysdep.h
--- sysdeps/kfreebsd/i386/sysdep.h	2006-01-19 14:02:55.000000000 +0100
+++ sysdeps/kfreebsd/i386/sysdep.h	2006-03-02 10:31:06.000000000 +0100
@@ -81,27 +81,6 @@
 # define SYSCALL_ERROR_HANDLER	/* Nothing here; code in sysdep.S is used.  */
 #else
 
-# ifndef HAVE_HIDDEN
-#  define SETUP_PIC_REG(reg) \
-  call 1f;								      \
-  .subsection 1;							      \
-1:movl (%esp), %e##reg;							      \
-  ret;									      \
-  .previous
-# else
-#  define SETUP_PIC_REG(reg) \
-  .section .gnu.linkonce.t.__i686.get_pc_thunk.reg,"ax",@progbits;	      \
-  .globl __i686.get_pc_thunk.reg;					      \
-  .hidden __i686.get_pc_thunk.reg;					      \
-  .type __i686.get_pc_thunk.reg,@function;				      \
-__i686.get_pc_thunk.reg:						      \
-  movl (%esp), %e##reg;							      \
-  ret;									      \
-  .size __i686.get_pc_thunk.reg, . - __i686.get_pc_thunk.reg;		      \
-  .previous;								      \
-  call __i686.get_pc_thunk.reg
-# endif
-
 # if RTLD_PRIVATE_ERRNO
 #  define SYSCALL_ERROR_HANDLER						      \
 0:SETUP_PIC_REG(cx);							      \
diff -urN -x .svn sysdeps/kfreebsd/sbrk.c sysdeps/kfreebsd/sbrk.c
--- sysdeps/kfreebsd/sbrk.c	1970-01-01 01:00:00.000000000 +0100
+++ sysdeps/kfreebsd/sbrk.c	2006-03-02 10:39:38.000000000 +0100
@@ -0,0 +1 @@
+#include <misc/sbrk.c>
diff -urN -x .svn sysdeps/kfreebsd/sigreturn.c sysdeps/kfreebsd/sigreturn.c
--- sysdeps/kfreebsd/sigreturn.c	2005-12-16 13:27:58.000000000 +0100
+++ sysdeps/kfreebsd/sigreturn.c	2006-03-02 10:38:02.000000000 +0100
@@ -1,3 +1,3 @@
 /* The sigreturn syscall cannot be explicitly called on FreeBSD, only
    implicitly by returning from a signal handler.  */
-#include <sysdeps/generic/sigreturn.c>
+#include <signal/sigreturn.c>
diff -urN -x .svn sysdeps/kfreebsd/utmp-compat/utmp_file.c sysdeps/kfreebsd/utmp-compat/utmp_file.c
--- sysdeps/kfreebsd/utmp-compat/utmp_file.c	2005-12-16 13:27:58.000000000 +0100
+++ sysdeps/kfreebsd/utmp-compat/utmp_file.c	2006-03-02 10:36:08.000000000 +0100
@@ -1 +1 @@
-#include <sysdeps/generic/utmp_file.c>
+#include <login/utmp_file.c>
