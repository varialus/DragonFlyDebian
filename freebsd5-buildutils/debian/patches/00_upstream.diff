diff -ur src.old/contrib/one-true-awk/b.c src/contrib/one-true-awk/b.c
--- src.old/contrib/one-true-awk/b.c	2004-02-08 22:32:14.000000000 +0100
+++ src/contrib/one-true-awk/b.c	2004-10-28 22:41:30.000000000 +0200
@@ -25,6 +25,7 @@
 /* lasciate ogne speranza, voi ch'entrate. */
 
 #define	DEBUG
+#define _ISOC99_SOURCE		/* isblank (glibc) */
 
 #include <ctype.h>
 #include <stdio.h>
diff -ur src.old/usr.bin/cksum/cksum.c src/usr.bin/cksum/cksum.c
--- src.old/usr.bin/cksum/cksum.c	2003-03-14 00:32:28.000000000 +0100
+++ src/usr.bin/cksum/cksum.c	2004-10-28 22:41:30.000000000 +0200
@@ -57,6 +57,7 @@
 #include <stdlib.h>
 #include <string.h>
 #include <unistd.h>
+#include <stdint.h>	/* uintXX_t (glibc) */
 
 #include "extern.h"
 
@@ -70,7 +71,7 @@
 	off_t len;
 	char *fn, *p;
 	int (*cfncn)(int, uint32_t *, off_t *);
-	void (*pfncn)(char *, u_int32_t, off_t);
+	void (*pfncn)(char *, uint32_t, off_t);
 
 	if ((p = rindex(argv[0], '/')) == NULL)
 		p = argv[0];
diff -ur src.old/usr.bin/cksum/extern.h src/usr.bin/cksum/extern.h
--- src.old/usr.bin/cksum/extern.h	2003-03-14 00:32:28.000000000 +0100
+++ src/usr.bin/cksum/extern.h	2004-10-28 22:41:30.000000000 +0200
@@ -35,6 +35,7 @@
  */
 
 #include <sys/cdefs.h>
+#include <stdint.h>		/* uintXX_t (glibc) */
 
 __BEGIN_DECLS
 int	crc(int, uint32_t *, off_t *);
diff -ur src.old/usr.bin/make/main.c src/usr.bin/make/main.c
--- src.old/usr.bin/make/main.c	2004-10-23 23:34:41.000000000 +0200
+++ src/usr.bin/make/main.c	2004-10-28 22:41:30.000000000 +0200
@@ -63,7 +63,7 @@
 #include <sys/param.h>
 #include <sys/signal.h>
 #include <sys/stat.h>
-#if defined(__i386__)
+#if (defined(__FreeBSD__) || defined(__FreeBSD_kernel__)) && defined(__i386__)
 #include <sys/sysctl.h>
 #endif
 #include <sys/time.h>
@@ -489,8 +489,12 @@
 	  iMkLvl = 0;
 	}
 	if (iMkLvl++ > MKLVL_MAXVAL) {
-	  errc(2, EAGAIN, 
-	       "Max recursion level (%d) exceeded.", MKLVL_MAXVAL);
+#ifdef __set_errno
+	  __set_errno (EAGAIN);
+#else
+	  errno = EAGAIN;
+#endif
+	  err (2, "Max recursion level (%d) exceeded.", MKLVL_MAXVAL);
 	}
 	bzero(szMkLvl = emalloc(32), 32);
 	sprintf(szMkLvl, "%d", iMkLvl);
@@ -518,6 +522,7 @@
 	}
 #endif
 
+#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
 	/*
 	 * PC-98 kernel sets the `i386' string to the utsname.machine and
 	 * it cannot be distinguished from IBM-PC by uname(3).  Therefore,
@@ -537,6 +542,7 @@
 				machine = "pc98";
 		}
 	}
+#endif
 
 	/*
 	 * Get the name of this type of MACHINE from utsname
diff -ur src.old/usr.bin/yacc/main.c src/usr.bin/yacc/main.c
--- src.old/usr.bin/yacc/main.c	2004-03-05 03:05:56.000000000 +0100
+++ src/usr.bin/yacc/main.c	2004-10-28 22:41:30.000000000 +0200
@@ -114,7 +114,10 @@
 
 volatile sig_atomic_t sigdie;
 
-__dead2 void
+#ifdef __FreeBSD__
+__dead2
+#endif
+void
 done(k)
 int k;
 {
diff -ur src.old/usr.sbin/config/main.c src/usr.sbin/config/main.c
--- src.old/usr.sbin/config/main.c	2004-08-07 06:19:37.000000000 +0200
+++ src/usr.sbin/config/main.c	2004-10-28 22:41:30.000000000 +0200
@@ -52,6 +52,9 @@
 #include <sysexits.h>
 #include <unistd.h>
 #include <dirent.h>
+#ifndef _DIRENT_HAVE_D_NAMLEN
+#include <string.h> /* strlen */
+#endif
 #include "y.tab.h"
 #include "config.h"
 
@@ -429,7 +432,11 @@
 	if ((dirp = opendir(p)) == NULL)
 		err(EX_OSERR, "opendir %s", p);
 	while ((dp = readdir(dirp)) != NULL) {
+#ifdef _DIRENT_HAVE_D_NAMLEN
 		i = dp->d_namlen - 2;
+#else
+		i = strlen (dp->d_name) - 2;
+#endif
 		/* Skip non-headers */
 		if (dp->d_name[i] != '.' || dp->d_name[i + 1] != 'h')
 			continue;
diff -ur src.old/usr.sbin/mtree/compare.c src/usr.sbin/mtree/compare.c
--- src.old/usr.sbin/mtree/compare.c	2004-01-11 20:25:56.000000000 +0100
+++ src/usr.sbin/mtree/compare.c	2004-10-28 22:41:30.000000000 +0200
@@ -173,21 +175,22 @@
 		    (intmax_t)s->st_size, (intmax_t)p->fts_statp->st_size);
 		tab = "\t";
 	}
+#ifdef ST_MTIM
 	/*
 	 * XXX
 	 * Catches nano-second differences, but doesn't display them.
 	 */
 	if ((s->flags & F_TIME) &&
-	     ((s->st_mtimespec.tv_sec != p->fts_statp->st_mtimespec.tv_sec) ||
-	     (s->st_mtimespec.tv_nsec != p->fts_statp->st_mtimespec.tv_nsec))) {
+	     ((s->ST_MTIM.tv_sec != p->fts_statp->ST_MTIM.tv_sec) ||
+	     (s->ST_MTIM.tv_nsec != p->fts_statp->ST_MTIM.tv_nsec))) {
 		LABEL;
 		(void)printf("%smodification time expected %.24s ",
-		    tab, ctime(&s->st_mtimespec.tv_sec));
+		    tab, ctime(&s->ST_MTIM.tv_sec));
 		(void)printf("found %.24s",
-		    ctime(&p->fts_statp->st_mtimespec.tv_sec));
+		    ctime(&p->fts_statp->ST_MTIM.tv_sec));
 		if (uflag) {
-			tv[0].tv_sec = s->st_mtimespec.tv_sec;
-			tv[0].tv_usec = s->st_mtimespec.tv_nsec / 1000;
+			tv[0].tv_sec = s->ST_MTIM.tv_sec;
+			tv[0].tv_usec = s->ST_MTIM.tv_nsec / 1000;
 			tv[1] = tv[0];
 			if (utimes(p->fts_accpath, tv))
 				(void)printf(" not modified: %s\n",
@@ -198,6 +201,7 @@
 			(void)printf("\n");
 		tab = "\t";
 	}
+#endif		/* ST_MTIM */
 	if (s->flags & F_CKSUM) {
 		if ((fd = open(p->fts_accpath, O_RDONLY, 0)) < 0) {
 			LABEL;
@@ -220,6 +224,7 @@
 			}
 		}
 	}
+#if defined(__FreeBSD__)
 	if ((s->flags & F_FLAGS) && s->st_flags != p->fts_statp->st_flags) {
 		LABEL;
 		fflags = flags_to_string(s->st_flags);
@@ -240,6 +245,7 @@
 			(void)printf("\n");
 		tab = "\t";
 	}
+#endif
 #ifdef MD5
 	if (s->flags & F_MD5) {
 		char *new_digest, buf[33];
diff -ur src.old/usr.sbin/mtree/create.c src/usr.sbin/mtree/create.c
--- src.old/usr.sbin/mtree/create.c	2004-01-11 20:38:48.000000000 +0100
+++ src/usr.sbin/mtree/create.c	2004-10-28 22:41:30.000000000 +0200
@@ -70,7 +70,11 @@
 static u_long flags = 0xffffffff;
 
 static int	dsort(const FTSENT * const *, const FTSENT * const *);
-static void	output(int, int *, const char *, ...) __printflike(3, 4);
+static void	output(int, int *, const char *, ...)
+#ifdef __FreeBSD__
+__printflike(3, 4)
+#endif
+;
 static int	statd(FTS *, FTSENT *, uid_t *, gid_t *, mode_t *, u_long *);
 static void	statf(int, FTSENT *);
 
@@ -208,10 +214,12 @@
 	if (keys & F_SIZE)
 		output(indent, &offset, "size=%jd",
 		    (intmax_t)p->fts_statp->st_size);
+#ifdef ST_MTIM
 	if (keys & F_TIME)
 		output(indent, &offset, "time=%ld.%ld",
-		    (long)p->fts_statp->st_mtimespec.tv_sec,
-		    p->fts_statp->st_mtimespec.tv_nsec);
+		    (long)p->fts_statp->ST_MTIM.tv_sec,
+		    p->fts_statp->ST_MTIM.tv_nsec);
+#endif
 	if (keys & F_CKSUM && S_ISREG(p->fts_statp->st_mode)) {
 		if ((fd = open(p->fts_accpath, O_RDONLY, 0)) < 0 ||
 		    crc(fd, &val, &len))
@@ -252,11 +260,13 @@
 	if (keys & F_SLINK &&
 	    (p->fts_info == FTS_SL || p->fts_info == FTS_SLNONE))
 		output(indent, &offset, "link=%s", rlink(p->fts_accpath));
+#if defined(__FreeBSD__)
 	if (keys & F_FLAGS && p->fts_statp->st_flags != flags) {
 		fflags = flags_to_string(p->fts_statp->st_flags);
 		output(indent, &offset, "flags=%s", fflags);
 		free(fflags);
 	}
+#endif
 	(void)putchar('\n');
 }
 
@@ -315,6 +327,7 @@
 				maxuid = u[suid];
 			}
 
+#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
 			/*
 			 * XXX
 			 * note that the below will break when file flags
@@ -328,6 +341,7 @@
 				saveflags = sflags;
 				maxflags = f[FLAGS2IDX(sflags)];
 			}
+#endif			/* __FreeBSD__ */
 		}
 	}
 	/*
@@ -371,11 +385,13 @@
 			(void)printf(" mode=%#o", savemode);
 		if (keys & F_NLINK)
 			(void)printf(" nlink=1");
+#if defined(__FreeBSD__)
 		if (keys & F_FLAGS) {
 			fflags = flags_to_string(saveflags);
 			(void)printf(" flags=%s", fflags);
 			free(fflags);
 		}
+#endif
 		(void)printf("\n");
 		*puid = saveuid;
 		*pgid = savegid;
diff -ur src.old/usr.sbin/mtree/extern.h src/usr.sbin/mtree/extern.h
--- src.old/usr.sbin/mtree/extern.h	2004-01-11 20:38:48.000000000 +0100
+++ src/usr.sbin/mtree/extern.h	2004-10-28 22:41:30.000000000 +0200
@@ -29,6 +29,9 @@
  *	@(#)extern.h	8.1 (Berkeley) 6/6/93
  * $FreeBSD: src/usr.sbin/mtree/extern.h,v 1.13 2004/01/11 19:38:48 phk Exp $
  */
+
+#include <stdint.h>
+
 extern uint32_t crc_total;
 
 #ifdef _FTS_H_
diff -ur src.old/usr.sbin/mtree/misc.c src/usr.sbin/mtree/misc.c
--- src.old/usr.sbin/mtree/misc.c	2004-01-11 20:25:56.000000000 +0100
+++ src/usr.sbin/mtree/misc.c	2004-10-28 22:41:30.000000000 +0200
@@ -103,6 +103,7 @@
 	return (strcmp(((const KEY *)a)->name, ((const KEY *)b)->name));
 }
 
+#if defined(__FreeBSD__)
 char *
 flags_to_string(u_long fflags)
 {
@@ -118,3 +119,4 @@
 
 	return string;
 }
+#endif /* __FreeBSD__ */
diff -ur src.old/usr.sbin/mtree/mtree.c src/usr.sbin/mtree/mtree.c
--- src.old/usr.sbin/mtree/mtree.c	2004-06-04 21:29:28.000000000 +0200
+++ src/usr.sbin/mtree/mtree.c	2004-10-28 22:41:30.000000000 +0200
@@ -164,7 +164,7 @@
 	if (dir && chdir(dir))
 		err(1, "%s", dir);
 
-	if ((cflag || sflag) && !getwd(fullpath))
+	if ((cflag || sflag) && !getcwd(fullpath, MAXPATHLEN))
 		errx(1, "%s", fullpath);
 
 	if (cflag) {
diff -ur src.old/usr.sbin/mtree/mtree.h src/usr.sbin/mtree/mtree.h
--- src.old/usr.sbin/mtree/mtree.h	2003-10-21 10:27:05.000000000 +0200
+++ src/usr.sbin/mtree/mtree.h	2004-10-28 22:41:30.000000000 +0200
@@ -42,7 +42,16 @@
 	struct _node	*parent, *child;	/* up, down */
 	struct _node	*prev, *next;		/* left, right */
 	off_t	st_size;			/* size */
-	struct timespec	st_mtimespec;		/* last modification time */
+#ifdef __GLIBC__
+# ifdef _STATBUF_ST_NSEC
+#  define ST_MTIM st_mtim
+# endif
+#else
+# define ST_MTIM st_mtimespec
+#endif
+#ifdef ST_MTIM
+	struct timespec	ST_MTIM;		/* last modification time */
+#endif
 	u_long	cksum;				/* check sum */
 	char	*md5digest;			/* MD5 digest */
 	char	*sha1digest;			/* SHA-1 digest */
@@ -50,6 +59,9 @@
 	char	*slink;				/* symbolic link reference */
 	uid_t	st_uid;				/* uid */
 	gid_t	st_gid;				/* gid */
+#ifndef S_ISTXT
+#define S_ISTXT S_ISVTX
+#endif
 #define	MBITS	(S_ISUID|S_ISGID|S_ISTXT|S_IRWXU|S_IRWXG|S_IRWXO)
 	mode_t	st_mode;			/* mode */
 	u_long	st_flags;			/* flags */
diff -ur src.old/usr.sbin/mtree/spec.c src/usr.sbin/mtree/spec.c
--- src.old/usr.sbin/mtree/spec.c	2003-11-19 16:28:21.000000000 +0100
+++ src/usr.sbin/mtree/spec.c	2004-10-28 22:41:30.000000000 +0200
@@ -169,7 +169,9 @@
 	char *kw, *val = NULL;
 	struct group *gr;
 	struct passwd *pw;
+#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
 	mode_t *m;
+#endif
 	int value;
 	char *ep;
 
@@ -199,12 +201,14 @@
 			if(!ip->rmd160digest)
 				errx(1, "strdup");
 			break;
+#if defined(__FreeBSD__)
 		case F_FLAGS:
 			if (strcmp("none", val) == 0)
 				ip->st_flags = 0;
 			else if (strtofflags(&val, &ip->st_flags, NULL) != 0)
 				errx(1, "line %d: invalid flag %s",lineno, val);
  			break;
+#endif
 		case F_GID:
 			ip->st_gid = strtoul(val, &ep, 10);
 			if (*ep)
@@ -244,17 +248,19 @@
 			if (strunvis(ip->slink, val) == -1)
 				errx(1, "symlink %s is ill-encoded", val);
 			break;
+#ifdef ST_MTIM
 		case F_TIME:
-			ip->st_mtimespec.tv_sec = strtoul(val, &ep, 10);
+			ip->ST_MTIM.tv_sec = strtoul(val, &ep, 10);
 			if (*ep != '.')
 				errx(1, "line %d: invalid time %s",
 				lineno, val);
 			val = ep + 1;
-			ip->st_mtimespec.tv_nsec = strtoul(val, &ep, 10);
+			ip->ST_MTIM.tv_nsec = strtoul(val, &ep, 10);
 			if (*ep)
 				errx(1, "line %d: invalid time %s",
 				lineno, val);
 			break;
+#endif
 		case F_TYPE:
 			switch(*val) {
 			case 'b':
diff -ur src.old/usr.sbin/mtree/specspec.c src/usr.sbin/mtree/specspec.c
--- src.old/usr.sbin/mtree/specspec.c	2004-08-07 12:04:29.000000000 +0200
+++ src/usr.sbin/mtree/specspec.c	2004-10-28 22:41:30.000000000 +0200
@@ -82,8 +82,10 @@
 		printf(" sha1digest=%s", n->sha1digest);
 	if (f & F_RMD160)
 		printf(" rmd160digest=%s", n->rmd160digest);
+#if defined(__FreeBSD__)
 	if (f & F_FLAGS)
 		printf(" flags=%s", flags_to_string(n->st_flags));
+#endif
 	printf("\n");
 }
 
@@ -148,8 +150,10 @@
 		differs |= F_SIZE;
 	if (FS(n1, n2, F_SLINK, slink))
 		differs |= F_SLINK;
-	if (FM(n1, n2, F_TIME, st_mtimespec))
+#ifdef ST_MTIM
+	if (FM(n1, n2, F_TIME, ST_MTIM))
 		differs |= F_TIME;
+#endif
 	if (FF(n1, n2, F_UID, st_uid))
 		differs |= F_UID;
 	if (FF(n1, n2, F_UNAME, st_uid))
diff -ur src.old/usr.sbin/mtree/verify.c src/usr.sbin/mtree/verify.c
--- src.old/usr.sbin/mtree/verify.c	2004-01-11 20:25:56.000000000 +0100
+++ src/usr.sbin/mtree/verify.c	2004-10-28 22:41:30.000000000 +0200
@@ -225,9 +225,11 @@
 		if (chmod(path, p->st_mode))
 			(void)printf("%s: permissions not set: %s\n",
 			    path, strerror(errno));
+#if defined(__FreeBSD__)
 		if ((p->flags & F_FLAGS) && p->st_flags &&
 		    chflags(path, p->st_flags))
 			(void)printf("%s: file flags not set: %s\n",
 			    path, strerror(errno));
+#endif
 	}
 }
