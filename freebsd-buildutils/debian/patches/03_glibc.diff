--- a/src/usr.sbin/mtree/specspec.c
+++ b/src/usr.sbin/mtree/specspec.c
@@ -84,8 +84,6 @@
 		printf(" rmd160digest=%s", n->rmd160digest);
 	if (f & F_SHA256)
 		printf(" sha256digest=%s", n->sha256digest);
-	if (f & F_FLAGS)
-		printf(" flags=%s", flags_to_string(n->st_flags));
 	printf("\n");
 }
 
--- a/src/usr.bin/make/cond.c
+++ b/src/usr.bin/make/cond.c
@@ -1115,7 +1115,7 @@
  *	Handle .else statement.
  */
 void
-Cond_Else(char *line __unused, int code __unused, int lineno __unused)
+Cond_Else(char *line, int code, int lineno)
 {
 
 	while (isspace((u_char)*line))
@@ -1156,7 +1156,7 @@
  *	Handle .endif statement.
  */
 void
-Cond_Endif(char *line __unused, int code __unused, int lineno __unused)
+Cond_Endif(char *line, int code, int lineno)
 {
 
 	while (isspace((u_char)*line))
--- a/src/usr.bin/make/job.c
+++ b/src/usr.bin/make/job.c
@@ -474,7 +474,7 @@
 }
 
 static void
-catch_child(int sig __unused)
+catch_child(int sig)
 {
 }
 
@@ -2190,7 +2190,7 @@
  */
 void
 #ifdef USE_KQUEUE
-Job_CatchOutput(int flag __unused)
+Job_CatchOutput(int flag)
 #else
 Job_CatchOutput(int flag)
 #endif
--- a/src/usr.bin/make/parse.c
+++ b/src/usr.bin/make/parse.c
@@ -2210,13 +2210,13 @@
 }
 
 static void
-parse_include(char *file, int code __unused, int lineno __unused)
+parse_include(char *file, int code, int lineno)
 {
 	xparse_include(file, 0);
 }
 
 static void
-parse_sinclude(char *file, int code __unused, int lineno __unused)
+parse_sinclude(char *file, int code, int lineno)
 {
 	xparse_include(file, 1);
 }
@@ -2230,7 +2230,7 @@
  *	a warning if the directive is malformed.
  */
 static void
-parse_message(char *line, int iserror, int lineno __unused)
+parse_message(char *line, int iserror, int lineno)
 {
 
 	if (!isspace((u_char)*line)) {
@@ -2257,7 +2257,7 @@
  *	Parse an .undef directive.
  */
 static void
-parse_undef(char *line, int code __unused, int lineno __unused)
+parse_undef(char *line, int code , int lineno)
 {
 	char *cp;
 
@@ -2279,7 +2279,7 @@
  *	Parse a .for directive.
  */
 static void
-parse_for(char *line, int code __unused, int lineno)
+parse_for(char *line, int code, int lineno)
 {
 
 	if (!For_For(line)) {
@@ -2311,7 +2311,7 @@
  *	Parse endfor. This may only happen if there was no matching .for.
  */
 static void
-parse_endfor(char *line __unused, int code __unused, int lineno __unused)
+parse_endfor(char *line, int code, int lineno)
 {
 
 	Parse_Error(PARSE_FATAL, "for-less endfor");
--- a/src/usr.bin/make/proc.h
+++ b/src/usr.bin/make/proc.h
@@ -48,6 +48,6 @@
 	pid_t	child_pid;
 } ProcStuff;
 
-void Proc_Exec(const ProcStuff *) __dead2;
+void Proc_Exec(const ProcStuff *);
 
 #endif /* proc_h_458845848 */
--- a/src/usr.bin/make/shell.c
+++ b/src/usr.bin/make/shell.c
@@ -120,7 +120,7 @@
  */
 static struct Shells shells = TAILQ_HEAD_INITIALIZER(shells);
 
-void ShellDump(const struct Shell *) __unused;
+void ShellDump(const struct Shell *);
 
 /**
  * Helper function for sorting the builtin list alphabetically.
--- a/src/usr.bin/make/util.c
+++ b/src/usr.bin/make/util.c
@@ -61,7 +61,7 @@
 #include "targ.h"
 #include "util.h"
 
-static void enomem(void) __dead2;
+static void enomem(void);
 
 /*-
  * Debug --
--- a/src/usr.bin/make/util.h
+++ b/src/usr.bin/make/util.h
@@ -103,10 +103,10 @@
 void Debug(const char *, ...);
 void DebugM(const char *, ...);
 void Error(const char *, ...);
-void Fatal(const char *, ...) __dead2;
-void Punt(const char *, ...) __dead2;
-void DieHorribly(void) __dead2;
-void Finish(int) __dead2;
+void Fatal(const char *, ...);
+void Punt(const char *, ...);
+void DieHorribly(void);
+void Finish(int);
 char *estrdup(const char *);
 void *emalloc(size_t);
 void *erealloc(void *, size_t);
--- a/src/usr.bin/make/var.c
+++ b/src/usr.bin/make/var.c
@@ -248,7 +248,7 @@
  *	The trimmed word is added to the buffer.
  */
 static Boolean
-VarHead(const char *word, Boolean addSpace, Buffer *buf, void *dummy __unused)
+VarHead(const char *word, Boolean addSpace, Buffer *buf, void *dummy)
 {
 	char *slash;
 
@@ -283,7 +283,7 @@
  *	The trimmed word is added to the buffer.
  */
 static Boolean
-VarTail(const char *word, Boolean addSpace, Buffer *buf, void *dummy __unused)
+VarTail(const char *word, Boolean addSpace, Buffer *buf, void *dummy)
 {
 	const char *slash;
 
@@ -312,7 +312,7 @@
  *	The suffix from the word is placed in the buffer.
  */
 static Boolean
-VarSuffix(const char *word, Boolean addSpace, Buffer *buf, void *dummy __unused)
+VarSuffix(const char *word, Boolean addSpace, Buffer *buf, void *dummy)
 {
 	const char *dot;
 
@@ -340,7 +340,7 @@
  *	The trimmed word is added to the buffer.
  */
 static Boolean
-VarRoot(const char *word, Boolean addSpace, Buffer *buf, void *dummy __unused)
+VarRoot(const char *word, Boolean addSpace, Buffer *buf, void *dummy)
 {
 	char *dot;
 
--- a/src/usr.bin/yacc/main.c
+++ b/src/usr.bin/yacc/main.c
@@ -114,7 +114,7 @@
 
 volatile sig_atomic_t sigdie;
 
-__dead2 void
+ void
 done(k)
 int k;
 {
@@ -128,7 +128,7 @@
 
 static void
 onintr(signo)
-	int signo __unused;
+	int signo;
 {
     sigdie = 1;
     done(1);
--- a/src/usr.sbin/mtree/compare.c
+++ b/src/usr.sbin/mtree/compare.c
@@ -72,7 +72,7 @@
 	}
 
 int
-compare(char *name __unused, NODE *s, FTSENT *p)
+compare(char *name , NODE *s, FTSENT *p)
 {
 	struct timeval tv[2];
 	uint32_t val;
--- a/src/usr.sbin/btxld/btx.h
+++ b/src/usr.sbin/btxld/btx.h
@@ -30,6 +30,7 @@
 #define _BTX_H_
 
 #include <sys/types.h>
+#include <stdint.h>
 
 #define BTX_PGSIZE	0x1000		/* Page size */
 #define BTX_PGBASE	0x5000		/* Start of page tables */
--- a/src/usr.sbin/btxld/elfh.c
+++ b/src/usr.sbin/btxld/elfh.c
@@ -30,6 +30,7 @@
 #include <sys/endian.h>
 
 #include <stddef.h>
+#include <stdint.h>
 #include "elfh.h"
 
 #define SET_ME	0xeeeeeeee    /* filled in by btxld */
--- a/src/usr.sbin/btxld/elfh.h
+++ b/src/usr.sbin/btxld/elfh.h
@@ -26,7 +26,7 @@
  * $FreeBSD$
  */
 
-#include <sys/elf32.h>
+#include "elf32.h"
 
 struct elfh {
     Elf32_Ehdr e;		/* ELF header */
--- a/src/usr.sbin/mtree/Makefile
+++ b/src/usr.sbin/mtree/Makefile
@@ -11,8 +11,4 @@
 
 WARNS?=	4
 
-CFLAGS+= -DMD5 -DSHA1 -DRMD160 -DSHA256
-DPADD=	${LIBMD}
-LDADD=	-lmd
-
 .include <bsd.prog.mk>
--- a/src/usr.bin/yacc/defs.h
+++ b/src/usr.bin/yacc/defs.h
@@ -42,6 +42,9 @@
 #include <err.h>
 #include <stdio.h>
 
+#ifndef __dead2
+# define __dead2
+#endif
 
 /*  machine-dependent definitions			*/
 /*  the following definitions are for the Tahoe		*/
