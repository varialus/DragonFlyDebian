diff -ur sys.orig/alpha/include/alpha_cpu.h sys/alpha/include/alpha_cpu.h
--- sys.orig/alpha/include/alpha_cpu.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/alpha/include/alpha_cpu.h	2004-12-07 23:48:24.000000000 +0100
@@ -49,6 +49,7 @@
  * and miscellaneous PALcode operations.
  */
 
+#include <sys/types.h>
 
 /*
  * Process Control Block definitions [OSF/1 PALcode Specific]
diff -ur sys.orig/alpha/include/param.h sys/alpha/include/param.h
--- sys.orig/alpha/include/param.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/alpha/include/param.h	2004-12-07 23:48:24.000000000 +0100
@@ -39,6 +39,9 @@
  *	@(#)param.h	8.1 (Berkeley) 6/10/93
  */
 
+#ifndef _MACHINE_PARAM_H_
+#define _MACHINE_PARAM_H_
+
 /*
  * Machine dependent constants for the Alpha.
  */
@@ -135,4 +138,6 @@
 #define pgtok(x)                ((x) * (PAGE_SIZE / 1024)) 
 
 #endif /* !_MACHINE_PARAM_H_ */
+
+#endif /* !_MACHINE_PARAM_H_ */
 #endif /* !_NO_NAMESPACE_POLLUTION */
diff -ur sys.orig/alpha/include/pcb.h sys/alpha/include/pcb.h
--- sys.orig/alpha/include/pcb.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/alpha/include/pcb.h	2004-12-07 23:48:24.000000000 +0100
@@ -31,6 +31,8 @@
 #ifndef _MACHINE_PCB_H_
 #define _MACHINE_PCB_H_
 
+#include <sys/types.h>
+
 #include <machine/frame.h>
 #include <machine/reg.h>
 #include <machine/alpha_cpu.h>
diff -ur sys.orig/alpha/include/pmap.h sys/alpha/include/pmap.h
--- sys.orig/alpha/include/pmap.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/alpha/include/pmap.h	2004-12-07 23:48:24.000000000 +0100
@@ -45,6 +45,13 @@
 #ifndef _MACHINE_PMAP_H_
 #define	_MACHINE_PMAP_H_
 
+
+#include <vm/vm.h>
+
+#ifndef	_PMAP_VM_
+#include <vm/pmap.h>
+#endif
+
 /*
  * Define meanings for a few software bits in the pte
  */
diff -ur sys.orig/alpha/include/proc.h sys/alpha/include/proc.h
--- sys.orig/alpha/include/proc.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/alpha/include/proc.h	2004-12-07 23:48:24.000000000 +0100
@@ -31,6 +31,9 @@
 #ifndef _MACHINE_PROC_H_
 #define	_MACHINE_PROC_H_
 
+#include <sys/types.h>
+
+
 /*
  * Machine-dependent part of the proc struct for the Alpha.
  */
diff -ur sys.orig/alpha/include/reg.h sys/alpha/include/reg.h
--- sys.orig/alpha/include/reg.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/alpha/include/reg.h	2004-12-07 23:48:24.000000000 +0100
@@ -31,6 +31,8 @@
 #ifndef _ALPHA_REG_H_
 #define	_ALPHA_REG_H_
 
+#include <sys/types.h>
+
 /*
  * XXX where did this info come from?
  */
diff -ur sys.orig/i386/include/npx.h sys/i386/include/npx.h
--- sys.orig/i386/include/npx.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/i386/include/npx.h	2004-12-07 23:48:32.000000000 +0100
@@ -41,6 +41,8 @@
 #ifndef _MACHINE_NPX_H_
 #define	_MACHINE_NPX_H_
 
+#include <sys/types.h>
+
 /* Environment information of floating point unit */
 struct env87 {
 	long	en_cw;		/* control word (16bits) */
diff -ur sys.orig/i386/include/pcb.h sys/i386/include/pcb.h
--- sys.orig/i386/include/pcb.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/i386/include/pcb.h	2004-12-07 23:48:32.000000000 +0100
@@ -39,6 +39,7 @@
 /*
  * Intel 386 process control block
  */
+#include <sys/types.h>
 #include <machine/npx.h>
 
 struct pcb {
diff -ur sys.orig/i386/include/pmap.h sys/i386/include/pmap.h
--- sys.orig/i386/include/pmap.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/i386/include/pmap.h	2004-12-07 23:48:32.000000000 +0100
@@ -44,6 +44,13 @@
 #ifndef _MACHINE_PMAP_H_
 #define	_MACHINE_PMAP_H_
 
+
+#include <vm/vm.h>
+
+#ifndef	_PMAP_VM_
+#include <vm/pmap.h>
+#endif
+
 /*
  * Page-directory and page-table entires follow this format, with a few
  * of the fields not present here and there, depending on a lot of things.
diff -ur sys.orig/net/ethernet.h sys/net/ethernet.h
--- sys.orig/net/ethernet.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/net/ethernet.h	2004-12-07 23:48:33.000000000 +0100
@@ -8,6 +8,9 @@
 #ifndef _NET_ETHERNET_H_
 #define _NET_ETHERNET_H_
 
+/* Define the types u_char, u_short.  */
+#include <sys/types.h>
+
 /*
  * Somce basic Ethernet constants.
  */
@@ -62,6 +65,7 @@
 	u_char	ether_shost[ETHER_ADDR_LEN];
 	u_short	ether_type;
 };
+#define ether_addr_octet octet
 
 /*
  * Structure of a 48-bit Ethernet address.
@@ -363,19 +367,8 @@
 
 #else /* _KERNEL */
 
-#include <sys/cdefs.h>
-
-/*
- * Ethernet address conversion/parsing routines.
- */
-__BEGIN_DECLS
-struct	ether_addr *ether_aton(const char *);
-int	ether_hostton(const char *, struct ether_addr *);
-int	ether_line(const char *, struct ether_addr *, char *);
-char 	*ether_ntoa(const struct ether_addr *);
-int	ether_ntohost(char *, const struct ether_addr *);
-__END_DECLS
-
+/* The API functions are declared in <netinet/ether.h>.  */
+  
 #endif /* !_KERNEL */
 
 #endif /* !_NET_ETHERNET_H_ */
diff -ur sys.orig/net/if.h sys/net/if.h
--- sys.orig/net/if.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/net/if.h	2004-12-07 23:48:33.000000000 +0100
@@ -39,6 +39,11 @@
 #include <sys/queue.h>
 #endif
 
+#include <features.h>
+
+#include <sys/types.h>
+#include <sys/socket.h>
+
 #if __BSD_VISIBLE
 /*
  * <net/if.h> does not depend on <sys/time.h> on most other systems.  This
@@ -235,6 +240,7 @@
 		struct	sockaddr ifru_addr;
 		struct	sockaddr ifru_dstaddr;
 		struct	sockaddr ifru_broadaddr;
+		struct	sockaddr ifru_netmask;
 		short	ifru_flags[2];
 		short	ifru_index;
 		int	ifru_metric;
@@ -247,6 +253,7 @@
 #define	ifr_addr	ifr_ifru.ifru_addr	/* address */
 #define	ifr_dstaddr	ifr_ifru.ifru_dstaddr	/* other end of p-to-p link */
 #define	ifr_broadaddr	ifr_ifru.ifru_broadaddr	/* broadcast address */
+#define	ifr_netmask	ifr_ifru.ifru_netmask	/* interface net mask */
 #define	ifr_flags	ifr_ifru.ifru_flags[0]	/* flags (low 16 bits) */
 #define	ifr_flagshigh	ifr_ifru.ifru_flags[1]	/* flags (high 16 bits) */
 #define	ifr_metric	ifr_ifru.ifru_metric	/* metric */
diff -ur sys.orig/net/if_arp.h sys/net/if_arp.h
--- sys.orig/net/if_arp.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/net/if_arp.h	2004-12-07 23:48:33.000000000 +0100
@@ -33,6 +33,11 @@
 #ifndef _NET_IF_ARP_H_
 #define	_NET_IF_ARP_H_
 
+/* Define the types u_char, u_short.  */
+#include <sys/types.h>
+/* Define 'struct sockaddr'.  */
+#include <sys/socket.h>
+
 /*
  * Address Resolution Protocol.
  *
@@ -81,6 +86,15 @@
 	(sizeof(struct arphdr) + 2*(ar_hln) + 2*(ar_pln))
 #define arphdr_len(ap)	(arphdr_len2((ap)->ar_hln, (ap)->ar_pln))
 
+#define ar_sha(ap)	(((caddr_t)((ap)+1)) +   0)
+#define ar_spa(ap)	(((caddr_t)((ap)+1)) +   (ap)->ar_hln)
+#define ar_tha(ap)	(((caddr_t)((ap)+1)) +   (ap)->ar_hln + (ap)->ar_pln)
+#define ar_tpa(ap)	(((caddr_t)((ap)+1)) + 2*(ap)->ar_hln + (ap)->ar_pln)
+
+#define arphdr_len2(ar_hln, ar_pln)					\
+	(sizeof(struct arphdr) + 2*(ar_hln) + 2*(ar_pln))
+#define arphdr_len(ap)	(arphdr_len2((ap)->ar_hln, (ap)->ar_pln))
+
 /*
  * ARP ioctl request
  */
diff -ur sys.orig/net/if_dl.h sys/net/if_dl.h
--- sys.orig/net/if_dl.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/net/if_dl.h	2004-12-07 23:48:33.000000000 +0100
@@ -33,6 +33,10 @@
 #ifndef _NET_IF_DL_H_
 #define _NET_IF_DL_H_
 
+#include <features.h>
+
+#include <sys/types.h>
+
 /*
  * A Link-Level Sockaddr may specify the interface in one of two
  * ways: either by means of a system-provided index number (computed
@@ -68,15 +72,9 @@
 
 #define LLADDR(s) ((caddr_t)((s)->sdl_data + (s)->sdl_nlen))
 
-#ifndef _KERNEL
-
-#include <sys/cdefs.h>
-
 __BEGIN_DECLS
-void	link_addr(const char *, struct sockaddr_dl *);
-char	*link_ntoa(const struct sockaddr_dl *);
+extern void link_addr (const char *, struct sockaddr_dl *);
+extern char *link_ntoa (const struct sockaddr_dl *);
 __END_DECLS
 
-#endif /* !_KERNEL */
-
 #endif
diff -ur sys.orig/nfsclient/nfs.h sys/nfsclient/nfs.h
--- sys.orig/nfsclient/nfs.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/nfsclient/nfs.h	2004-12-07 23:48:35.000000000 +0100
@@ -36,6 +36,11 @@
 #ifndef _NFSCLIENT_NFS_H_
 #define _NFSCLIENT_NFS_H_
 
+#ifndef _KERNEL
+#include <sys/types.h>
+#include <sys/ucred.h>
+#include <nfs/rpcv2.h>
+#endif
 #ifdef _KERNEL
 #include "opt_nfs.h"
 #endif
diff -ur sys.orig/sys/acl.h sys/sys/acl.h
--- sys.orig/sys/acl.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/sys/acl.h	2004-12-07 23:48:37.000000000 +0100
@@ -35,6 +35,9 @@
 #ifndef _SYS_ACL_H_
 #define	_SYS_ACL_H_
 
+#include <features.h>
+#include <sys/types.h>
+
 /*
  * POSIX.1e ACL types and related constants.
  */
@@ -155,73 +158,75 @@
 #else /* !_KERNEL */
 
 /*
- * Syscall interface -- use the library calls instead as the syscalls
+ * Syscall interface, defined in libc.
+ * Use the libposix1e calls instead as the syscalls
  * have strict acl entry ordering requirements.
  */
 __BEGIN_DECLS
-int	__acl_aclcheck_fd(int _filedes, acl_type_t _type, struct acl *_aclp);
-int	__acl_aclcheck_file(const char *_path, acl_type_t _type,
-	    struct acl *_aclp);
-int	__acl_aclcheck_link(const char *_path, acl_type_t _type,
-	    struct acl *_aclp);
-int	__acl_delete_fd(int _filedes, acl_type_t _type);
-int	__acl_delete_file(const char *_path_p, acl_type_t _type);
-int	__acl_delete_link(const char *_path_p, acl_type_t _type);
-int	__acl_get_fd(int _filedes, acl_type_t _type, struct acl *_aclp);
-int	__acl_get_file(const char *_path, acl_type_t _type, struct acl *_aclp);
-int	__acl_get_link(const char *_path, acl_type_t _type, struct acl *_aclp);
-int	__acl_set_fd(int _filedes, acl_type_t _type, struct acl *_aclp);
-int	__acl_set_file(const char *_path, acl_type_t _type, struct acl *_aclp);
-int	__acl_set_link(const char *_path, acl_type_t _type, struct acl *_aclp);
+extern int	__acl_aclcheck_fd(int _filedes, acl_type_t _type, struct acl *_aclp) __THROW;
+extern int	__acl_aclcheck_file(const char *_path, acl_type_t _type,
+	    struct acl *_aclp) __THROW;
+extern int	__acl_aclcheck_link(const char *_path, acl_type_t _type,
+	    struct acl *_aclp) __THROW;
+extern int	__acl_delete_fd(int _filedes, acl_type_t _type) __THROW;
+extern int	__acl_delete_file(const char *_path_p, acl_type_t _type) __THROW;
+extern int	__acl_delete_link(const char *_path_p, acl_type_t _type) __THROW;
+extern int	__acl_get_fd(int _filedes, acl_type_t _type, struct acl *_aclp) __THROW;
+extern int	__acl_get_file(const char *_path, acl_type_t _type, struct acl *_aclp) __THROW;
+extern int	__acl_get_link(const char *_path, acl_type_t _type, struct acl *_aclp) __THROW;
+extern int	__acl_set_fd(int _filedes, acl_type_t _type, struct acl *_aclp) __THROW;
+extern int	__acl_set_file(const char *_path, acl_type_t _type, struct acl *_aclp) __THROW;
+extern int	__acl_set_link(const char *_path, acl_type_t _type, struct acl *_aclp) __THROW;
 __END_DECLS
 
 /*
  * Supported POSIX.1e ACL manipulation and assignment/retrieval API
+ * (defined in libposix1e)
  * _np calls are local extensions that reflect an environment capable of
  * opening file descriptors of directories, and allowing additional
  * ACL type for different filesystems (i.e., AFS).
  */
 __BEGIN_DECLS
-int	acl_add_perm(acl_permset_t _permset_d, acl_perm_t _perm);
-int	acl_calc_mask(acl_t *_acl_p);
-int	acl_clear_perms(acl_permset_t _permset_d);
-int	acl_copy_entry(acl_entry_t _dest_d, acl_entry_t _src_d);
-ssize_t	acl_copy_ext(void *_buf_p, acl_t _acl, ssize_t _size);
-acl_t	acl_copy_int(const void *_buf_p);
-int	acl_create_entry(acl_t *_acl_p, acl_entry_t *_entry_p);
-int	acl_delete_entry(acl_t _acl, acl_entry_t _entry_d);
-int	acl_delete_fd_np(int _filedes, acl_type_t _type);
-int	acl_delete_file_np(const char *_path_p, acl_type_t _type);
-int	acl_delete_link_np(const char *_path_p, acl_type_t _type);
-int	acl_delete_def_file(const char *_path_p);
-int	acl_delete_def_link_np(const char *_path_p);
-int	acl_delete_perm(acl_permset_t _permset_d, acl_perm_t _perm);
-acl_t	acl_dup(acl_t _acl);
-int	acl_free(void *_obj_p);
-acl_t	acl_from_text(const char *_buf_p);
-int	acl_get_entry(acl_t _acl, int _entry_id, acl_entry_t *_entry_p);
-acl_t	acl_get_fd(int _fd);
-acl_t	acl_get_fd_np(int fd, acl_type_t _type);
-acl_t	acl_get_file(const char *_path_p, acl_type_t _type);
-acl_t	acl_get_link_np(const char *_path_p, acl_type_t _type);
-void	*acl_get_qualifier(acl_entry_t _entry_d);
-int	acl_get_perm_np(acl_permset_t _permset_d, acl_perm_t _perm);
-int	acl_get_permset(acl_entry_t _entry_d, acl_permset_t *_permset_p);
-int	acl_get_tag_type(acl_entry_t _entry_d, acl_tag_t *_tag_type_p);
-acl_t	acl_init(int _count);
-int	acl_set_fd(int _fd, acl_t _acl);
-int	acl_set_fd_np(int _fd, acl_t _acl, acl_type_t _type);
-int	acl_set_file(const char *_path_p, acl_type_t _type, acl_t _acl);
-int	acl_set_link_np(const char *_path_p, acl_type_t _type, acl_t _acl);
-int	acl_set_permset(acl_entry_t _entry_d, acl_permset_t _permset_d);
-int	acl_set_qualifier(acl_entry_t _entry_d, const void *_tag_qualifier_p);
-int	acl_set_tag_type(acl_entry_t _entry_d, acl_tag_t _tag_type);
-ssize_t	acl_size(acl_t _acl);
-char	*acl_to_text(acl_t _acl, ssize_t *_len_p);
-int	acl_valid(acl_t _acl);
-int	acl_valid_fd_np(int _fd, acl_type_t _type, acl_t _acl);
-int	acl_valid_file_np(const char *_path_p, acl_type_t _type, acl_t _acl);
-int	acl_valid_link_np(const char *_path_p, acl_type_t _type, acl_t _acl);
+extern int	acl_add_perm(acl_permset_t _permset_d, acl_perm_t _perm) __THROW;
+extern int	acl_calc_mask(acl_t *_acl_p) __THROW;
+extern int	acl_clear_perms(acl_permset_t _permset_d) __THROW;
+extern int	acl_copy_entry(acl_entry_t _dest_d, acl_entry_t _src_d) __THROW;
+extern ssize_t	acl_copy_ext(void *_buf_p, acl_t _acl, ssize_t _size) __THROW;
+extern acl_t	acl_copy_int(const void *_buf_p) __THROW;
+extern int	acl_create_entry(acl_t *_acl_p, acl_entry_t *_entry_p) __THROW;
+extern int	acl_delete_entry(acl_t _acl, acl_entry_t _entry_d) __THROW;
+extern int	acl_delete_fd_np(int _filedes, acl_type_t _type) __THROW;
+extern int	acl_delete_file_np(const char *_path_p, acl_type_t _type) __THROW;
+extern int	acl_delete_link_np(const char *_path_p, acl_type_t _type) __THROW;
+extern int	acl_delete_def_file(const char *_path_p) __THROW;
+extern int	acl_delete_def_link_np(const char *_path_p) __THROW;
+extern int	acl_delete_perm(acl_permset_t _permset_d, acl_perm_t _perm) __THROW;
+extern acl_t	acl_dup(acl_t _acl) __THROW;
+extern int	acl_free(void *_obj_p) __THROW;
+extern acl_t	acl_from_text(const char *_buf_p) __THROW;
+extern int	acl_get_entry(acl_t _acl, int _entry_id, acl_entry_t *_entry_p) __THROW;
+extern acl_t	acl_get_fd(int _fd) __THROW;
+extern acl_t	acl_get_fd_np(int fd, acl_type_t _type) __THROW;
+extern acl_t	acl_get_file(const char *_path_p, acl_type_t _type) __THROW;
+extern acl_t	acl_get_link_np(const char *_path_p, acl_type_t _type) __THROW;
+extern void	*acl_get_qualifier(acl_entry_t _entry_d) __THROW;
+extern int	acl_get_perm_np(acl_permset_t _permset_d, acl_perm_t _perm) __THROW;
+extern int	acl_get_permset(acl_entry_t _entry_d, acl_permset_t *_permset_p) __THROW;
+extern int	acl_get_tag_type(acl_entry_t _entry_d, acl_tag_t *_tag_type_p) __THROW;
+extern acl_t	acl_init(int _count) __THROW;
+extern int	acl_set_fd(int _fd, acl_t _acl) __THROW;
+extern int	acl_set_fd_np(int _fd, acl_t _acl, acl_type_t _type) __THROW;
+extern int	acl_set_file(const char *_path_p, acl_type_t _type, acl_t _acl) __THROW;
+extern int	acl_set_link_np(const char *_path_p, acl_type_t _type, acl_t _acl) __THROW;
+extern int	acl_set_permset(acl_entry_t _entry_d, acl_permset_t _permset_d) __THROW;
+extern int	acl_set_qualifier(acl_entry_t _entry_d, const void *_tag_qualifier_p) __THROW;
+extern int	acl_set_tag_type(acl_entry_t _entry_d, acl_tag_t _tag_type) __THROW;
+extern ssize_t	acl_size(acl_t _acl) __THROW;
+extern char	*acl_to_text(acl_t _acl, ssize_t *_len_p) __THROW;
+extern int	acl_valid(acl_t _acl) __THROW;
+extern int	acl_valid_fd_np(int _fd, acl_type_t _type, acl_t _acl) __THROW;
+extern int	acl_valid_file_np(const char *_path_p, acl_type_t _type, acl_t _acl) __THROW;
+extern int	acl_valid_link_np(const char *_path_p, acl_type_t _type, acl_t _acl) __THROW;
 __END_DECLS
 
 #endif /* !_KERNEL */
diff -ur sys.orig/sys/callout.h sys/sys/callout.h
--- sys.orig/sys/callout.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/sys/callout.h	2004-12-07 23:48:37.000000000 +0100
@@ -38,6 +38,8 @@
 #ifndef _SYS_CALLOUT_H_
 #define _SYS_CALLOUT_H_
 
+#include <features.h>
+
 #include <sys/queue.h>
 
 SLIST_HEAD(callout_list, callout);
diff -ur sys.orig/sys/dvdio.h sys/sys/dvdio.h
--- sys.orig/sys/dvdio.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/sys/dvdio.h	2004-12-07 23:48:37.000000000 +0100
@@ -31,6 +31,8 @@
 #ifndef _SYS_DVDIO_H_
 #define _SYS_DVDIO_H_
 
+#include <sys/types.h>
+
 struct dvd_layer {
 	u_int8_t book_type	:4;
 	u_int8_t book_version	:4;
diff -ur sys.orig/sys/extattr.h sys/sys/extattr.h
--- sys.orig/sys/extattr.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/sys/extattr.h	2004-12-07 23:48:37.000000000 +0100
@@ -50,36 +50,36 @@
 	    struct ucred *cred, struct thread *td, int access);
 
 #else
-#include <sys/cdefs.h>
+#include <features.h>
 
 struct iovec;
 
 __BEGIN_DECLS
-int	extattrctl(const char *_path, int _cmd, const char *_filename,
-	    int _attrnamespace, const char *_attrname);
-int	extattr_delete_fd(int _fd, int _attrnamespace, const char *_attrname);
-int	extattr_delete_file(const char *_path, int _attrnamespace,
-	    const char *_attrname);
-int	extattr_delete_link(const char *_path, int _attrnamespace,
-	    const char *_attrname);
-ssize_t	extattr_get_fd(int _fd, int _attrnamespace, const char *_attrname,
-	    void *_data, size_t _nbytes);
-ssize_t	extattr_get_file(const char *_path, int _attrnamespace,
-	    const char *_attrname, void *_data, size_t _nbytes);
-ssize_t	extattr_get_link(const char *_path, int _attrnamespace,
-	    const char *_attrname, void *_data, size_t _nbytes);
-ssize_t	extattr_list_fd(int _fd, int _attrnamespace, void *_data,
-	    size_t _nbytes);
-ssize_t	extattr_list_file(const char *_path, int _attrnamespace, void *_data,
-	    size_t _nbytes);
-ssize_t	extattr_list_link(const char *_path, int _attrnamespace, void *_data,
-	    size_t _nbytes);
-int	extattr_set_fd(int _fd, int _attrnamespace, const char *_attrname,
-	    const void *_data, size_t _nbytes);
-int	extattr_set_file(const char *_path, int _attrnamespace,
-	    const char *_attrname, const void *_data, size_t _nbytes);
-int	extattr_set_link(const char *_path, int _attrnamespace,
-	    const char *_attrname, const void *_data, size_t _nbytes);
+extern int	extattrctl(const char *_path, int _cmd, const char *_filename,
+	    int _attrnamespace, const char *_attrname) __THROW;
+extern int	extattr_delete_fd(int _fd, int _attrnamespace, const char *_attrname) __THROW;
+extern int	extattr_delete_file(const char *_path, int _attrnamespace,
+	    const char *_attrname) __THROW;
+extern int	extattr_delete_link(const char *_path, int _attrnamespace,
+	    const char *_attrname) __THROW;
+extern ssize_t	extattr_get_fd(int _fd, int _attrnamespace, const char *_attrname,
+	    void *_data, size_t _nbytes) __THROW;
+extern ssize_t	extattr_get_file(const char *_path, int _attrnamespace,
+	    const char *_attrname, void *_data, size_t _nbytes) __THROW;
+extern ssize_t	extattr_get_link(const char *_path, int _attrnamespace,
+	    const char *_attrname, void *_data, size_t _nbytes) __THROW;
+extern ssize_t	extattr_list_fd(int _fd, int _attrnamespace, void *_data,
+	    size_t _nbytes) __THROW;
+extern ssize_t	extattr_list_file(const char *_path, int _attrnamespace, void *_data,
+	    size_t _nbytes) __THROW;
+extern ssize_t	extattr_list_link(const char *_path, int _attrnamespace, void *_data,
+	    size_t _nbytes) __THROW;
+extern int	extattr_set_fd(int _fd, int _attrnamespace, const char *_attrname,
+	    const void *_data, size_t _nbytes) __THROW;
+extern int	extattr_set_file(const char *_path, int _attrnamespace,
+	    const char *_attrname, const void *_data, size_t _nbytes) __THROW;
+extern int	extattr_set_link(const char *_path, int _attrnamespace,
+	    const char *_attrname, const void *_data, size_t _nbytes) __THROW;
 __END_DECLS
 
 #endif /* !_KERNEL */
diff -ur sys.orig/sys/filedesc.h sys/sys/filedesc.h
--- sys.orig/sys/filedesc.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/sys/filedesc.h	2004-12-07 23:48:37.000000000 +0100
@@ -33,6 +33,7 @@
 #ifndef _SYS_FILEDESC_H_
 #define	_SYS_FILEDESC_H_
 
+#include <sys/types.h>
 #include <sys/queue.h>
 #include <sys/event.h>
 #include <sys/_lock.h>
diff -ur sys.orig/sys/jail.h sys/sys/jail.h
--- sys.orig/sys/jail.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/sys/jail.h	2004-12-07 23:48:37.000000000 +0100
@@ -13,6 +13,10 @@
 #ifndef _SYS_JAIL_H_
 #define _SYS_JAIL_H_
 
+#include <features.h>
+
+#include <sys/types.h>
+
 struct jail {
 	u_int32_t	version;
 	char		*path;
@@ -31,8 +35,10 @@
 
 #ifndef _KERNEL
 
-int jail(struct jail *);
-int jail_attach(int);
+__BEGIN_DECLS
+extern int jail(struct jail *) __THROW;
+extern int jail_attach(int) __THROW;
+__END_DECLS
 
 #else /* _KERNEL */
 
diff -ur sys.orig/sys/linker.h sys/sys/linker.h
--- sys.orig/sys/linker.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/sys/linker.h	2004-12-07 23:48:37.000000000 +0100
@@ -172,6 +172,13 @@
 int linker_ddb_symbol_values(c_linker_sym_t _sym, linker_symval_t *_symval);
 
 
+#else
+
+#include <features.h>
+
+#include <sys/param.h>
+#include <sys/types.h>
+
 #endif	/* _KERNEL */
 
 /*
@@ -268,13 +275,19 @@
     size_t	size;		/* size in bytes */
 };
 
+/* Possible commands for kldsym.  */
+enum
+{
+  KLDSYM_LOOKUP = 1		/* Kernel symbol lookup.  */
+#define KLDSYM_LOOKUP KLDSYM_LOOKUP
+};
+
 struct kld_sym_lookup {
     int		version;	/* set to sizeof(struct kld_sym_lookup) */
     char	*symname;	/* Symbol name we are looking up */
     u_long	symvalue;
     size_t	symsize;
 };
-#define KLDSYM_LOOKUP	1
 
 /*
  * Flags for kldunloadf() and linker_file_unload()
@@ -287,14 +300,13 @@
 #include <sys/cdefs.h>
 
 __BEGIN_DECLS
-int	kldload(const char* _file);
-int	kldunload(int _fileid);
-int	kldunloadf(int _fileid, int flags);
-int	kldfind(const char* _file);
-int	kldnext(int _fileid);
-int	kldstat(int _fileid, struct kld_file_stat* _stat);
-int	kldfirstmod(int _fileid);
-int	kldsym(int _fileid, int _cmd, void *_data);
+extern int kldload (__const char *__file) __THROW;
+extern int kldunload (int __fileid) __THROW;
+extern int kldfind (__const char *__file) __THROW;
+extern int kldnext (int __fileid) __THROW;
+extern int kldstat (int __fileid, struct kld_file_stat *__statp) __THROW;
+extern int kldfirstmod (int __fileid) __THROW;
+extern int kldsym (int __fileid, int __cmd, void*__data) __THROW;
 __END_DECLS
 
 #endif
diff -ur sys.orig/sys/lock.h sys/sys/lock.h
--- sys.orig/sys/lock.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/sys/lock.h	2004-12-07 23:48:37.000000000 +0100
@@ -32,6 +32,7 @@
 #ifndef _SYS_LOCK_H_
 #define _SYS_LOCK_H_
 
+#include <sys/types.h>
 #include <sys/queue.h>
 #include <sys/_lock.h>
 
diff -ur sys.orig/sys/memrange.h sys/sys/memrange.h
--- sys.orig/sys/memrange.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/sys/memrange.h	2004-12-07 23:48:37.000000000 +0100
@@ -4,6 +4,11 @@
  * $FreeBSD: sys/sys/memrange.h,v 1.7 2004/08/04 18:30:31 markm Exp $
  */
 
+#ifndef _SYS_MEMRANGE_H_
+#define _SYS_MEMRANGE_H_
+
+#include <sys/types.h>
+
 /* Memory range attributes */
 #define MDF_UNCACHEABLE		(1<<0)	/* region not cached */
 #define MDF_WRITECOMBINE	(1<<1)	/* region supports "write combine" action */
@@ -69,3 +74,4 @@
 
 #endif
 
+#endif /* _SYS_MEMRANGE_H_ */
diff -ur sys.orig/sys/param.h sys/sys/param.h
--- sys.orig/sys/param.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/sys/param.h	2004-12-07 23:48:37.000000000 +0100
@@ -38,7 +38,9 @@
 #ifndef _SYS_PARAM_H_
 #define _SYS_PARAM_H_
 
-#include <sys/_null.h>
+#ifndef NULL
+#define NULL 0
+#endif
 
 #define	BSD	199506		/* System version (year & month). */
 #define BSD4_3	1
@@ -57,9 +59,8 @@
 #undef __FreeBSD_version
 #define __FreeBSD_version 503001	/* Master, propagated to newvers */
 
-#ifndef LOCORE
+/* Some inet code expects that this file defines the 'u_int32_t' type.  */
 #include <sys/types.h>
-#endif
 
 /*
  * Machine-independent constants (some used in following include files).
@@ -69,6 +70,7 @@
  * MAXLOGNAME should be == UT_NAMESIZE+1 (see <utmp.h>)
  */
 #include <sys/syslimits.h>
+#include <limits.h>
 
 #define	MAXCOMLEN	19		/* max command name remembered */
 #define	MAXINTERP	32		/* max interpreter file name length */
@@ -179,8 +181,6 @@
 #define	PCATCH	0x100		/* OR'd with pri for tsleep to check signals */
 #define	PDROP	0x200	/* OR'd with pri to stop re-entry of interlock mutex */
 
-#define	NZERO	0		/* default "nice" */
-
 #define	NBBY	8		/* number of bits in a byte */
 #define	NBPW	sizeof(int)	/* number of bytes per word (integer) */
 
@@ -278,28 +278,6 @@
 #endif /* _KERNEL */
 
 /*
- * Constants for setting the parameters of the kernel memory allocator.
- *
- * 2 ** MINBUCKET is the smallest unit of memory that will be
- * allocated. It must be at least large enough to hold a pointer.
- *
- * Units of memory less or equal to MAXALLOCSAVE will permanently
- * allocate physical memory; requests for these size pieces of
- * memory are quite fast. Allocations greater than MAXALLOCSAVE must
- * always allocate and free physical memory; requests for these
- * size allocations should be done infrequently as they will be slow.
- *
- * Constraints: PAGE_SIZE <= MAXALLOCSAVE <= 2 ** (MINBUCKET + 14), and
- * MAXALLOCSIZE must be a power of two.
- */
-#if defined(__alpha__) || defined(__ia64__) || defined(__sparc64__)
-#define MINBUCKET	5		/* 5 => min allocation of 32 bytes */
-#else
-#define MINBUCKET	4		/* 4 => min allocation of 16 bytes */
-#endif
-#define MAXALLOCSAVE	(2 * PAGE_SIZE)
-
-/*
  * Scale factor for scaled integers used to count %cpu time and load avgs.
  *
  * The number of CPU `tick's that map to a unique `%age' can be expressed
diff -ur sys.orig/sys/pciio.h sys/sys/pciio.h
--- sys.orig/sys/pciio.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/sys/pciio.h	2004-12-07 23:48:37.000000000 +0100
@@ -31,6 +31,7 @@
 #ifndef _SYS_PCIIO_H_
 #define	_SYS_PCIIO_H_
 
+#include <sys/types.h>
 #include <sys/ioccom.h>
 
 #define PCI_MAXNAMELEN	16
diff -ur sys.orig/sys/proc.h sys/sys/proc.h
--- sys.orig/sys/proc.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/sys/proc.h	2004-12-07 23:48:37.000000000 +0100
@@ -58,6 +58,7 @@
 #endif
 #include <sys/ucontext.h>
 #include <sys/ucred.h>
+
 #include <machine/proc.h>		/* Machine-dependent proc substruct. */
 
 /*
diff -ur sys.orig/sys/procfs.h sys/sys/procfs.h
--- sys.orig/sys/procfs.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/sys/procfs.h	2004-12-07 23:48:37.000000000 +0100
@@ -82,4 +82,8 @@
 
 typedef void *psaddr_t;		/* An address in the target process. */
 
+/* We don't have any differences between processes and threads,
+   therefore have only one PID type.  */
+typedef __pid_t lwpid_t;
+
 #endif /* _SYS_PROCFS_H_ */
diff -ur sys.orig/sys/reboot.h sys/sys/reboot.h
--- sys.orig/sys/reboot.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/sys/reboot.h	2004-12-07 23:48:38.000000000 +0100
@@ -33,6 +33,8 @@
 #ifndef _SYS_REBOOT_H_
 #define	_SYS_REBOOT_H_
 
+#include <features.h>
+
 /*
  * Arguments to reboot system call.  These are passed to
  * the boot program and on to init.
@@ -64,4 +66,11 @@
 
 #define	RB_BOOTINFO	0x80000000	/* have `struct bootinfo *' arg */
 
+__BEGIN_DECLS
+
+/* Reboot or halt the system.  */
+extern int reboot (int __howto) __THROW;
+
+__END_DECLS
+
 #endif
diff -ur sys.orig/sys/resourcevar.h sys/sys/resourcevar.h
--- sys.orig/sys/resourcevar.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/sys/resourcevar.h	2004-12-07 23:48:38.000000000 +0100
@@ -35,6 +35,8 @@
 
 #include <sys/resource.h>
 #include <sys/queue.h>
+#include <sys/time.h>
+#include <sys/types.h>
 #ifdef _KERNEL
 #include <sys/_lock.h>
 #include <sys/_mutex.h>
diff -ur sys.orig/sys/rtprio.h sys/sys/rtprio.h
--- sys.orig/sys/rtprio.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/sys/rtprio.h	2004-12-07 23:48:38.000000000 +0100
@@ -36,6 +36,10 @@
 
 #include <sys/priority.h>
 
+#include <features.h>
+
+#include <sys/types.h>
+
 /*
  * Process realtime-priority specifications to rtprio.
  */
@@ -65,7 +69,6 @@
 #define RTP_LOOKUP		0
 #define RTP_SET			1
 
-#ifndef LOCORE
 /*
  * Scheduling class information.
  */
@@ -79,13 +82,15 @@
 int	rtp_to_pri(struct rtprio *, struct ksegrp *);
 void	pri_to_rtp(struct ksegrp *, struct rtprio *);
 #endif
-#endif
 
 #ifndef _KERNEL
 #include <sys/cdefs.h>
 
 __BEGIN_DECLS
-int	rtprio(int, pid_t, struct rtprio *);
+extern int	rtprio(int, pid_t, struct rtprio *) __THROW;
+#ifdef _LIBC
+extern int	__rtprio(int, pid_t, struct rtprio *);
+#endif
 __END_DECLS
 #endif	/* !_KERNEL */
 #endif	/* !_SYS_RTPRIO_H_ */
diff -ur sys.orig/sys/signalvar.h sys/sys/signalvar.h
--- sys.orig/sys/signalvar.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/sys/signalvar.h	2004-12-07 23:48:38.000000000 +0100
@@ -43,6 +43,9 @@
  * not exported to user programs.
  */
 
+#define	_SIG_WORDS	4
+#define	_SIG_MAXSIG	128
+
 /*
  * Logical process signal actions and state, needed only within the process
  * The mapping between sigacts and proc structures is 1:1 except for rfork()
@@ -95,10 +98,14 @@
 typedef void __osiginfohandler_t(int, osiginfo_t *, void *);
 #endif /* _KERNEL && COMPAT_43 */
 
+#endif
+
 /* additional signal action values, used only temporarily/internally */
 #define	SIG_CATCH	((__sighandler_t *)2)
 #define SIG_HOLD        ((__sighandler_t *)3)
 
+#if 0
+
 /*
  * get signal action for process and signal; currently only for current process
  */
@@ -181,7 +188,7 @@
 	int i;
 
 	for (i = 0; i < _SIG_WORDS; i++) {
-		if (set->__bits[i])
+		if (set->__sigbits[i])
 			return (0);
 	}
 	return (1);
@@ -193,7 +200,7 @@
 	int i;
 
 	for (i = 0; i < _SIG_WORDS; i++) {
-		if (set1->__bits[i] != set2->__bits[i])
+		if (set1->__sigbits[i] != set2->__sigbits[i])
 			return (0);
 	}
 	return (1);
diff -ur sys.orig/sys/sysctl.h sys/sys/sysctl.h
--- sys.orig/sys/sysctl.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/sys/sysctl.h	2004-12-07 23:48:38.000000000 +0100
@@ -36,7 +36,103 @@
 #ifndef _SYS_SYSCTL_H_
 #define	_SYS_SYSCTL_H_
 
-#include <sys/queue.h>
+#include <features.h>
+#include <vm/vm_param.h>
+
+/****************************************  Stolen from sys/mount.h */
+
+/*
+ * Sysctl CTL_VFS definitions.
+ *
+ * Second level identifier specifies which filesystem. Second level
+ * identifier VFS_VFSCONF returns information about all filesystems.
+ * Second level identifier VFS_GENERIC is non-terminal.
+ */
+#define	VFS_VFSCONF		0	/* get configured filesystems */
+#define	VFS_GENERIC		0	/* generic filesystem information */
+/*
+ * Third level identifiers for VFS_GENERIC are given below; third
+ * level identifiers for specific filesystems are given in their
+ * mount specific header files.
+ */
+#define VFS_MAXTYPENUM	1	/* int: highest defined filesystem type */
+#define VFS_CONF	2	/* struct: vfsconf for filesystem given
+				   as next argument */
+
+/****************************************  End of sys/mount.h */
+
+/****************************************  Stolen from sys/socket.h */
+/*
+ * Definitions for network related sysctl, CTL_NET.
+ *
+ * Second level is protocol family.
+ * Third level is protocol number.
+ *
+ * Further levels are defined by the individual families below.
+ */
+#define NET_MAXID	AF_MAX
+
+#define CTL_NET_NAMES { \
+	{ 0, 0 }, \
+	{ "unix", CTLTYPE_NODE }, \
+	{ "inet", CTLTYPE_NODE }, \
+	{ "implink", CTLTYPE_NODE }, \
+	{ "pup", CTLTYPE_NODE }, \
+	{ "chaos", CTLTYPE_NODE }, \
+	{ "xerox_ns", CTLTYPE_NODE }, \
+	{ "iso", CTLTYPE_NODE }, \
+	{ "emca", CTLTYPE_NODE }, \
+	{ "datakit", CTLTYPE_NODE }, \
+	{ "ccitt", CTLTYPE_NODE }, \
+	{ "ibm_sna", CTLTYPE_NODE }, \
+	{ "decnet", CTLTYPE_NODE }, \
+	{ "dec_dli", CTLTYPE_NODE }, \
+	{ "lat", CTLTYPE_NODE }, \
+	{ "hylink", CTLTYPE_NODE }, \
+	{ "appletalk", CTLTYPE_NODE }, \
+	{ "route", CTLTYPE_NODE }, \
+	{ "link_layer", CTLTYPE_NODE }, \
+	{ "xtp", CTLTYPE_NODE }, \
+	{ "coip", CTLTYPE_NODE }, \
+	{ "cnt", CTLTYPE_NODE }, \
+	{ "rtip", CTLTYPE_NODE }, \
+	{ "ipx", CTLTYPE_NODE }, \
+	{ "sip", CTLTYPE_NODE }, \
+	{ "pip", CTLTYPE_NODE }, \
+	{ "isdn", CTLTYPE_NODE }, \
+	{ "key", CTLTYPE_NODE }, \
+	{ "inet6", CTLTYPE_NODE }, \
+	{ "natm", CTLTYPE_NODE }, \
+	{ "atm", CTLTYPE_NODE }, \
+	{ "hdrcomplete", CTLTYPE_NODE }, \
+	{ "netgraph", CTLTYPE_NODE }, \
+	{ "snp", CTLTYPE_NODE }, \
+	{ "scp", CTLTYPE_NODE }, \
+}
+
+/*
+ * PF_ROUTE - Routing table
+ *
+ * Three additional levels are defined:
+ *	Fourth: address family, 0 is wildcard
+ *	Fifth: type of info, defined below
+ *	Sixth: flag(s) to mask with for NET_RT_FLAGS
+ */
+#define NET_RT_DUMP	1		/* dump; may limit to a.f. */
+#define NET_RT_FLAGS	2		/* by flags, e.g. RESOLVING */
+#define NET_RT_IFLIST	3		/* survey interface list */
+#define	NET_RT_IFMALIST	4		/* return multicast address list */
+#define	NET_RT_MAXID	5
+
+#define CTL_NET_RT_NAMES { \
+	{ 0, 0 }, \
+	{ "dump", CTLTYPE_STRUCT }, \
+	{ "flags", CTLTYPE_STRUCT }, \
+	{ "iflist", CTLTYPE_STRUCT }, \
+	{ "ifmalist", CTLTYPE_STRUCT }, \
+}
+/****************************************  End of sys/socket.h */
+
 
 struct thread;
 /*
@@ -336,7 +432,7 @@
 #define	KERN_SECURELVL	 	 9	/* int: system security level */
 #define	KERN_HOSTNAME		10	/* string: hostname */
 #define	KERN_HOSTID		11	/* int: host identifier */
-#define	KERN_CLOCKRATE		12	/* struct: struct clockrate */
+#define	KERN_CLOCKRATE		12	/* struct: struct clockinfo */
 #define	KERN_VNODE		13	/* struct: vnode structures */
 #define	KERN_PROC		14	/* struct: process entries */
 #define	KERN_FILE		15	/* struct: file entries */
@@ -629,13 +725,19 @@
 int	sysctl_wire_old_buffer(struct sysctl_req *req, size_t len);
 
 #else	/* !_KERNEL */
-#include <sys/cdefs.h>
+#define __need_size_t
+#include <stddef.h>
 
 __BEGIN_DECLS
-int	sysctl(int *, u_int, void *, size_t *, void *, size_t);
-int	sysctlbyname(const char *, void *, size_t *, void *, size_t);
-int	sysctlnametomib(const char *, int *, size_t *);
+extern int	sysctl(int *, u_int, void *, size_t *, void *, size_t) __THROW;
+extern int	sysctlbyname(const char *, void *, size_t *, void *, size_t) __THROW;
+#ifdef _LIBC
+extern int __sysctlbyname (const char *__name,
+			   void *__oldval, size_t *__oldlenp,
+			   void *__newval, size_t __newlen) __THROW;
+#endif
 __END_DECLS
+
 #endif	/* _KERNEL */
 
 #endif	/* !_SYS_SYSCTL_H_ */
diff -ur sys.orig/sys/syslimits.h sys/sys/syslimits.h
--- sys.orig/sys/syslimits.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/sys/syslimits.h	2004-12-07 23:48:38.000000000 +0100
@@ -51,7 +51,9 @@
 #define	MAX_CANON		  255	/* max bytes in term canon input line */
 #define	MAX_INPUT		  255	/* max bytes in terminal input */
 #define	NAME_MAX		  255	/* max bytes in a file name */
+#ifndef NGROUPS_MAX
 #define	NGROUPS_MAX		   16	/* max supplemental group id's */
+#endif
 #ifndef OPEN_MAX
 #define	OPEN_MAX		   64	/* max open files per process */
 #endif
diff -ur sys.orig/sys/timepps.h sys/sys/timepps.h
--- sys.orig/sys/timepps.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/sys/timepps.h	2004-12-07 23:48:38.000000000 +0100
@@ -15,6 +15,8 @@
 #ifndef _SYS_TIMEPPS_H_
 #define _SYS_TIMEPPS_H_
 
+#include <stddef.h>
+#include <sys/time.h>
 #include <sys/ioccom.h>
 #include <sys/time.h>
 
diff -ur sys.orig/sys/timex.h sys/sys/timex.h
--- sys.orig/sys/timex.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/sys/timex.h	2004-12-07 23:48:38.000000000 +0100
@@ -94,11 +94,9 @@
  */
 #ifndef _SYS_TIMEX_H_
 #define _SYS_TIMEX_H_ 1
-#define NTP_API		4	/* NTP API version */
 
-#ifndef MSDOS			/* Microsoft specific */
-#include <sys/syscall.h>
-#endif /* MSDOS */
+#include <features.h>
+#include <time.h>
 
 /*
  * The following defines establish the performance envelope of the
@@ -175,7 +173,13 @@
  * Note: The time member is in microseconds if STA_NANO is zero and
  * nanoseconds if not.
  */
-struct ntptimeval {
+struct ntptimeval3 {
+	struct timespec time;	/* current time (ns) (ro) */
+	long maxerror;		/* maximum error (us) (ro) */
+	long esterror;		/* estimated error (us) (ro) */
+	int time_state;		/* time status */
+};
+struct ntptimeval4 {
 	struct timespec time;	/* current time (ns) (ro) */
 	long maxerror;		/* maximum error (us) (ro) */
 	long esterror;		/* estimated error (us) (ro) */
@@ -224,9 +228,12 @@
 #else /* !_KERNEL */
 #include <sys/cdefs.h>
 
+#define NTP_API		4	/* NTP API version */
+#define ntptimeval	ntptimeval4
+
 __BEGIN_DECLS
-int	ntp_adjtime(struct timex *);
-int	ntp_gettime(struct ntptimeval *);
+extern int	ntp_adjtime(struct timex *) __THROW;
+extern int	ntp_gettime(struct ntptimeval *) __THROW;
 __END_DECLS
 #endif /* _KERNEL */
 
diff -ur sys.orig/sys/ucred.h sys/sys/ucred.h
--- sys.orig/sys/ucred.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/sys/ucred.h	2004-12-07 23:48:38.000000000 +0100
@@ -33,6 +33,9 @@
 #ifndef _SYS_UCRED_H_
 #define	_SYS_UCRED_H_
 
+#include <sys/types.h>
+#include <sys/param.h>
+
 /*
  * Credentials.
  *
diff -ur sys.orig/sys/xrpuio.h sys/sys/xrpuio.h
--- sys.orig/sys/xrpuio.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/sys/xrpuio.h	2004-12-07 23:48:38.000000000 +0100
@@ -13,6 +13,7 @@
 #ifndef _SYS_XRPUIO_H_
 #define _SYS_XRPUIO_H_
 
+#include <sys/types.h>
 #include <sys/ioccom.h>
 
 #define XRPU_MAX_PPS	16
diff -ur sys.orig/vm/vm.h sys/vm/vm.h
--- sys.orig/vm/vm.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/vm/vm.h	2004-12-07 23:48:38.000000000 +0100
@@ -61,6 +61,8 @@
 #ifndef VM_H
 #define VM_H
 
+#include <sys/types.h>
+
 typedef char vm_inherit_t;	/* inheritance codes */
 
 #define	VM_INHERIT_SHARE	((vm_inherit_t) 0)
diff -ur sys.orig/vm/vm_map.h sys/vm/vm_map.h
--- sys.orig/vm/vm_map.h	2004-12-07 23:50:18.000000000 +0100
+++ sys/vm/vm_map.h	2004-12-07 23:48:38.000000000 +0100
@@ -70,6 +70,12 @@
 #include <sys/sx.h>
 #include <sys/_mutex.h>
 
+#include <sys/types.h>
+
+#include <machine/pmap.h>
+#include <vm/vm.h>
+#include <sys/lock.h>
+
 /*
  *	Types defined:
  *
