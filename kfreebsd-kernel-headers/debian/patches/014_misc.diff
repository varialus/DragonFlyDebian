--- a/sys/i386/include/cpufunc.h
+++ b/sys/i386/include/cpufunc.h
@@ -42,6 +42,8 @@
 
 #include <sys/types.h>
 
+#include <stdint.h>
+
 #ifndef _SYS_CDEFS_H_
 #error this file needs sys/cdefs.h as a prerequisite
 #endif
@@ -697,11 +699,6 @@
 void	enable_intr(void);
 void	halt(void);
 void	ia32_pause(void);
-unsigned char	inb(unsigned int port);
-unsigned int	inl(unsigned int port);
-void	insb(unsigned int port, void *addr, size_t count);
-void	insl(unsigned int port, void *addr, size_t count);
-void	insw(unsigned int port, void *addr, size_t count);
 register_t	intr_disable(void);
 void	intr_restore(register_t ef);
 void	invd(void);
@@ -724,12 +721,6 @@
 void	load_fs(unsigned short sel);
 void	load_gs(unsigned short sel);
 void	ltr(unsigned short sel);
-void	outb(unsigned int port, unsigned char data);
-void	outl(unsigned int port, unsigned int data);
-void	outsb(unsigned int port, const void *addr, size_t count);
-void	outsl(unsigned int port, const void *addr, size_t count);
-void	outsw(unsigned int port, const void *addr, size_t count);
-void	outw(unsigned int port, unsigned short data);
 unsigned int	rcr0(void);
 unsigned int	rcr2(void);
 unsigned int	rcr3(void);
--- a/sys/sys/_types.h
+++ b/sys/sys/_types.h
@@ -31,6 +31,7 @@
 
 #include <sys/cdefs.h>
 #include <machine/_types.h>
+#include <sys/types.h>
 
 /*
  * Standard type definitions.
@@ -40,10 +41,14 @@
 typedef	__int32_t	__clockid_t;	/* clock_gettime()... */
 typedef	__uint64_t	__cap_rights_t;	/* capability rights */
 typedef	__uint32_t	__fflags_t;	/* file flags */
+#ifndef __GLIBC__
 typedef	__uint64_t	__fsblkcnt_t;
 typedef	__uint64_t	__fsfilcnt_t;
+#endif
 typedef	__uint32_t	__gid_t;
+#ifndef __GLIBC__
 typedef	__int64_t	__id_t;		/* can hold a gid_t, pid_t, or uid_t */
+#endif
 typedef	__uint32_t	__ino_t;	/* inode number */
 typedef	long		__key_t;	/* IPC key (for Sys V IPC) */
 typedef	__int32_t	__lwpid_t;	/* Thread ID (a.k.a. LWP) */
@@ -94,13 +99,4 @@
 
 typedef	__uint32_t	__fixpt_t;	/* fixed point number */
 
-/*
- * mbstate_t is an opaque object to keep conversion state during multibyte
- * stream conversions.
- */
-typedef union {
-	char		__mbstate8[128];
-	__int64_t	_mbstateL;	/* for alignment */
-} __mbstate_t;
-
 #endif /* !_SYS__TYPES_H_ */
