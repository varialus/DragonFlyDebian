diff -Nur glibc-2.3.old/linuxthreads/Makefile glibc-2.3/linuxthreads/Makefile
--- glibc-2.3.old/linuxthreads/Makefile	2002-09-09 07:18:20.000000000 +0200
+++ glibc-2.3/linuxthreads/Makefile	2004-09-01 14:48:46.000000000 +0200
@@ -58,7 +58,7 @@
 CFLAGS-pt-initfini.s = -g0 -fPIC -fno-inline-functions
 endif
 
-librt-tests = ex10 ex11
+librt-tests = # ex10 ex11
 tests = ex1 ex2 ex3 ex4 ex5 ex6 ex7 ex8 ex9 $(librt-tests) ex12 ex13 joinrace \
 	tststack $(tests-nodelete-$(have-z-nodelete)) ecmutex ex14 ex15 ex16 \
 	ex17 ex18 tst-cancel tst-context bug-sleep
diff -Nur glibc-2.3.old/linuxthreads/lockfile.c glibc-2.3/linuxthreads/lockfile.c
--- glibc-2.3.old/linuxthreads/lockfile.c	2002-08-27 06:52:34.000000000 +0200
+++ glibc-2.3/linuxthreads/lockfile.c	2004-09-01 14:48:46.000000000 +0200
@@ -1,5 +1,5 @@
 /* lockfile - Handle locking and unlocking of stream.
-   Copyright (C) 1996, 1998, 2000 Free Software Foundation, Inc.
+   Copyright (C) 1996, 1998, 2000, 2002 Free Software Foundation, Inc.
    This file is part of the GNU C Library.
 
    The GNU C Library is free software; you can redistribute it and/or
@@ -78,22 +78,27 @@
 void
 __flockfilelist(void)
 {
+#if 0
 #ifdef USE_IN_LIBIO
   _IO_list_lock();
 #endif
+#endif
 }
 
 void
 __funlockfilelist(void)
 {
+#if 0
 #ifdef USE_IN_LIBIO
   _IO_list_unlock();
 #endif
+#endif
 }
 
 void
 __fresetlockfiles (void)
 {
+#if 0
 #ifdef USE_IN_LIBIO
   _IO_ITER i;
 
@@ -103,10 +108,17 @@
   __pthread_mutexattr_settype (&attr, PTHREAD_MUTEX_RECURSIVE_NP);
 
   for (i = _IO_iter_begin(); i != _IO_iter_end(); i = _IO_iter_next(i))
-    __pthread_mutex_init (_IO_iter_file(i)->_lock, &attr);
+    {
+      _IO_lock_t *lock = _IO_iter_file(i)->_lock;
+#if 0
+      if (lock != NULL)
+#endif
+	__pthread_mutex_init (lock, &attr);
+    }
 
   __pthread_mutexattr_destroy (&attr);
 
   _IO_list_resetlock();
 #endif
+#endif
 }
diff -Nur glibc-2.3.old/linuxthreads/pthread.c glibc-2.3/linuxthreads/pthread.c
--- glibc-2.3.old/linuxthreads/pthread.c	2002-09-29 19:45:47.000000000 +0200
+++ glibc-2.3/linuxthreads/pthread.c	2004-09-01 14:48:46.000000000 +0200
@@ -261,9 +261,10 @@
 #ifndef __SIGRTMIN
 static int current_rtmin = -1;
 static int current_rtmax = -1;
-int __pthread_sig_restart = SIGUSR1;
-int __pthread_sig_cancel = SIGUSR2;
-int __pthread_sig_debug;
+/* Use same signals number as on GNU/Linux with RT signals. */
+int __pthread_sig_restart = 32;
+int __pthread_sig_cancel = 33;
+int __pthread_sig_debug = 34;
 #else
 static int current_rtmin;
 static int current_rtmax;
diff -Nur glibc-2.3.old/linuxthreads/shlib-versions glibc-2.3/linuxthreads/shlib-versions
--- glibc-2.3.old/linuxthreads/shlib-versions	2002-09-05 12:14:21.000000000 +0200
+++ glibc-2.3/linuxthreads/shlib-versions	2004-09-01 14:48:46.000000000 +0200
@@ -8,4 +8,5 @@
 cris-.*-linux.*		libpthread=0		GLIBC_2.2
 x86_64-.*-linux.*	libpthread=0		GLIBC_2.2.5
 powerpc64-.*-linux.*	libpthread=0		GLIBC_2.3
-.*-.*-linux.*		libpthread=0
+.*-.*-kfreebsd.*-gnu.*	libpthread=0		GLIBC_2.3
+.*-.*-.*		libpthread=0
diff -Nur glibc-2.3.old/linuxthreads/sysdeps/unix/bsd/bsd4.4/kfreebsd/Implies glibc-2.3/linuxthreads/sysdeps/unix/bsd/bsd4.4/kfreebsd/Implies
--- glibc-2.3.old/linuxthreads/sysdeps/unix/bsd/bsd4.4/kfreebsd/Implies	1970-01-01 01:00:00.000000000 +0100
+++ glibc-2.3/linuxthreads/sysdeps/unix/bsd/bsd4.4/kfreebsd/Implies	2002-07-07 20:32:13.000000000 +0200
@@ -0,0 +1 @@
+pthread
diff -Nur glibc-2.3.old/linuxthreads/sysdeps/unix/bsd/bsd4.4/kfreebsd/bits/local_lim.h glibc-2.3/linuxthreads/sysdeps/unix/bsd/bsd4.4/kfreebsd/bits/local_lim.h
--- glibc-2.3.old/linuxthreads/sysdeps/unix/bsd/bsd4.4/kfreebsd/bits/local_lim.h	1970-01-01 01:00:00.000000000 +0100
+++ glibc-2.3/linuxthreads/sysdeps/unix/bsd/bsd4.4/kfreebsd/bits/local_lim.h	2002-07-09 01:20:13.000000000 +0200
@@ -0,0 +1,48 @@
+/* Minimum guaranteed maximum values for system limits.  FreeBSD version.
+   Copyright (C) 1993-1998, 2000, 2002 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, write to the Free
+   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+   02111-1307 USA.  */
+
+#include <sys/syslimits.h>
+
+/* The number of data keys per process.  */
+#define _POSIX_THREAD_KEYS_MAX	128
+/* This is the value this implementation supports.  */
+#define PTHREAD_KEYS_MAX	1024
+
+/* Controlling the iterations of destructors for thread-specific data.  */
+#define _POSIX_THREAD_DESTRUCTOR_ITERATIONS	4
+/* Number of iterations this implementation does.  */
+#define PTHREAD_DESTRUCTOR_ITERATIONS	_POSIX_THREAD_DESTRUCTOR_ITERATIONS
+
+/* The number of threads per process.  */
+#define _POSIX_THREAD_THREADS_MAX	64
+/* This is the value this implementation supports.  */
+#define PTHREAD_THREADS_MAX	1024
+
+/* Maximum amount by which a process can descrease its asynchronous I/O
+   priority level.  */
+#define AIO_PRIO_DELTA_MAX	20
+
+/* Minimum size for a thread.  We are free to choose a reasonable value.  */
+#define PTHREAD_STACK_MIN	16384
+
+/* Maximum number of POSIX timers available.  */
+#define TIMER_MAX	256
+
+/* Maximum number of timer expiration overruns.  */
+#define DELAYTIMER_MAX	2147483647
diff -Nur glibc-2.3.old/linuxthreads/sysdeps/unix/bsd/bsd4.4/kfreebsd/bits/posix_opt.h glibc-2.3/linuxthreads/sysdeps/unix/bsd/bsd4.4/kfreebsd/bits/posix_opt.h
--- glibc-2.3.old/linuxthreads/sysdeps/unix/bsd/bsd4.4/kfreebsd/bits/posix_opt.h	1970-01-01 01:00:00.000000000 +0100
+++ glibc-2.3/linuxthreads/sysdeps/unix/bsd/bsd4.4/kfreebsd/bits/posix_opt.h	2002-09-15 20:51:42.000000000 +0200
@@ -0,0 +1,133 @@
+/* Define POSIX options for FreeBSD.
+   Copyright (C) 1996-1997, 1999, 2000, 2002 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, write to the Free
+   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+   02111-1307 USA.  */
+
+/*
+ * Never include this file directly; use <unistd.h> instead.
+ */
+
+#ifndef	_BITS_POSIX_OPT_H
+#define	_BITS_POSIX_OPT_H	1
+
+/* Job control is supported.  */
+#define	_POSIX_JOB_CONTROL	1
+
+/* Processes have a saved set-user-ID and a saved set-group-ID.  */
+#define	_POSIX_SAVED_IDS	1
+
+/* Priority scheduling is supported.  */
+#define	_POSIX_PRIORITY_SCHEDULING	1
+
+/* Synchronizing file data is supported.  */
+#define	_POSIX_SYNCHRONIZED_IO	1
+
+/* The fsync function is present.  */
+#define	_POSIX_FSYNC	1
+
+/* Mapping of files to memory is supported.  */
+#define	_POSIX_MAPPED_FILES	1
+
+/* Locking of all memory is supported.  */
+#define	_POSIX_MEMLOCK	1
+
+/* Locking of ranges of memory is supported.  */
+#define	_POSIX_MEMLOCK_RANGE	1
+
+/* Setting of memory protections is supported.  */
+#define	_POSIX_MEMORY_PROTECTION	1
+
+/* Implementation supports `poll' function.  */
+#define	_POSIX_POLL	1
+
+/* Implementation supports `select' and `pselect' functions.  */
+#define	_POSIX_SELECT	1
+
+/* XPG4.2 shared memory is supported.  */
+#define	_XOPEN_SHM	1
+
+/* Tell we have POSIX threads.  */
+#define _POSIX_THREADS	1
+
+/* We have the reentrant functions described in POSIX.  */
+#define _POSIX_REENTRANT_FUNCTIONS	1
+#define _POSIX_THREAD_SAFE_FUNCTIONS	1
+
+/* We provide priority scheduling for threads.  */
+#define _POSIX_THREAD_PRIORITY_SCHEDULING	1
+
+/* We support user-defined stack sizes.  */
+#define _POSIX_THREAD_ATTR_STACKSIZE	1
+
+/* We support user-defined stacks.  */
+#define _POSIX_THREAD_ATTR_STACKADDR	1
+
+/* We support POSIX.1b semaphores, but only the non-shared form for now.  */
+#define _POSIX_SEMAPHORES	1
+
+/* We support asynchronous I/O.  */
+#define _POSIX_ASYNCHRONOUS_IO	1
+#define _POSIX_ASYNC_IO		1
+/* Alternative name for Unix98.  */
+#define _LFS_ASYNCHRONOUS_IO	1
+
+/* The LFS support in asynchronous I/O is also available.  */
+#define _LFS64_ASYNCHRONOUS_IO	1
+
+/* The rest of the LFS is also available.  */
+#define _LFS_LARGEFILE		1
+#define _LFS64_LARGEFILE	1
+#define _LFS64_STDIO		1
+
+/* X/Open realtime support is available.  */
+#define _XOPEN_REALTIME	1
+
+/* X/Open realtime thread support is available.  */
+#define _XOPEN_REALTIME_THREADS	1
+
+/* Only root can change owner of file.  */
+#define	_POSIX_CHOWN_RESTRICTED	1
+
+/* `c_cc' member of 'struct termios' structure can be disabled by
+   using the value _POSIX_VDISABLE.  */
+#define	_POSIX_VDISABLE	'\0'
+
+/* POSIX timers are available.  */
+#define _POSIX_TIMERS 1
+
+/* Reader/Writer locks are available.  */
+#define _POSIX_READER_WRITER_LOCKS	200912L
+
+/* GNU libc provides regular expression handling.  */
+#define _POSIX_REGEXP	1
+
+/* We have a POSIX shell.  */
+#define _POSIX_SHELL	1
+
+/* We support the Timeouts option.  */
+#define _POSIX_TIMEOUTS	200912L
+
+/* We support spinlocks.  */
+#define _POSIX_SPIN_LOCKS	200912L
+
+/* The `spawn' function family is supported.  */
+#define _POSIX_SPAWN	200912L
+
+/* The barrier functions are available.  */
+#define _POSIX_BARRIERS	200912L
+
+#endif /* bits/posix_opt.h */
diff -Nur glibc-2.3.old/linuxthreads/sysdeps/unix/bsd/bsd4.4/kfreebsd/bits/sigthread.h glibc-2.3/linuxthreads/sysdeps/unix/bsd/bsd4.4/kfreebsd/bits/sigthread.h
--- glibc-2.3.old/linuxthreads/sysdeps/unix/bsd/bsd4.4/kfreebsd/bits/sigthread.h	1970-01-01 01:00:00.000000000 +0100
+++ glibc-2.3/linuxthreads/sysdeps/unix/bsd/bsd4.4/kfreebsd/bits/sigthread.h	2002-07-12 12:03:22.000000000 +0200
@@ -0,0 +1,38 @@
+/* Signal handling function for threaded programs.
+   Copyright (C) 1998, 1999, 2000, 2002 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, write to the Free
+   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+   02111-1307 USA.  */
+
+#ifndef _BITS_SIGTHREAD_H
+#define _BITS_SIGTHREAD_H	1
+
+#if !defined _SIGNAL_H && !defined _PTHREAD_H
+# error "Never include this file directly.  Use <pthread.h> instead"
+#endif
+
+/* Functions for handling signals. */
+
+/* Modify the signal mask for the calling thread.  The arguments have
+   the same meaning as for sigprocmask(2). */
+extern int pthread_sigmask (int __how,
+			    __const __sigset_t *__restrict __newmask,
+			    __sigset_t *__restrict __oldmask) __THROW;
+
+/* Send signal SIGNO to the given thread. */
+extern int pthread_kill (pthread_t __threadid, int __signo) __THROW;
+
+#endif	/* bits/sigthread.h */
diff -Nur glibc-2.3.old/linuxthreads/sysdeps/unix/bsd/bsd4.4/kfreebsd/i386/bits/posix_opt.h glibc-2.3/linuxthreads/sysdeps/unix/bsd/bsd4.4/kfreebsd/i386/bits/posix_opt.h
--- glibc-2.3.old/linuxthreads/sysdeps/unix/bsd/bsd4.4/kfreebsd/i386/bits/posix_opt.h	1970-01-01 01:00:00.000000000 +0100
+++ glibc-2.3/linuxthreads/sysdeps/unix/bsd/bsd4.4/kfreebsd/i386/bits/posix_opt.h	2002-09-15 20:51:47.000000000 +0200
@@ -0,0 +1,139 @@
+/* Define POSIX options for FreeBSD.
+   Copyright (C) 1996-1997, 1999, 2000, 2002 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, write to the Free
+   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+   02111-1307 USA.  */
+
+/*
+ * Never include this file directly; use <unistd.h> instead.
+ */
+
+#ifndef	_BITS_POSIX_OPT_H
+#define	_BITS_POSIX_OPT_H	1
+
+/* Job control is supported.  */
+#define	_POSIX_JOB_CONTROL	1
+
+/* Processes have a saved set-user-ID and a saved set-group-ID.  */
+#define	_POSIX_SAVED_IDS	1
+
+/* Priority scheduling is supported.  */
+#define	_POSIX_PRIORITY_SCHEDULING	1
+
+/* Synchronizing file data is supported.  */
+#define	_POSIX_SYNCHRONIZED_IO	1
+
+/* The fsync function is present.  */
+#define	_POSIX_FSYNC	1
+
+/* Mapping of files to memory is supported.  */
+#define	_POSIX_MAPPED_FILES	1
+
+/* Locking of all memory is supported.  */
+#define	_POSIX_MEMLOCK	1
+
+/* Locking of ranges of memory is supported.  */
+#define	_POSIX_MEMLOCK_RANGE	1
+
+/* Setting of memory protections is supported.  */
+#define	_POSIX_MEMORY_PROTECTION	1
+
+/* Implementation supports `poll' function.  */
+#define	_POSIX_POLL	1
+
+/* Implementation supports `select' and `pselect' functions.  */
+#define	_POSIX_SELECT	1
+
+/* XPG4.2 shared memory is supported.  */
+#define	_XOPEN_SHM	1
+
+/* Tell we have POSIX threads.  */
+#define _POSIX_THREADS	1
+
+/* We have the reentrant functions described in POSIX.  */
+#define _POSIX_REENTRANT_FUNCTIONS	1
+#define _POSIX_THREAD_SAFE_FUNCTIONS	1
+
+/* We provide priority scheduling for threads.  */
+#define _POSIX_THREAD_PRIORITY_SCHEDULING	1
+
+/* We support user-defined stack sizes.  */
+#define _POSIX_THREAD_ATTR_STACKSIZE	1
+
+/* We support user-defined stacks.  */
+#define _POSIX_THREAD_ATTR_STACKADDR	1
+
+/* We support POSIX.1b semaphores, but only the non-shared form for now.  */
+#define _POSIX_SEMAPHORES	1
+
+/* We support asynchronous I/O.  */
+#define _POSIX_ASYNCHRONOUS_IO	1
+#define _POSIX_ASYNC_IO		1
+/* Alternative name for Unix98.  */
+#define _LFS_ASYNCHRONOUS_IO	1
+
+/* The LFS support in asynchronous I/O is also available.  */
+#define _LFS64_ASYNCHRONOUS_IO	1
+
+/* The rest of the LFS is also available.  */
+#define _LFS_LARGEFILE		1
+#define _LFS64_LARGEFILE	1
+#define _LFS64_STDIO		1
+
+/* X/Open realtime support is available.  */
+#define _XOPEN_REALTIME	1
+
+/* X/Open realtime thread support is available.  */
+#define _XOPEN_REALTIME_THREADS	1
+
+/* Only root can change owner of file.  */
+#define	_POSIX_CHOWN_RESTRICTED	1
+
+/* `c_cc' member of 'struct termios' structure can be disabled by
+   using the value _POSIX_VDISABLE.  */
+#define	_POSIX_VDISABLE	'\0'
+
+/* POSIX timers are available.  */
+#define _POSIX_TIMERS 1
+
+/* CPU-time clocks supported.  */
+#define _POSIX_CPUTIME	200912L
+
+/* We support the clock also in threads.  */
+#define _POSIX_THREAD_CPUTIME	200912L
+
+/* Reader/Writer locks are available.  */
+#define _POSIX_READER_WRITER_LOCKS	200912L
+
+/* GNU libc provides regular expression handling.  */
+#define _POSIX_REGEXP	1
+
+/* We have a POSIX shell.  */
+#define _POSIX_SHELL	1
+
+/* We support the Timeouts option.  */
+#define _POSIX_TIMEOUTS	200912L
+
+/* We support spinlocks.  */
+#define _POSIX_SPIN_LOCKS	200912L
+
+/* The `spawn' function family is supported.  */
+#define _POSIX_SPAWN	200912L
+
+/* The barrier functions are available.  */
+#define _POSIX_BARRIERS	200912L
+
+#endif /* bits/posix_opt.h */
diff -Nur glibc-2.3.old/linuxthreads/sysdeps/unix/bsd/bsd4.4/kfreebsd/smp.h glibc-2.3/linuxthreads/sysdeps/unix/bsd/bsd4.4/kfreebsd/smp.h
--- glibc-2.3.old/linuxthreads/sysdeps/unix/bsd/bsd4.4/kfreebsd/smp.h	1970-01-01 01:00:00.000000000 +0100
+++ glibc-2.3/linuxthreads/sysdeps/unix/bsd/bsd4.4/kfreebsd/smp.h	2002-09-17 02:51:12.000000000 +0200
@@ -0,0 +1,36 @@
+/* Determine whether the host has multiple processors.  FreeBSD version.
+   Copyright (C) 1996, 2002 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Library General Public License as
+   published by the Free Software Foundation; either version 2 of the
+   License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Library General Public License for more details.
+
+   You should have received a copy of the GNU Library General Public
+   License along with the GNU C Library; see the file COPYING.LIB.  If not,
+   write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
+   Boston, MA 02111-1307, USA.  */
+
+#include <sys/sysctl.h>
+
+/* Test whether the machine has more than one processor.  */
+static inline int
+is_smp_system (void)
+{
+  /* Fetch sysctl value of "hw.ncpu".  */
+  int request[] = { CTL_HW, HW_NCPU };
+  int result;
+  size_t result_len = sizeof (result);
+
+  if (__sysctl (request, 2, &result, &result_len, NULL, 0) < 0)
+    /* Dummy result.  */
+    return 0;
+
+  return (result > 1);
+}
--- glibc-2.3/linuxthreads_db/td_thr_getgregs.c~	2002-07-16 05:24:27.000000000 +0200
+++ glibc-2.3/linuxthreads_db/td_thr_getgregs.c	2004-09-17 01:19:13.000000000 +0200
@@ -31,7 +31,7 @@
   if (th->th_unique == NULL)
     {
       /* No data yet.  */
-      memset (gregs, '\0', sizeof (prgregset_t));
+      memset (& gregs, '\0', sizeof (prgregset_t));
       return TD_OK;
     }
 
@@ -42,7 +42,7 @@
 
   /* If the thread already terminated we return all zeroes.  */
   if (pds.p_terminated)
-    memset (gregs, '\0', sizeof (prgregset_t));
+    memset (& gregs, '\0', sizeof (prgregset_t));
   /* Otherwise get the register content through the callback.  */
   else
     {
