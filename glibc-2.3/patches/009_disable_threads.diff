
  These fix bugs in Glibc that manifest themselves when building
  without threads (as we do). All them are fixed upstream IIRC.

--- glibc-2.3/sysdeps/generic/bits/libc-tsd.h~	2004-01-17 19:36:56.000000000 +0100
+++ glibc-2.3/sysdeps/generic/bits/libc-tsd.h	2004-01-17 19:38:58.000000000 +0100
@@ -60,7 +60,7 @@
 #else
 # define __libc_tsd_define(CLASS, KEY)	CLASS void *__libc_tsd_##KEY##_data;
 
-# define __libc_tsd_address(KEY)	(&__libc_tsd_##KEY)
+# define __libc_tsd_address(KEY)	(&__libc_tsd_##KEY##_data)
 # define __libc_tsd_get(KEY)		(__libc_tsd_##KEY##_data)
 # define __libc_tsd_set(KEY, VALUE)	(__libc_tsd_##KEY##_data = (VALUE))
 #endif
diff -ur glibc-2.3.old/libio/iofflush.c glibc-2.3/libio/iofflush.c
--- glibc-2.3.old/libio/iofflush.c	2004-01-22 19:34:29.000000000 +0100
+++ glibc-2.3/libio/iofflush.c	2004-01-22 19:35:18.000000000 +0100
@@ -53,5 +53,6 @@
 
 #ifndef _IO_MTSAFE_IO
 weak_alias (_IO_fflush, fflush_unlocked)
+libc_hidden_weak (fflush_unlocked)
 #endif
 #endif
diff -ur glibc-2.3.old/libio/iofwrite.c glibc-2.3/libio/iofwrite.c
--- glibc-2.3.old/libio/iofwrite.c	2004-01-22 19:34:29.000000000 +0100
+++ glibc-2.3/libio/iofwrite.c	2004-01-22 19:35:18.000000000 +0100
@@ -58,5 +58,6 @@
 libc_hidden_weak (fwrite)
 # ifndef _IO_MTSAFE_IO
 weak_alias (_IO_fwrite, fwrite_unlocked)
+libc_hidden_weak (fwrite_unlocked)
 # endif
 #endif
