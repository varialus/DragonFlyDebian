#! /bin/sh -e

# All lines beginning with `# DP:' are a description of the patch.
# DP: Description: Fix bash/fork bug in hurd-i386
# DP: Author: Wolfram Gloger <wg@malloc.de>
# DP: Upstream status: Pending
# DP: Status Details:
# (ptmalloc_lock_all, ptmalloc_unlock_all, ptmalloc_unlock_all2): Do
# nothing if not initialized.
# DP: Date: 2002-11-18

if [ $# -ne 2 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch) patch -d "$2" -f --no-backup-if-mismatch -p1 < $0;;
    -unpatch) patch -d "$2" -f --no-backup-if-mismatch -R -p1 < $0;;
    *)
	echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
	exit 1
esac
exit 0

# append the patch here and adjust the -p? flag in the patch calls.
--- /home/jbailey/Programming/cvstree/glibc-cvs/malloc/arena.c	2002-11-16 08:55:47.000000000 -0500
+++ glibc-2.3.1/malloc/arena.c	2002-11-18 09:17:02.000000000 -0500
@@ -73,6 +73,9 @@
 /* Mapped memory in non-main arenas (reliable only for NO_THREADS). */
 static unsigned long arena_mem;
 
+/* Already initialized? */
+int __malloc_initialized = -1;
+
 /**************************************************************************/
 
 #if USE_ARENAS
@@ -212,6 +215,8 @@
 {
   mstate ar_ptr;
 
+  if(__malloc_initialized < 1)
+  return;
   (void)mutex_lock(&list_lock);
   for(ar_ptr = &main_arena;;) {
     (void)mutex_lock(&ar_ptr->mutex);
@@ -232,6 +237,8 @@
 {
   mstate ar_ptr;
 
+  if(__malloc_initialized < 1)
+  return;
   tsd_setspecific(arena_key, save_arena);
   __malloc_hook = save_malloc_hook;
   __free_hook = save_free_hook;
@@ -255,6 +262,8 @@
 {
   mstate ar_ptr;
 
+ if(__malloc_initialized < 1)
+ return;
 #if defined _LIBC || defined MALLOC_HOOKS
   tsd_setspecific(arena_key, save_arena);
   __malloc_hook = save_malloc_hook;
@@ -276,9 +285,6 @@
 
 #endif /* !defined NO_THREADS */
 
-/* Already initialized? */
-int __malloc_initialized = -1;
-
 /* Initialization routine. */
 #ifdef _LIBC
 #include <string.h>
