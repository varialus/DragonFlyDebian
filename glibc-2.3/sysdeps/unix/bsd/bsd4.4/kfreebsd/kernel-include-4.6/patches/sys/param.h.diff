*** orig/sys/param.h	Thu Jun 27 23:27:23 2002
--- import/sys/param.h	Fri Sep  6 01:39:21 2002
***************
*** 1,3 ****
--- 1,21 ----
+ /* Copyright (C) 2002 Free Software Foundation, Inc.
+    This file is part of the GNU C Library.
+ 
+    The GNU C Library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Lesser General Public
+    License as published by the Free Software Foundation; either
+    version 2.1 of the License, or (at your option) any later version.
+ 
+    The GNU C Library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Lesser General Public License for more details.
+ 
+    You should have received a copy of the GNU Lesser General Public
+    License along with the GNU C Library; if not, write to the Free
+    Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+    02111-1307 USA.  */
+ 
  /*-
   * Copyright (c) 1982, 1986, 1989, 1993
   *	The Regents of the University of California.  All rights reserved.
***************
*** 39,48 ****
   * $FreeBSD: src/sys/sys/param.h,v 1.61.2.31 2002/06/26 16:49:28 obrien Exp $
   */
  
! #ifndef _SYS_PARAM_H_
! #define _SYS_PARAM_H_
  
! #define	BSD	199506		/* System version (year & month). */
  #define BSD4_3	1
  #define BSD4_4	1
  
--- 57,66 ----
   * $FreeBSD: src/sys/sys/param.h,v 1.61.2.31 2002/06/26 16:49:28 obrien Exp $
   */
  
! #ifndef _SYS_PARAM_H
! #define _SYS_PARAM_H	1
  
! #define BSD 199506			/* System version (year & month). */
  #define BSD4_3	1
  #define BSD4_4	1
  
***************
*** 56,157 ****
  #undef __FreeBSD_version
  #define __FreeBSD_version 460101	/* Master, propagated to newvers */
  
! #ifndef NULL
! #define	NULL	0
! #endif
! 
! #ifndef LOCORE
  #include <sys/types.h>
- #endif
  
! /*
!  * Machine-independent constants (some used in following include files).
!  * Redefined constants are from POSIX 1003.1 limits file.
!  *
!  * MAXCOMLEN should be >= sizeof(ac_comm) (see <acct.h>)
!  * MAXLOGNAME should be == UT_NAMESIZE+1 (see <utmp.h>)
!  */
! #include <sys/syslimits.h>
  
! #define	MAXCOMLEN	16		/* max command name remembered */
! #define	MAXINTERP	32		/* max interpreter file name length */
! #define	MAXLOGNAME	17		/* max login name length (incl. NUL) */
! #define	MAXUPRC		CHILD_MAX	/* max simultaneous processes */
! #define	NCARGS		ARG_MAX		/* max bytes for an exec function */
! #define	NGROUPS		NGROUPS_MAX	/* max number groups */
! #define	NOFILE		OPEN_MAX	/* max open files per process */
! #define	NOGROUP		65535		/* marker for empty group set member */
  #define MAXHOSTNAMELEN	256		/* max hostname size */
  
- /* More types and definitions used throughout the kernel. */
- #ifdef _KERNEL
- #include <sys/cdefs.h>
- #include <sys/errno.h>
- #include <sys/time.h>
- 
- #define	FALSE	0
- #define	TRUE	1
- #endif
- 
- #ifndef _KERNEL
- /* Signals. */
- #include <sys/signal.h>
- #endif
- 
- /* Machine type dependent parameters. */
  #include <machine/param.h>
- #ifndef _KERNEL
- #include <machine/limits.h>
- #endif
  
  /*
   * Priorities.  Note that with 32 run queues, differences less than 4 are
   * insignificant.
   */
! #define	PSWP	0
! #define	PVM	4
! #define	PINOD	8
! #define	PRIBIO	16
! #define	PVFS	20
! #define	PZERO	22		/* No longer magic, shouldn't be here.  XXX */
! #define	PSOCK	24
! #define	PWAIT	32
! #define	PCONFIG	32
! #define	PLOCK	36
! #define	PPAUSE	40
! #define	PUSER	50
! #define	MAXPRI	127		/* Priorities range from 0 through MAXPRI. */
! 
! #define	PRIMASK	0x0ff
! #define	PCATCH	0x100		/* OR'd with pri for tsleep to check signals */
! 
! #define	NZERO	0		/* default "nice" */
! 
! #define	NBPW	sizeof(int)	/* number of bytes per word (integer) */
! 
! #define	CMASK	022		/* default file mask: S_IWGRP|S_IWOTH */
! #ifdef _KERNEL
! #define	NODEV	(dev_t)(-1)	/* non-existent device */
! #define	NOUDEV	(udev_t)(-1)	/* non-existent device */
! #define	NOMAJ	256		/* non-existent device */
! #else
! #define	NODEV	(dev_t)(-1)	/* non-existent device */
! #endif
  
! /*
!  * Clustering of hardware pages on machines with ridiculously small
!  * page sizes is done here.  The paging subsystem deals with units of
!  * CLSIZE pte's describing PAGE_SIZE (from machine/machparam.h) pages each.
!  */
! #if 0
! #define	CLBYTES		(CLSIZE*PAGE_SIZE)
! #endif
  
! #define	CBLOCK	128		/* Clist block size, must be a power of 2. */
! #define CBQSIZE	(CBLOCK/NBBY)	/* Quote bytes/cblock - can do better. */
! 				/* Data chars/clist. */
! #define	CBSIZE	(CBLOCK - sizeof(struct cblock *) - CBQSIZE)
! #define	CROUND	(CBLOCK - 1)	/* Clist rounding. */
  
  /*
   * File system parameters and macros.
--- 74,122 ----
  #undef __FreeBSD_version
  #define __FreeBSD_version 460101	/* Master, propagated to newvers */
  
! /* Some inet code expects that this file defines the 'u_int32_t' type.  */
  #include <sys/types.h>
  
! #include <limits.h>
  
! #define MAXCOMLEN	16		/* max command name remembered */
! #define MAXINTERP	32		/* max interpreter file name length */
! #define MAXLOGNAME	17		/* max login name length (incl. NUL) */
! #define MAXUPRC		CHILD_MAX	/* max simultaneous processes */
! #define NCARGS		ARG_MAX		/* max bytes for an exec function */
! #define NGROUPS		NGROUPS_MAX	/* max number groups */
! #define NOFILE		OPEN_MAX	/* max open files per process */
! #define NOGROUP		65535		/* marker for empty group set member */
  #define MAXHOSTNAMELEN	256		/* max hostname size */
  
  #include <machine/param.h>
  
  /*
   * Priorities.  Note that with 32 run queues, differences less than 4 are
   * insignificant.
   */
! #define PSWP	0
! #define PVM	4
! #define PINOD	8
! #define PRIBIO	16
! #define PVFS	20
! #define PZERO	22		/* No longer magic, shouldn't be here.  XXX */
! #define PSOCK	24
! #define PWAIT	32
! #define PCONFIG	32
! #define PLOCK	36
! #define PPAUSE	40
! #define PUSER	50
! #define MAXPRI	127		/* Priorities range from 0 through MAXPRI. */
  
! #define PRIMASK	0x0ff
! #define PCATCH	0x100		/* OR'd with pri for tsleep to check signals */
! 
! #define NBPW	sizeof(int)	/* number of bytes per word (integer) */
  
! #define CMASK	022		/* default file mask: S_IWGRP|S_IWOTH */
! 
! #define NODEV	(dev_t)(-1)	/* non-existent device */
  
  /*
   * File system parameters and macros.
***************
*** 190,240 ****
   * It should be set high enough to allow all legitimate uses, but halt
   * infinite loops reasonably quickly.
   */
! #define	MAXPATHLEN	PATH_MAX
  #define MAXSYMLINKS	32
  
  /* Bit map related macros. */
! #define	setbit(a,i)	((a)[(i)/NBBY] |= 1<<((i)%NBBY))
! #define	clrbit(a,i)	((a)[(i)/NBBY] &= ~(1<<((i)%NBBY)))
! #define	isset(a,i)	((a)[(i)/NBBY] & (1<<((i)%NBBY)))
! #define	isclr(a,i)	(((a)[(i)/NBBY] & (1<<((i)%NBBY))) == 0)
  
  /* Macros for counting and rounding. */
  #ifndef howmany
! #define	howmany(x, y)	(((x)+((y)-1))/(y))
  #endif
! #define	rounddown(x, y)	(((x)/(y))*(y))
! #define	roundup(x, y)	((((x)+((y)-1))/(y))*(y))  /* to any y */
! #define	roundup2(x, y)	(((x)+((y)-1))&(~((y)-1))) /* if y is powers of two */
  #define powerof2(x)	((((x)-1)&(x))==0)
  
  /* Macros for min/max. */
! #ifndef _KERNEL
! #define	MIN(a,b) (((a)<(b))?(a):(b))
! #define	MAX(a,b) (((a)>(b))?(a):(b))
! #endif
! 
! /*
!  * Constants for setting the parameters of the kernel memory allocator.
!  *
!  * 2 ** MINBUCKET is the smallest unit of memory that will be
!  * allocated. It must be at least large enough to hold a pointer.
!  *
!  * Units of memory less or equal to MAXALLOCSAVE will permanently
!  * allocate physical memory; requests for these size pieces of
!  * memory are quite fast. Allocations greater than MAXALLOCSAVE must
!  * always allocate and free physical memory; requests for these
!  * size allocations should be done infrequently as they will be slow.
!  *
!  * Constraints: PAGE_SIZE <= MAXALLOCSAVE <= 2 ** (MINBUCKET + 14), and
!  * MAXALLOCSIZE must be a power of two.
!  */
! #if defined(__alpha__)
! #define MINBUCKET	5		/* 5 => min allocation of 32 bytes */
! #else
! #define MINBUCKET	4		/* 4 => min allocation of 16 bytes */
! #endif
! #define MAXALLOCSAVE	(2 * PAGE_SIZE)
  
  /*
   * Scale factor for scaled integers used to count %cpu time and load avgs.
--- 155,181 ----
   * It should be set high enough to allow all legitimate uses, but halt
   * infinite loops reasonably quickly.
   */
! #define MAXPATHLEN	PATH_MAX
  #define MAXSYMLINKS	32
  
  /* Bit map related macros. */
! #define setbit(a,i)	((a)[(i)/NBBY] |= 1<<((i)%NBBY))
! #define clrbit(a,i)	((a)[(i)/NBBY] &= ~(1<<((i)%NBBY)))
! #define isset(a,i)	((a)[(i)/NBBY] & (1<<((i)%NBBY)))
! #define isclr(a,i)	(((a)[(i)/NBBY] & (1<<((i)%NBBY))) == 0)
  
  /* Macros for counting and rounding. */
  #ifndef howmany
! #define howmany(x, y)	(((x)+((y)-1))/(y))
  #endif
! #define rounddown(x, y)	(((x)/(y))*(y))
! #define roundup(x, y)	((((x)+((y)-1))/(y))*(y))  /* to any y */
! #define roundup2(x, y)	(((x)+((y)-1))&(~((y)-1))) /* if y is powers of two */
  #define powerof2(x)	((((x)-1)&(x))==0)
  
  /* Macros for min/max. */
! #define MIN(a,b) (((a)<(b))?(a):(b))
! #define MAX(a,b) (((a)>(b))?(a):(b))
  
  /*
   * Scale factor for scaled integers used to count %cpu time and load avgs.
***************
*** 247,253 ****
   * For the scheduler to maintain a 1:1 mapping of CPU `tick' to `%age',
   * FSHIFT must be at least 11; this gives us a maximum load avg of ~1024.
   */
! #define	FSHIFT	11		/* bits to right of fixed binary point */
  #define FSCALE	(1<<FSHIFT)
  
  #define dbtoc(db)			/* calculates devblks to pages */ \
--- 188,194 ----
   * For the scheduler to maintain a 1:1 mapping of CPU `tick' to `%age',
   * FSHIFT must be at least 11; this gives us a maximum load avg of ~1024.
   */
! #define FSHIFT	11		/* bits to right of fixed binary point */
  #define FSCALE	(1<<FSHIFT)
  
  #define dbtoc(db)			/* calculates devblks to pages */ \
***************
*** 256,268 ****
  #define ctodb(db)			/* calculates pages to devblks */ \
  	((db) << (PAGE_SHIFT - DEV_BSHIFT))
  
! 
! /*
!  * Make this available for most of the kernel.  There were too many
!  * things that included sys/systm.h just for panic().
!  */
! #ifdef _KERNEL
! void	panic __P((const char *, ...)) __dead2 __printflike(1, 2);
! #endif
! 
! #endif	/* _SYS_PARAM_H_ */
--- 197,200 ----
  #define ctodb(db)			/* calculates pages to devblks */ \
  	((db) << (PAGE_SHIFT - DEV_BSHIFT))
  
! #endif	/* _SYS_PARAM_H */
