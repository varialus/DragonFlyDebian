*** orig/sys/linker.h	Mon Mar 11 02:13:53 2002
--- import/sys/linker.h	Fri Sep  6 01:24:20 2002
***************
*** 1,3 ****
--- 1,22 ----
+ /* Kernel module linker interface.  FreeBSD version.
+    Copyright (C) 2002 Free Software Foundation, Inc.
+    This file is part of the GNU C Library.
+ 
+    The GNU C Library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Lesser General Public
+    License as published by the Free Software Foundation; either
+    version 2.1 of the License, or (at your option) any later version.
+ 
+    The GNU C Library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Lesser General Public License for more details.
+ 
+    You should have received a copy of the GNU Lesser General Public
+    License along with the GNU C Library; if not, write to the Free
+    Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+    02111-1307 USA.  */
+ 
  /*-
   * Copyright (c) 1997 Doug Rabson
   * All rights reserved.
***************
*** 199,204 ****
--- 218,230 ----
  int linker_ddb_symbol_values(c_linker_sym_t _sym, linker_symval_t *_symval);
  
  
+ #else
+ 
+ #include <features.h>
+ 
+ #include <sys/param.h>
+ #include <sys/types.h>
+ 
  #endif	/* _KERNEL */
  
  /*
***************
*** 270,295 ****
      size_t	size;		/* size in bytes */
  };
  
  struct kld_sym_lookup {
      int		version;	/* set to sizeof(struct kld_sym_lookup) */
      char	*symname;	/* Symbol name we are looking up */
      u_long	symvalue;
      size_t	symsize;
  };
- #define KLDSYM_LOOKUP	1
  
  #ifndef _KERNEL
  
- #include <sys/cdefs.h>
- 
  __BEGIN_DECLS
! int	kldload(const char* _file);
! int	kldunload(int _fileid);
! int	kldfind(const char* _file);
! int	kldnext(int _fileid);
! int	kldstat(int _fileid, struct kld_file_stat* _stat);
! int	kldfirstmod(int _fileid);
! int	kldsym(int _fileid, int _cmd, void *_data);
  __END_DECLS
  
  #endif
--- 296,340 ----
      size_t	size;		/* size in bytes */
  };
  
+ /* Possible commands for kldsym.  */
+ enum
+ {
+   KLDSYM_LOOKUP = 1		/* Kernel symbol lookup.  */
+ #define KLDSYM_LOOKUP KLDSYM_LOOKUP
+ };
+ 
  struct kld_sym_lookup {
      int		version;	/* set to sizeof(struct kld_sym_lookup) */
      char	*symname;	/* Symbol name we are looking up */
      u_long	symvalue;
      size_t	symsize;
  };
  
  #ifndef _KERNEL
  
  __BEGIN_DECLS
! 
! /* Load a KLD kernel module into the kernel.  */
! extern int kldload (__const char *__file) __THROW;
! 
! /* Unload a KLD kernel module from the kernel.  */
! extern int kldunload (int __fileid) __THROW;
! 
! /* Return the fileid of loaded KLD kernel module.  */
! extern int kldfind (__const char *__file) __THROW;
! 
! /* Return the fileid of the next loaded KLD kernel module after FILEID.  */
! extern int kldnext (int __fileid) __THROW;
! 
! /* Return info about the loaded KLD kernel module FILEID in *STATP.  */
! extern int kldstat (int __fileid, struct kld_file_stat *__statp) __THROW;
! 
! /* Return the moduleid of the first module referenced by FILEID.  */
! extern int kldfirstmod (int __fileid) __THROW;
! 
! /* Perform an operation related to kernel module symbols.  */
! extern int kldsym (int __fileid, int __cmd, void*__data) __THROW;
! 
  __END_DECLS
  
  #endif
