 #
# Local configure fragment for sysdeps/unix/bsd/bsd4.4/freebsd.
# Process this file with "autoconf-2.13 -l ../../../../..".
#

ac_help="$ac_help
  --enable-kernel-include=x.y  use the kernel include files corresponding to
                          the FreeBSD kernel version x.y"
# Check whether --enable-kernel-include or --disable-kernel-include was given.
if test "${enable_kernel_include+set}" = set; then
  enableval="$enable_kernel_include"
  kernel_include_version=$enableval
else
  kernel_include_version=4.0
fi

kernel_include_subdir=kernel-include-$kernel_include_version
mkdir -p sysdeps/unix/bsd/bsd4.4/freebsd
echo $kernel_include_subdir > kernel-include

ac_help="$ac_help
  --disable-compatible-utmp  use a struct utmp which is the same as struct
                          utmpx, as on Linux, but incompatible with FreeBSD"
# Check whether --enable-compatible-utmp or --disable-compatible-utmp was given.
if test "${enable_compatible_utmp+set}" = set; then
  enableval="$enable_compatible_utmp"
  enable_utmp_compat=$enableval
else
  enable_utmp_compat=yes
fi

if test "$enable_utmp_compat" = no; then
  utmp_subdir=utmp-utmpx
else
  utmp_subdir=utmp-compat
fi

# Add configuration dependent sysdep dirs.
echo $ac_n "checking sysdep dirs""... $ac_c" 1>&6
echo "configure:41: checking sysdep dirs" >&5
sysnames=`echo "$sysnames" | sed -e "s| sysdeps/unix/bsd/bsd4.4/freebsd/$base_machine | sysdeps/unix/bsd/bsd4.4/freebsd/$base_machine sysdeps/unix/bsd/bsd4.4/freebsd/$kernel_include_subdir/import/$base_machine |" -e "s| sysdeps/unix/bsd/bsd4.4/freebsd | sysdeps/unix/bsd/bsd4.4/freebsd sysdeps/unix/bsd/bsd4.4/freebsd/$kernel_include_subdir/import sysdeps/unix/bsd/bsd4.4/freebsd/$utmp_subdir |"`
echo "$ac_t""$sysnames" 1>&6

# Ensure that we don't accidentally access /usr/include while building.
ccheaders=`$CC -print-file-name=include`
SYSINCLUDES="-nostdinc -isystem $ccheaders"

# Don't bother checking for the prerequisites of the ctype glue code,
# since we don't use this glue code.
inhibit_glue=yes

# Put exception handling support into libc, so that not every shared
# library needs to include it.
# FIXME: Does not work yet.
#libc_cv_gcc_unwind_find_fde=yes

# Under FreeBSD the LinuxThreads add-on should be available.
case $add_ons in
  # It is available.  Good.
  *linuxthreads*)
    linuxthreads_missing=
    ;;
  *)
    linuxthreads_missing=yes
    ;;
esac

if test "$linuxthreads_missing"; then
  if test $enable_sanity = yes; then
    echo "\
*** On GNU/FreeBSD systems it is normal to compile GNU libc with the
*** 'linuxthreads' add-on.  Without that, the library will be
*** incompatible with normal GNU/FreeBSD systems.
*** If you really mean to not use this add-on, run configure again
*** using the extra parameter '--disable-sanity-checks'."
    exit 1
  else
    echo "\
*** WARNING: Are you sure you do not want to use the 'linuxthreads'
*** add-on?"
  fi
fi

# On FreeBSD we use ldconfig.
use_ldconfig=yes
