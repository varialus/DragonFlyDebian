--- src/sys/sys/soundcard.h.old	2004-09-18 20:08:37.000000000 +0200
+++ src/sys/sys/soundcard.h	2004-09-18 20:11:42.000000000 +0200
@@ -94,7 +94,6 @@
 #define SNDCARD_UART16550      27
 #define SNDCARD_OPL            28
 
-#include <sys/types.h>
 #include <machine/endian.h>
 #ifndef _IOWR
 #include <sys/ioccom.h>
@@ -205,10 +204,10 @@
  */
 
 typedef struct _snd_chan_param {
-    u_long	play_rate;	/* sampling rate			*/
-    u_long	rec_rate;	/* sampling rate			*/
-    u_long	play_format;	/* everything describing the format	*/
-    u_long	rec_format;	/* everything describing the format	*/
+    unsigned long	play_rate;	/* sampling rate			*/
+    unsigned long	rec_rate;	/* sampling rate			*/
+    unsigned long	play_format;	/* everything describing the format	*/
+    unsigned long	rec_format;	/* everything describing the format	*/
 } snd_chan_param;
 #define	AIOGFMT    _IOR('f', 12, snd_chan_param)   /* get format */
 #define	AIOSFMT    _IOWR('f', 12, snd_chan_param)  /* sets format */
@@ -218,9 +217,9 @@
  * Up to 32 mixers are supported, each one with up to 32 channels.
  */
 typedef struct _snd_mix_param {
-    u_char	subdev;	/* which output				*/
-    u_char	line;	/* which input				*/
-    u_char	left,right; /* volumes, 0..255, 0 = mute	*/
+    unsigned char	subdev;	/* which output				*/
+    unsigned char	line;	/* which input				*/
+    unsigned char	left,right; /* volumes, 0..255, 0 = mute	*/
 } snd_mix_param ;
 
 /* XXX AIOGMIX, AIOSMIX not implemented yet */
@@ -259,12 +258,12 @@
  * are returned depending on the call.
  */
 typedef struct _snd_capabilities {
-    u_long	rate_min, rate_max;	/* min-max sampling rate */
-    u_long	formats;
-    u_long	bufsize; /* DMA buffer size */
-    u_long	mixers; /* bitmap of available mixers */
-    u_long	inputs; /* bitmap of available inputs (per mixer) */
-    u_short	left, right;	/* how many levels are supported */
+    unsigned long	rate_min, rate_max;	/* min-max sampling rate */
+    unsigned long	formats;
+    unsigned long	bufsize; /* DMA buffer size */
+    unsigned long	mixers; /* bitmap of available mixers */
+    unsigned long	inputs; /* bitmap of available inputs (per mixer) */
+    unsigned short	left, right;	/* how many levels are supported */
 } snd_capabilities;
 #define AIOGCAP	_IOWR('A', 15, snd_capabilities)	/* get capabilities */
 
@@ -298,7 +297,7 @@
 #define SNDCTL_SEQ_OUTOFBAND	_IOW ('Q',18, struct seq_event_rec)
 
 struct seq_event_rec {
-	u_char arr[8];
+	unsigned char arr[8];
 };
 
 #define SNDCTL_TMR_TIMEBASE	_IOWR('T', 1, int)
@@ -334,7 +333,7 @@
  */
 
 struct patch_info {
-/*		u_short key;		 Use GUS_PATCH here */
+/*		unsigned short key;		 Use GUS_PATCH here */
 	short key;		 /* Use GUS_PATCH here */
 #define GUS_PATCH	_PATCHKEY(0x04)
 #define OBSOLETE_GUS_PATCH	_PATCHKEY(0x02)
@@ -342,7 +341,7 @@
 	short device_no;	/* Synthesizer number */
 	short instr_no;		/* Midi pgm# */
 
-	u_long mode;
+	unsigned long mode;
 /*
  * The least significant byte has the same format than the GUS .PAT
  * files
@@ -380,18 +379,18 @@
  * middle A is 440*1000.
  */
 
-	u_int base_freq;
-	u_long base_note;
-	u_long high_note;
-	u_long low_note;
+	unsigned int base_freq;
+	unsigned long base_note;
+	unsigned long high_note;
+	unsigned long low_note;
 	int panning;	/* -128=left, 127=right */
 	int detuning;
 
 /*	New fields introduced in version 1.99.5	*/
 
        /* Envelope. Enabled by mode bit WAVE_ENVELOPES	*/
-	u_char	env_rate[ 6 ];	 /* GUS HW ramping rate */
-	u_char	env_offset[ 6 ]; /* 255 == 100% */
+	unsigned char	env_rate[ 6 ];	 /* GUS HW ramping rate */
+	unsigned char	env_offset[ 6 ]; /* 255 == 100% */
 
 	/*
 	 * The tremolo, vibrato and scale info are not supported yet.
@@ -399,16 +398,16 @@
 	 * WAVE_SCALE
 	 */
 
-	u_char	tremolo_sweep;
-	u_char	tremolo_rate;
-	u_char	tremolo_depth;
-
-	u_char	vibrato_sweep;
-	u_char	vibrato_rate;
-	u_char	vibrato_depth;
+	unsigned char	tremolo_sweep;
+	unsigned char	tremolo_rate;
+	unsigned char	tremolo_depth;
+
+	unsigned char	vibrato_sweep;
+	unsigned char	vibrato_rate;
+	unsigned char	vibrato_depth;
 
 	int		scale_frequency;
-	u_int	scale_factor;		/* from 0 to 2048 or 0 to 2 */
+	unsigned int	scale_factor;		/* from 0 to 2048 or 0 to 2 */
 
 	int		volume;
 	int		spare[4];
@@ -421,7 +420,7 @@
 #define MAUI_PATCH	_PATCHKEY(0x06)
 	short device_no;	/* Synthesizer number */
 	long len;	/* Size of the sysex data in bytes */
-	u_char data[1];	/* Sysex data starts here */
+	unsigned char data[1];	/* Sysex data starts here */
 };
 
 /*
@@ -451,7 +450,7 @@
  */
 
 struct patmgr_info {	/* Note! size must be < 4k since kmalloc() is used */
-	  u_long key;	/* Don't worry. Reserved for communication
+	  unsigned long key;	/* Don't worry. Reserved for communication
 	  			   between the patch manager and the driver. */
 #define PM_K_EVENT		1 /* Event from the /dev/sequencer driver */
 #define PM_K_COMMAND		2 /* Request from a application */
@@ -490,9 +489,9 @@
 	long parm3;
 
 	union {
-		u_char data8[4000];
-		u_short data16[2000];
-		u_long data32[1000];
+		unsigned char data8[4000];
+		unsigned short data16[2000];
+		unsigned long data32[1000];
 		struct patch_info patch;
 	} data;
 };
@@ -667,10 +666,10 @@
  * Record for FM patches
  */
 
-typedef u_char sbi_instr_data[32];
+typedef unsigned char sbi_instr_data[32];
 
 struct sbi_instrument {
-	u_short	key;	/* FM_PATCH or OPL3_PATCH */
+	unsigned short	key;	/* FM_PATCH or OPL3_PATCH */
 #define FM_PATCH	_PATCHKEY(0x01)
 #define OPL3_PATCH	_PATCHKEY(0x03)
 	short		device;		/* Synth# (0-4)	*/
@@ -699,7 +698,7 @@
 	int	nr_voices;
 	int	nr_drums;	/* Obsolete field */
 	int	instr_bank_size;
-	u_long	capabilities;
+	unsigned long	capabilities;
 #define SYNTH_CAP_PERCMODE	0x00000001 /* No longer used */
 #define SYNTH_CAP_OPL3		0x00000002 /* Set if OPL3 supported */
 #define SYNTH_CAP_INPUT		0x00000004 /* Input (MIDI) device */
@@ -716,7 +715,7 @@
 struct midi_info {
 	char		name[30];
 	int		device;		/* 0-N. INITIALIZE BEFORE CALLING */
-	u_long	capabilities;	/* To be defined later */
+	unsigned long	capabilities;	/* To be defined later */
 	int		dev_type;
 	int		dummies[18];	/* Reserve space */
 };
@@ -725,9 +724,9 @@
  * ioctl commands for the /dev/midi##
  */
 typedef struct {
-	u_char cmd;
+	unsigned char cmd;
 	char nr_args, nr_returns;
-	u_char data[30];
+	unsigned char data[30];
 } mpu_command_rec;
 
 #define SNDCTL_MIDI_PRETIME	_IOWR('m', 0, int)
@@ -856,7 +855,7 @@
 	int len;
 	int offs;	/* If required by the device (0 if not used) */
 
-	u_char data[4000]; /* NOTE! 4000 is not 4k */
+	unsigned char data[4000]; /* NOTE! 4000 is not 4k */
 } copr_buffer;
 
 typedef struct copr_debug_buf {
@@ -869,7 +868,7 @@
 
 typedef struct copr_msg {
 	int len;
-	u_char data[4000];
+	unsigned char data[4000];
 } copr_msg;
 
 #define SNDCTL_COPR_RESET       _IO  ('C',  0)
@@ -1157,9 +1156,9 @@
  */
 
 #define SEQ_DEFINEBUF(len)		\
-	u_char _seqbuf[len]; int _seqbuflen = len;int _seqbufptr = 0
+	unsigned char _seqbuf[len]; int _seqbuflen = len;int _seqbufptr = 0
 #define SEQ_USE_EXTBUF()		\
-	extern u_char _seqbuf[]; \
+	extern unsigned char _seqbuf[]; \
 	extern int _seqbuflen;extern int _seqbufptr
 #define SEQ_DECLAREBUF()		SEQ_USE_EXTBUF()
 #define SEQ_PM_DEFINES			struct patmgr_info _pm_info
@@ -1176,7 +1175,7 @@
  * The program using the macro library must define the following macros before
  * using this library.
  *
- * #define _seqbuf 		 name of the buffer (u_char[])
+ * #define _seqbuf 		 name of the buffer (unsigned char[])
  * #define _SEQ_ADVBUF(len)	 If the applic needs to know the exact
  *				 size of the event, this macro can be used.
  *				 Otherwise this must be defined as empty.
@@ -1321,7 +1320,7 @@
 	_seqbuf[_seqbufptr+1] = (ev); \
 	_seqbuf[_seqbufptr+2] = 0;\
 	_seqbuf[_seqbufptr+3] = 0;\
-	*(u_int *)&_seqbuf[_seqbufptr+4] = (parm); \
+	*(unsigned int *)&_seqbuf[_seqbufptr+4] = (parm); \
 	_SEQ_ADVBUF(8); \
 	}
 
@@ -1345,7 +1344,7 @@
 	_seqbuf[_seqbufptr+1] = (ev); \
 	_seqbuf[_seqbufptr+2] = 0;\
 	_seqbuf[_seqbufptr+3] = 0;\
-	*(u_int *)&_seqbuf[_seqbufptr+4] = (parm); \
+	*(unsigned int *)&_seqbuf[_seqbufptr+4] = (parm); \
 	_SEQ_ADVBUF(8); \
 	}
 
--- src/sys/sys/soundcard.h~	2004-09-18 20:12:42.000000000 +0200
+++ src/sys/sys/soundcard.h	2004-09-18 20:16:19.000000000 +0200
@@ -822,7 +822,7 @@
 #define SNDCTL_DSP_GETOPTR	_IOR ('P',18, count_info)
 
 typedef struct buffmem_desc {
-	caddr_t buffer;
+	char *buffer;
 	int size;
 } buffmem_desc;
 
