diff -ur src.old/sys/alpha/machine/alpha_cpu.h src/sys/alpha/machine/alpha_cpu.h
--- src.old/sys/alpha/machine/alpha_cpu.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/alpha/machine/alpha_cpu.h	2004-09-28 00:40:30.000000000 +0200
@@ -49,6 +49,7 @@
  * and miscellaneous PALcode operations.
  */
 
+#include <sys/types.h>
 
 /*
  * Process Control Block definitions [OSF/1 PALcode Specific]
diff -ur src.old/sys/alpha/machine/lock.h src/sys/alpha/machine/lock.h
--- src.old/sys/alpha/machine/lock.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/alpha/machine/lock.h	2004-09-28 00:40:30.000000000 +0200
@@ -29,6 +29,7 @@
 #ifndef _MACHINE_LOCK_H_
 #define _MACHINE_LOCK_H_
 
+#include <features.h>
 
 /*
  * Simple spin lock.
diff -ur src.old/sys/alpha/machine/param.h src/sys/alpha/machine/param.h
--- src.old/sys/alpha/machine/param.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/alpha/machine/param.h	2004-09-28 00:40:30.000000000 +0200
@@ -43,6 +43,9 @@
  *	@(#)param.h	8.1 (Berkeley) 6/10/93
  */
 
+#ifndef _MACHINE_PARAM_H_
+#define _MACHINE_PARAM_H_
+
 /*
  * Machine dependent constants for the Alpha.
  */
@@ -196,4 +199,6 @@
 #define pgtok(x)                ((x) * (PAGE_SIZE / 1024)) 
 
 #endif /* !_MACHINE_PARAM_H_ */
+
+#endif /* !_MACHINE_PARAM_H_ */
 #endif /* !_NO_NAMESPACE_POLLUTION */
diff -ur src.old/sys/alpha/machine/pcb.h src/sys/alpha/machine/pcb.h
--- src.old/sys/alpha/machine/pcb.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/alpha/machine/pcb.h	2004-09-28 00:40:30.000000000 +0200
@@ -28,6 +28,8 @@
  * rights to redistribute these changes.
  */
 
+#include <sys/types.h>
+
 #include <machine/frame.h>
 #include <machine/reg.h>
 
diff -ur src.old/sys/alpha/machine/pmap.h src/sys/alpha/machine/pmap.h
--- src.old/sys/alpha/machine/pmap.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/alpha/machine/pmap.h	2004-09-28 00:40:30.000000000 +0200
@@ -49,6 +49,13 @@
 #ifndef _MACHINE_PMAP_H_
 #define	_MACHINE_PMAP_H_
 
+#include <machine/types.h>
+#include <vm/vm.h>
+
+#ifndef	_PMAP_VM_
+#include <vm/pmap.h>
+#endif
+
 /*
  * Define meanings for a few software bits in the pte
  */
diff -ur src.old/sys/alpha/machine/proc.h src/sys/alpha/machine/proc.h
--- src.old/sys/alpha/machine/proc.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/alpha/machine/proc.h	2004-09-28 00:40:30.000000000 +0200
@@ -28,6 +28,12 @@
  * rights to redistribute these changes.
  */
 
+#ifndef _MACHINE_PROC_H_
+#define	_MACHINE_PROC_H_
+
+#include <sys/types.h>
+#include <machine/types.h>
+
 /*
  * Machine-dependent part of the proc struct for the Alpha.
  */
@@ -55,3 +61,5 @@
 #define MDP_UAC_SIGBUS	0x0040		/* Deliver SIGBUS upon
 					   unaligned access */
 #define MDP_UAC_MASK	(MDP_UAC_NOPRINT | MDP_UAC_NOFIX | MDP_UAC_SIGBUS)
+
+#endif /* !_MACHINE_PROC_H_ */
diff -ur src.old/sys/alpha/machine/reg.h src/sys/alpha/machine/reg.h
--- src.old/sys/alpha/machine/reg.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/alpha/machine/reg.h	2004-09-28 00:40:30.000000000 +0200
@@ -31,6 +31,8 @@
 #ifndef _ALPHA_REG_H_
 #define	_ALPHA_REG_H_
 
+#include <sys/types.h>
+
 /*
  * XXX where did this info come from?
  */
diff -ur src.old/sys/alpha/machine/types.h src/sys/alpha/machine/types.h
--- src.old/sys/alpha/machine/types.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/alpha/machine/types.h	2004-09-28 00:40:30.000000000 +0200
@@ -40,6 +40,7 @@
 #define	_MACHTYPES_H_
 
 #include <sys/cdefs.h>
+#include <sys/types.h>
 
 #if !defined(_ANSI_SOURCE) && !defined(_POSIX_SOURCE)
 typedef struct _physadr {
@@ -56,8 +57,9 @@
 typedef	unsigned long	vm_pindex_t;
 typedef	unsigned long	vm_size_t;
 
-typedef __int64_t		register_t;
-typedef __uint64_t		u_register_t;
+typedef	int64_t		segsz_t;	/* segment size */
+
+typedef	u_int32_t	fixpt_t;	/* fixed point number */
 
 #ifdef _KERNEL
 typedef	long		intfptr_t;
diff -ur src.old/sys/cam/cam_ccb.h src/sys/cam/cam_ccb.h
--- src.old/sys/cam/cam_ccb.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/cam/cam_ccb.h	2004-09-28 00:40:30.000000000 +0200
@@ -277,7 +277,7 @@
 				 * tagged operations
 				 */
 	int	mintags;
-	struct	timeval last_reset;	/* Time of last bus reset/loop init */
+	struct	__kernel_timeval last_reset;	/* Time of last bus reset/loop init */
 };
 
 typedef enum {
@@ -512,7 +512,7 @@
 /* Path Statistics CCB */
 struct ccb_pathstats {
 	struct	ccb_hdr	ccb_h;
-	struct	timeval last_reset;	/* Time of last bus reset/loop init */
+	struct	__kernel_timeval last_reset;	/* Time of last bus reset/loop init */
 };
 
 typedef union {
diff -ur src.old/sys/cam/cam_periph.h src/sys/cam/cam_periph.h
--- src.old/sys/cam/cam_periph.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/cam/cam_periph.h	2004-09-28 00:40:30.000000000 +0200
@@ -142,7 +142,7 @@
 void		cam_periph_bus_settle(struct cam_periph *periph,
 				      u_int bus_settle_ms);
 void		cam_periph_freeze_after_event(struct cam_periph *periph,
-					      struct timeval* event_time,
+					      struct __kernel_timeval* event_time,
 					      u_int duration_ms);
 int		cam_periph_error(union ccb *ccb, cam_flags camflags,
 				 u_int32_t sense_flags, union ccb *save_ccb);
diff -ur src.old/sys/dev/aac/aacvar.h src/sys/dev/aac/aacvar.h
--- src.old/sys/dev/aac/aacvar.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/dev/aac/aacvar.h	2004-09-28 00:40:30.000000000 +0200
@@ -165,7 +165,7 @@
 
 	void			(* cm_complete)(struct aac_command *cm);
 	void			*cm_private;
-	time_t			cm_timestamp;	/* command creation time */
+	__kernel_time_t			cm_timestamp;	/* command creation time */
 	int			cm_queue;
 };
 
diff -ur src.old/sys/dev/asr/sys_info.h src/sys/dev/asr/sys_info.h
--- src.old/sys/dev/asr/sys_info.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/dev/asr/sys_info.h	2004-09-28 00:40:30.000000000 +0200
@@ -458,10 +458,10 @@
 	u_int32_t	write_by_size_count[10];
 	u_int32_t	read_by_size_min_time[10];
 	u_int32_t	read_by_size_max_time[10];
-	struct timeval	read_by_size_total_time[10];
+	struct __kernel_timeval	read_by_size_total_time[10];
 	u_int32_t	write_by_size_min_time[10];
 	u_int32_t	write_by_size_max_time[10];
-	struct timeval	write_by_size_total_time[10];
+	struct __kernel_timeval	write_by_size_total_time[10];
 
 #define SIZE_512        0
 #define SIZE_1K         1
@@ -474,7 +474,7 @@
 #define SIZE_BIGGER     8
 #define SIZE_OTHER      9
 
-	struct timeval	intr_started;
+	struct __kernel_timeval	intr_started;
 } dpt_perf_t;
 #endif
 
diff -ur src.old/sys/dev/ata/atapi-cd.h src/sys/dev/ata/atapi-cd.h
--- src.old/sys/dev/ata/atapi-cd.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/dev/ata/atapi-cd.h	2004-09-28 00:40:30.000000000 +0200
@@ -320,7 +320,7 @@
     struct changer		*changer_info;	/* changer info */
     struct acd_softc		**driver;	/* softc's of changer slots */
     int				slot;		/* this instance slot number */
-    time_t			timestamp;	/* this instance timestamp */
+    __kernel_time_t			timestamp;	/* this instance timestamp */
     int				disk_size;	/* size of current media */
     int				block_size;	/* blocksize currently used */
     struct disklabel		disklabel;	/* fake disk label */
diff -ur src.old/sys/dev/dec/mcclockvar.h src/sys/dev/dec/mcclockvar.h
--- src.old/sys/dev/dec/mcclockvar.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/dev/dec/mcclockvar.h	2004-09-28 00:40:30.000000000 +0200
@@ -32,6 +32,6 @@
 
 void	mcclock_attach(device_t dev);
 void	mcclock_init(device_t);
-void	mcclock_get(device_t, time_t, struct clocktime *);
+void	mcclock_get(device_t, __kernel_time_t, struct clocktime *);
 void	mcclock_set(device_t, struct clocktime *);
 int	mcclock_getsecs(device_t dev, int *secp);
diff -ur src.old/sys/dev/dpt/dpt.h src/sys/dev/dpt/dpt.h
--- src.old/sys/dev/dpt/dpt.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/dev/dpt/dpt.h	2004-09-28 00:40:30.000000000 +0200
@@ -898,8 +898,8 @@
 
 #ifdef DPT_MEASURE_PERFORMANCE
 	u_int32_t	 submitted_time;
-	struct		 timeval command_started;
-	struct		 timeval command_ended;
+	struct		 __kernel_timeval command_started;
+	struct		 __kernel_timeval command_ended;
 #endif
 } dpt_ccb_t;
 
@@ -1005,7 +1005,7 @@
 #define SIZE_BIGGER	8
 #define SIZE_OTHER	9
 
-	struct	  timeval intr_started;
+	struct	  __kernel_timeval intr_started;
 
 	u_int32_t warm_starts;
 	u_int32_t cold_boots;
@@ -1147,7 +1147,7 @@
 #endif
 
 #ifdef DPT_RESET_HBA
-	struct timeval last_contact;
+	struct __kernel_timeval last_contact;
 #endif
 } dpt_softc_t;
 
@@ -1224,10 +1224,10 @@
  */
 #ifdef _KERNEL
 /* This function gets the current hi-res time and returns it to the caller */
-static __inline struct timeval
+static __inline struct __kernel_timeval
 dpt_time_now(void)
 {
-	struct timeval now;
+	struct __kernel_timeval now;
 
 	microtime(&now);
 	return(now);
@@ -1253,8 +1253,8 @@
  * If times are sensless, ~0 is returned.
  */
 static __inline u_int32_t
-dpt_time_delta(struct timeval start,
-	       struct timeval end)
+dpt_time_delta(struct __kernel_timeval start,
+	       struct __kernel_timeval end)
 {
     if (start.tv_sec > end.tv_sec)
 	return(~0);
diff -ur src.old/sys/dev/hfa/fore_var.h src/sys/dev/hfa/fore_var.h
--- src.old/sys/dev/hfa/fore_var.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/dev/hfa/fore_var.h	2004-09-28 00:40:30.000000000 +0200
@@ -227,7 +227,7 @@
 
 	Fore_stats	*fu_stats;	/* Device statistics buffer */
 	Fore_stats	*fu_statsd;	/* Device statistics buffer (DMA) */
-	time_t		fu_stats_time;	/* Last stats request timestamp */
+	__kernel_time_t		fu_stats_time;	/* Last stats request timestamp */
 	int		fu_stats_ret;	/* Stats request return code */
 #ifdef FORE_PCI
 	Fore_prom	*fu_prom;	/* Device PROM buffer */
diff -ur src.old/sys/dev/isp/isp_freebsd.h src/sys/dev/isp/isp_freebsd.h
--- src.old/sys/dev/isp/isp_freebsd.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/dev/isp/isp_freebsd.h	2004-09-28 00:40:30.000000000 +0200
@@ -163,7 +163,7 @@
 	if (isp->isp_osinfo.intsok)	\
 		ISP_LOCK(isp)
 
-#define	NANOTIME_T		struct timespec
+#define	NANOTIME_T		struct __kernel_timespec
 #define	GET_NANOTIME		nanotime
 #define	GET_NANOSEC(x)		((x)->tv_sec * 1000000000 + (x)->tv_nsec)
 #define	NANOTIME_SUB		nanotime_sub
@@ -420,12 +420,12 @@
 	}
 }
 
-static INLINE u_int64_t nanotime_sub(struct timespec *, struct timespec *);
+static INLINE u_int64_t nanotime_sub(struct __kernel_timespec *, struct __kernel_timespec *);
 static INLINE u_int64_t
-nanotime_sub(struct timespec *b, struct timespec *a)
+nanotime_sub(struct __kernel_timespec *b, struct __kernel_timespec *a)
 {
 	u_int64_t elapsed;
-	struct timespec x = *b;
+	struct __kernel_timespec x = *b;
 	timespecsub(&x, a);
 	elapsed = GET_NANOSEC(&x);
 	if (elapsed == 0)
diff -ur src.old/sys/dev/mlx/mlxvar.h src/sys/dev/mlx/mlxvar.h
--- src.old/sys/dev/mlx/mlxvar.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/dev/mlx/mlxvar.h	2004-09-28 00:40:30.000000000 +0200
@@ -82,7 +82,7 @@
     struct mlx_softc		*mc_sc;		/* controller that owns us */
     u_int8_t			mc_slot;	/* command slot we occupy */
     u_int16_t			mc_status;	/* command completion status */
-    time_t			mc_timeout;	/* when this command expires */
+    __kernel_time_t			mc_timeout;	/* when this command expires */
     u_int8_t			mc_mailbox[16];	/* command mailbox */
     u_int32_t			mc_sgphys;	/* physical address of s/g array in controller space */
     int				mc_nsgent;	/* number of entries in s/g map */
@@ -148,7 +148,7 @@
 #define MLX_STATE_OPEN		(1<<2)	/* control device is open */
 #define MLX_STATE_SUSPEND	(1<<3)	/* controller is suspended */
     struct callout_handle mlx_timeout;	/* periodic status monitor */
-    time_t		mlx_lastpoll;	/* last time_second we polled for status */
+    __kernel_time_t		mlx_lastpoll;	/* last time_second we polled for status */
     u_int16_t		mlx_lastevent;	/* sequence number of the last event we recorded */
     int			mlx_currevent;	/* sequence number last time we looked */
     int			mlx_background;	/* if != 0 rebuild or check is in progress */
diff -ur src.old/sys/dev/ray/if_raymib.h src/sys/dev/ray/if_raymib.h
--- src.old/sys/dev/ray/if_raymib.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/dev/ray/if_raymib.h	2004-09-28 00:40:30.000000000 +0200
@@ -1179,5 +1179,5 @@
 	u_int8_t	rsl_host[ETHER_ADDR_LEN]; /* MAC address */
 	u_int8_t	rsl_siglevs[RAY_NSIGLEV]; /* levels, newest in [0] */
 	u_int8_t	rsl_antennas[RAY_NANTENNA]; /* best antenna */
-	struct timeval	rsl_time; 		  /* time of last packet */
+	struct __kernel_timeval	rsl_time; 		  /* time of last packet */
 };
diff -ur src.old/sys/dev/usb/usb.h src/sys/dev/usb/usb.h
--- src.old/sys/dev/usb/usb.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/dev/usb/usb.h	2004-09-28 00:40:30.000000000 +0200
@@ -529,7 +529,7 @@
 #define USB_EVENT_ATTACH 1
 #define USB_EVENT_DETACH 2
 	struct usb_device_info	ue_device;
-	struct timespec		ue_time;
+	struct __kernel_timespec		ue_time;
 	usb_event_cookie_t	ue_cookie;
 };
 
diff -ur src.old/sys/dev/vinum/request.h src/sys/dev/vinum/request.h
--- src.old/sys/dev/vinum/request.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/dev/vinum/request.h	2004-09-28 00:40:30.000000000 +0200
@@ -195,7 +195,7 @@
 
 struct rqinfo {
     enum rqinfo_type type;				    /* kind of event */
-    struct timeval timestamp;				    /* time it happened */
+    struct __kernel_timeval timestamp;				    /* time it happened */
     struct buf *bp;					    /* point to user buffer */
     int devmajor;					    /* major and minor device info */
     int devminor;
diff -ur src.old/sys/dev/vinum/vinumvar.h src/sys/dev/vinum/vinumvar.h
--- src.old/sys/dev/vinum/vinumvar.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/dev/vinum/vinumvar.h	2004-09-28 00:40:30.000000000 +0200
@@ -341,8 +341,8 @@
 struct vinum_label {
     char sysname[VINUMHOSTNAMELEN];			    /* system name at time of creation */
     char name[MAXDRIVENAME];				    /* our name of the drive */
-    struct timeval date_of_birth;			    /* the time it was created */
-    struct timeval last_update;				    /* and the time of last update */
+    struct __kernel_timeval date_of_birth;			    /* the time it was created */
+    struct __kernel_timeval last_update;				    /* and the time of last update */
     /*
      * total size in bytes of the drive.  This value
      * includes the headers.
@@ -566,7 +566,7 @@
 
 #define MCFILENAMELEN	16
 struct mc {
-    struct timeval time;
+    struct __kernel_timeval time;
     int seq;
     int size;
     short line;
diff -ur src.old/sys/i386/machine/globaldata.h src/sys/i386/machine/globaldata.h
--- src.old/sys/i386/machine/globaldata.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/i386/machine/globaldata.h	2004-09-28 00:40:30.000000000 +0200
@@ -43,7 +43,7 @@
 	struct proc	*gd_curproc;
 	struct proc	*gd_npxproc;
 	struct pcb	*gd_curpcb;
-	struct timeval	gd_switchtime;
+	struct __kernel_timeval	gd_switchtime;
 	struct i386tss	gd_common_tss;
 	int		gd_switchticks;
 	struct segment_descriptor gd_common_tssd;
diff -ur src.old/sys/i386/machine/globals.h src/sys/i386/machine/globals.h
--- src.old/sys/i386/machine/globals.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/i386/machine/globals.h	2004-09-28 00:40:30.000000000 +0200
@@ -85,7 +85,7 @@
 #define	curpcb		GLOBAL_RVALUE_NV(curpcb, struct pcb *)
 #define	npxproc		GLOBAL_LVALUE(npxproc, struct proc *)
 #define	common_tss	GLOBAL_LVALUE(common_tss, struct i386tss)
-#define	switchtime	GLOBAL_LVALUE(switchtime, struct timeval)
+#define	switchtime	GLOBAL_LVALUE(switchtime, struct __kernel_timeval)
 #define	switchticks	GLOBAL_LVALUE(switchticks, int)
 
 #define	common_tssd	GLOBAL_LVALUE(common_tssd, struct segment_descriptor)
diff -ur src.old/sys/i386/machine/i4b_isppp.h src/sys/i386/machine/i4b_isppp.h
--- src.old/sys/i386/machine/i4b_isppp.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/i386/machine/i4b_isppp.h	2004-09-28 00:40:30.000000000 +0200
@@ -116,8 +116,8 @@
 	u_short pp_loopcnt;     /* loopback detection counter */
 	u_long  pp_seq;         /* local sequence number */
 	u_long  pp_rseq;        /* remote sequence number */
-	time_t  pp_last_sent;
-	time_t  pp_last_recv;
+	__kernel_time_t  pp_last_sent;
+	__kernel_time_t  pp_last_recv;
 	enum ppp_phase pp_phase;	/* phase we're currently in */
 	int	state[IDX_COUNT];	/* state machine */
 	u_char  confid[IDX_COUNT];	/* id of last configuration request */
diff -ur src.old/sys/i386/machine/i4b_trace.h src/sys/i386/machine/i4b_trace.h
--- src.old/sys/i386/machine/i4b_trace.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/i386/machine/i4b_trace.h	2004-09-28 00:40:30.000000000 +0200
@@ -54,7 +54,7 @@
 #define FROM_NT 1			/* network -> user		*/
 	int trunc;		/* # of truncated bytes (frame > MCLBYTES) */
 	unsigned int count;	/* frame count for this unit/type	*/
-	struct timeval time;	/* timestamp for this frame		*/
+	struct __kernel_timeval time;	/* timestamp for this frame		*/
 } i4b_trace_hdr_t;
 
 #define INFO0		0	/* layer 1 */
diff -ur src.old/sys/i386/machine/lock.h src/sys/i386/machine/lock.h
--- src.old/sys/i386/machine/lock.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/i386/machine/lock.h	2004-09-28 00:40:30.000000000 +0200
@@ -29,6 +29,7 @@
 #ifndef _MACHINE_LOCK_H_
 #define _MACHINE_LOCK_H_
 
+#include <features.h>
 
 #ifdef LOCORE
 
diff -ur src.old/sys/i386/machine/npx.h src/sys/i386/machine/npx.h
--- src.old/sys/i386/machine/npx.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/i386/machine/npx.h	2004-09-28 00:40:30.000000000 +0200
@@ -45,7 +45,7 @@
 #ifndef _MACHINE_NPX_H_
 #define	_MACHINE_NPX_H_
 
-#include <machine/globals.h>
+#include <sys/types.h>
 
 /* Environment information of floating point unit */
 struct	env87 {
diff -ur src.old/sys/i386/machine/pcb.h src/sys/i386/machine/pcb.h
--- src.old/sys/i386/machine/pcb.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/i386/machine/pcb.h	2004-09-28 00:40:30.000000000 +0200
@@ -43,7 +43,7 @@
 /*
  * Intel 386 process control block
  */
-#include <machine/globals.h>
+#include <sys/types.h>
 #include <machine/npx.h>
 
 struct pcb {
diff -ur src.old/sys/i386/machine/pmap.h src/sys/i386/machine/pmap.h
--- src.old/sys/i386/machine/pmap.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/i386/machine/pmap.h	2004-09-28 00:40:30.000000000 +0200
@@ -48,6 +48,13 @@
 #ifndef _MACHINE_PMAP_H_
 #define	_MACHINE_PMAP_H_
 
+#include <machine/types.h>
+#include <vm/vm.h>
+
+#ifndef	_PMAP_VM_
+#include <vm/pmap.h>
+#endif
+
 /*
  * Page-directory and page-table entires follow this format, with a few
  * of the fields not present here and there, depending on a lot of things.
diff -ur src.old/sys/i386/machine/proc.h src/sys/i386/machine/proc.h
--- src.old/sys/i386/machine/proc.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/i386/machine/proc.h	2004-09-28 00:40:30.000000000 +0200
@@ -37,8 +37,6 @@
 #ifndef _MACHINE_PROC_H_
 #define	_MACHINE_PROC_H_
 
-#include <machine/globals.h>
-
 /*
  * Machine-dependent part of the proc structure for i386.
  */
diff -ur src.old/sys/i386/machine/types.h src/sys/i386/machine/types.h
--- src.old/sys/i386/machine/types.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/i386/machine/types.h	2004-09-28 00:40:30.000000000 +0200
@@ -37,6 +37,9 @@
 #ifndef _MACHINE_TYPES_H_
 #define	_MACHINE_TYPES_H_
 
+#include <sys/cdefs.h>
+#include <sys/types.h>
+
 #if !defined(_ANSI_SOURCE) && !defined(_POSIX_SOURCE)
 typedef struct _physadr {
 	int r[1];
@@ -52,8 +55,9 @@
 typedef	unsigned int	vm_pindex_t;
 typedef	unsigned int	vm_size_t;
 
-typedef	__int32_t	register_t;
-typedef	__uint32_t	u_register_t;
+typedef	int32_t		segsz_t;	/* segment size */
+
+typedef	u_int32_t	fixpt_t;	/* fixed point number */
 
 #ifdef _KERNEL
 typedef	int		intfptr_t;
diff -ur src.old/sys/isofs/cd9660/cd9660_node.h src/sys/isofs/cd9660/cd9660_node.h
--- src.old/sys/isofs/cd9660/cd9660_node.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/isofs/cd9660/cd9660_node.h	2004-09-28 00:40:30.000000000 +0200
@@ -49,9 +49,9 @@
 #define doff_t	long
 
 typedef	struct	{
-	struct timespec	iso_atime;	/* time of last access */
-	struct timespec	iso_mtime;	/* time of last modification */
-	struct timespec	iso_ctime;	/* time file changed */
+	struct __kernel_timespec	iso_atime;	/* time of last access */
+	struct __kernel_timespec	iso_mtime;	/* time of last modification */
+	struct __kernel_timespec	iso_ctime;	/* time file changed */
 	u_short		iso_mode;	/* files access mode and type */
 	uid_t		iso_uid;	/* owner user id */
 	gid_t		iso_gid;	/* owner group id */
@@ -120,7 +120,7 @@
 			struct iso_node *, struct buf *, enum ISO_FTYPE));
 struct vnode *cd9660_ihashget __P((dev_t, ino_t));
 void cd9660_ihashins __P((struct iso_node *));
-int cd9660_tstamp_conv7 __P((u_char *, struct timespec *, enum ISO_FTYPE));
-int cd9660_tstamp_conv17 __P((u_char *, struct timespec *));
+int cd9660_tstamp_conv7 __P((u_char *, struct __kernel_timespec *, enum ISO_FTYPE));
+int cd9660_tstamp_conv17 __P((u_char *, struct __kernel_timespec *));
 
 #endif /* _KERNEL */
diff -ur src.old/sys/msdosfs/direntry.h src/sys/msdosfs/direntry.h
--- src.old/sys/msdosfs/direntry.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/msdosfs/direntry.h	2004-09-28 00:40:30.000000000 +0200
@@ -129,9 +129,9 @@
 
 #ifdef _KERNEL
 struct dirent;
-void unix2dostime __P((struct timespec *tsp, u_int16_t *ddp, 
+void unix2dostime __P((struct __kernel_timespec *tsp, u_int16_t *ddp, 
 	     u_int16_t *dtp, u_int8_t *dhp));
-void dos2unixtime __P((u_int dd, u_int dt, u_int dh, struct timespec *tsp));
+void dos2unixtime __P((u_int dd, u_int dt, u_int dh, struct __kernel_timespec *tsp));
 int dos2unixfn __P((u_char dn[11], u_char *un, int lower, int d2u_loaded, u_int8_t *d2u, int ul_loaded, u_int8_t *ul));
 int unix2dosfn __P((const u_char *un, u_char dn[12], int unlen, u_int gen, int u2d_loaded, u_int8_t *u2d, int lu_loaded, u_int8_t *lu));
 int unix2winfn __P((const u_char *un, int unlen, struct winentry *wep, int cnt, int chksum, int table_loaded, u_int16_t *u2w));
diff -ur src.old/sys/net/bpf.h src/sys/net/bpf.h
--- src.old/sys/net/bpf.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/net/bpf.h	2004-09-28 00:40:30.000000000 +0200
@@ -104,8 +104,8 @@
 #define	BIOCGDLT	_IOR('B',106, u_int)
 #define BIOCGETIF	_IOR('B',107, struct ifreq)
 #define BIOCSETIF	_IOW('B',108, struct ifreq)
-#define BIOCSRTIMEOUT	_IOW('B',109, struct timeval)
-#define BIOCGRTIMEOUT	_IOR('B',110, struct timeval)
+#define BIOCSRTIMEOUT	_IOW('B',109, struct __kernel_timeval)
+#define BIOCGRTIMEOUT	_IOR('B',110, struct __kernel_timeval)
 #define BIOCGSTATS	_IOR('B',111, struct bpf_stat)
 #define BIOCIMMEDIATE	_IOW('B',112, u_int)
 #define BIOCVERSION	_IOR('B',113, struct bpf_version)
@@ -120,7 +120,7 @@
  * Structure prepended to each packet.
  */
 struct bpf_hdr {
-	struct timeval	bh_tstamp;	/* time stamp */
+	struct __kernel_timeval	bh_tstamp;	/* time stamp */
 	bpf_u_int32	bh_caplen;	/* length of captured portion */
 	bpf_u_int32	bh_datalen;	/* original length of packet */
 	u_short		bh_hdrlen;	/* length of bpf header (this struct
diff -ur src.old/sys/net/ethernet.h src/sys/net/ethernet.h
--- src.old/sys/net/ethernet.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/net/ethernet.h	2004-09-28 00:40:30.000000000 +0200
@@ -8,6 +8,9 @@
 #ifndef _NET_ETHERNET_H_
 #define _NET_ETHERNET_H_
 
+/* Define the types u_char, u_short.  */
+#include <sys/types.h>
+
 /*
  * The number of bytes in an ethernet (MAC) address.
  */
@@ -59,6 +62,7 @@
 struct	ether_addr {
 	u_char octet[ETHER_ADDR_LEN];
 };
+#define ether_addr_octet octet
 
 #define	ETHERTYPE_PUP		0x0200	/* PUP protocol */
 #define	ETHERTYPE_IP		0x0800	/* IP protocol */
@@ -116,18 +120,7 @@
 
 #else /* _KERNEL */
 
-#include <sys/cdefs.h>
-
-/*
- * Ethernet address conversion/parsing routines.
- */
-__BEGIN_DECLS
-struct	ether_addr *ether_aton __P((const char *));
-int	ether_hostton __P((const char *, struct ether_addr *));
-int	ether_line __P((const char *, struct ether_addr *, char *));
-char 	*ether_ntoa __P((const struct ether_addr *));
-int	ether_ntohost __P((char *, const struct ether_addr *));
-__END_DECLS
+/* The API functions are declared in <netinet/ether.h>.  */
 
 #endif /* !_KERNEL */
 
diff -ur src.old/sys/net/hostcache.h src/sys/net/hostcache.h
--- src.old/sys/net/hostcache.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/net/hostcache.h	2004-09-28 00:40:30.000000000 +0200
@@ -50,7 +50,7 @@
 
 struct hcentry {
 	LIST_ENTRY(hcentry) hc_link;
-	struct	timeval hc_idlesince;	/* time last ref dropped */
+	struct	__kernel_timeval hc_idlesince;	/* time last ref dropped */
 	struct	sockaddr *hc_host;	/* address of this entry's host */
 	struct	rtentry *hc_rt;		/* route to get there */
 	/* struct nexthop *hc_nh; */
diff -ur src.old/sys/net/if.h src/sys/net/if.h
--- src.old/sys/net/if.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/net/if.h	2004-09-28 00:40:30.000000000 +0200
@@ -39,9 +39,14 @@
 
 #include <sys/queue.h>
 
+#include <features.h>
+
+#include <sys/types.h>
+#include <sys/socket.h>
+
 /*
  * <net/if.h> does not depend on <sys/time.h> on most other systems.  This
- * helps userland compatability.  (struct timeval ifi_lastchange)
+ * helps userland compatability.  (struct __kernel_timeval ifi_lastchange)
  */
 #ifndef _KERNEL
 #include <sys/time.h>
@@ -110,7 +115,7 @@
 	u_long	ifi_noproto;		/* destined for unsupported protocol */
 	u_long	ifi_hwassist;		/* HW offload capabilities */
 	u_long	ifi_unused;		/* XXX was ifi_xmittiming */
-	struct	timeval ifi_lastchange;	/* time of last administrative change */
+	struct	__kernel_timeval ifi_lastchange;	/* time of last administrative change */
 };
 
 #define	IFF_UP		0x1		/* interface is up */
@@ -223,6 +228,7 @@
 		struct	sockaddr ifru_addr;
 		struct	sockaddr ifru_dstaddr;
 		struct	sockaddr ifru_broadaddr;
+		struct	sockaddr ifru_netmask;
 		short	ifru_flags[2];
 		int	ifru_metric;
 		int	ifru_mtu;
@@ -234,6 +240,7 @@
 #define	ifr_addr	ifr_ifru.ifru_addr	/* address */
 #define	ifr_dstaddr	ifr_ifru.ifru_dstaddr	/* other end of p-to-p link */
 #define	ifr_broadaddr	ifr_ifru.ifru_broadaddr	/* broadcast address */
+#define	ifr_netmask	ifr_ifru.ifru_netmask	/* interface net mask */
 #define	ifr_flags	ifr_ifru.ifru_flags[0]	/* flags */
 #define	ifr_prevflags	ifr_ifru.ifru_flags[1]	/* flags */
 #define	ifr_metric	ifr_ifru.ifru_metric	/* metric */
diff -ur src.old/sys/net/if_arp.h src/sys/net/if_arp.h
--- src.old/sys/net/if_arp.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/net/if_arp.h	2004-09-28 00:40:30.000000000 +0200
@@ -37,6 +37,11 @@
 #ifndef _NET_IF_ARP_H_
 #define	_NET_IF_ARP_H_
 
+/* Define the types u_char, u_short.  */
+#include <sys/types.h>
+/* Define 'struct sockaddr'.  */
+#include <sys/socket.h>
+
 /*
  * Address Resolution Protocol.
  *
@@ -84,6 +89,15 @@
 	(sizeof(struct arphdr) + 2*(ar_hln) + 2*(ar_pln))
 #define arphdr_len(ap)	(arphdr_len2((ap)->ar_hln, (ap)->ar_pln))
 
+#define ar_sha(ap)	(((caddr_t)((ap)+1)) +   0)
+#define ar_spa(ap)	(((caddr_t)((ap)+1)) +   (ap)->ar_hln)
+#define ar_tha(ap)	(((caddr_t)((ap)+1)) +   (ap)->ar_hln + (ap)->ar_pln)
+#define ar_tpa(ap)	(((caddr_t)((ap)+1)) + 2*(ap)->ar_hln + (ap)->ar_pln)
+
+#define arphdr_len2(ar_hln, ar_pln)					\
+	(sizeof(struct arphdr) + 2*(ar_hln) + 2*(ar_pln))
+#define arphdr_len(ap)	(arphdr_len2((ap)->ar_hln, (ap)->ar_pln))
+
 /*
  * ARP ioctl request
  */
diff -ur src.old/sys/net/if_dl.h src/sys/net/if_dl.h
--- src.old/sys/net/if_dl.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/net/if_dl.h	2004-09-28 00:40:30.000000000 +0200
@@ -37,6 +37,10 @@
 #ifndef _NET_IF_DL_H_
 #define _NET_IF_DL_H_
 
+#include <features.h>
+
+#include <sys/types.h>
+
 /*
  * A Link-Level Sockaddr may specify the interface in one of two
  * ways: either by means of a system-provided index number (computed
@@ -74,15 +78,9 @@
 
 #define LLADDR(s) ((caddr_t)((s)->sdl_data + (s)->sdl_nlen))
 
-#ifndef _KERNEL
-
-#include <sys/cdefs.h>
-
 __BEGIN_DECLS
-void	link_addr __P((const char *, struct sockaddr_dl *));
-char	*link_ntoa __P((const struct sockaddr_dl *));
+extern void link_addr (const char *, struct sockaddr_dl *);
+extern char *link_ntoa (const struct sockaddr_dl *);
 __END_DECLS
 
-#endif /* !_KERNEL */
-
 #endif
diff -ur src.old/sys/net/if_pppvar.h src/sys/net/if_pppvar.h
--- src.old/sys/net/if_pppvar.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/net/if_pppvar.h	2004-09-28 00:40:30.000000000 +0200
@@ -74,8 +74,8 @@
 	void	*sc_xc_state;		/* transmit compressor state */
 	struct	compressor *sc_rcomp;	/* receive decompressor */
 	void	*sc_rc_state;		/* receive decompressor state */
-	time_t	sc_last_sent;		/* time (secs) last NP pkt sent */
-	time_t	sc_last_recv;		/* time (secs) last NP pkt rcvd */
+	__kernel_time_t	sc_last_sent;		/* time (secs) last NP pkt sent */
+	__kernel_time_t	sc_last_recv;		/* time (secs) last NP pkt rcvd */
 #ifdef PPP_FILTER
 	struct	bpf_program sc_pass_filt;   /* filter for packets to pass */
 	struct	bpf_program sc_active_filt; /* filter for "non-idle" packets */
diff -ur src.old/sys/net/if_sppp.h src/sys/net/if_sppp.h
--- src.old/sys/net/if_sppp.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/net/if_sppp.h	2004-09-28 00:40:30.000000000 +0200
@@ -154,8 +154,8 @@
 	int	confflags;	/* administrative configuration flags */
 #define CONF_ENABLE_VJ    0x01	/* VJ header compression enabled */
 #define CONF_ENABLE_IPV6  0x02	/* IPv6 administratively enabled */
-	time_t	pp_last_recv;	/* time last packet has been received */
-	time_t	pp_last_sent;	/* time last packet has been sent */
+	__kernel_time_t	pp_last_recv;	/* time last packet has been received */
+	__kernel_time_t	pp_last_sent;	/* time last packet has been sent */
 	struct callout_handle ch[IDX_COUNT]; /* per-proto and if callouts */
 	struct callout_handle pap_my_to_ch; /* PAP needs one more... */
 	struct slcp lcp;		/* LCP params */
diff -ur src.old/sys/net/ppp_defs.h src/sys/net/ppp_defs.h
--- src.old/sys/net/ppp_defs.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/net/ppp_defs.h	2004-09-28 00:40:30.000000000 +0200
@@ -142,8 +142,8 @@
  * the last NP packet was sent or received.
  */
 struct ppp_idle {
-    time_t xmit_idle;		/* time since last NP packet sent */
-    time_t recv_idle;		/* time since last NP packet received */
+    __kernel_time_t xmit_idle;		/* time since last NP packet sent */
+    __kernel_time_t recv_idle;		/* time since last NP packet received */
 };
 
 #ifndef __P
diff -ur src.old/sys/netatm/atm_ioctl.h src/sys/netatm/atm_ioctl.h
--- src.old/sys/netatm/atm_ioctl.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/netatm/atm_ioctl.h	2004-09-28 00:40:30.000000000 +0200
@@ -341,7 +341,7 @@
 	long		avp_obytes;		/* Bytes sent to VCC */
 	long		avp_ierrors;		/* Errors receiving from VCC */
 	long		avp_oerrors;		/* Errors sending to VCC */
-	time_t		avp_tstamp;		/* State transition timestamp */
+	__kernel_time_t		avp_tstamp;		/* State transition timestamp */
 };
 
 /*
diff -ur src.old/sys/netatm/atm_sys.h src/sys/netatm/atm_sys.h
--- src.old/sys/netatm/atm_sys.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/netatm/atm_sys.h	2004-09-28 00:40:30.000000000 +0200
@@ -232,7 +232,7 @@
  */
 #ifdef DIAGNOSTIC
 #define ATM_TIME							\
-	struct timeval now, delta;					\
+	struct __kernel_timeval now, delta;					\
 	KT_TIME(now);							\
 	delta.tv_sec = now.tv_sec - atm_debugtime.tv_sec;		\
 	delta.tv_usec = now.tv_usec - atm_debugtime.tv_usec;		\
diff -ur src.old/sys/netatm/atm_var.h src/sys/netatm/atm_var.h
--- src.old/sys/netatm/atm_var.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/netatm/atm_var.h	2004-09-28 00:40:30.000000000 +0200
@@ -66,7 +66,7 @@
 extern int		atm_init;
 extern int		atm_version;
 extern int		atm_debug;
-extern struct timeval	atm_debugtime;
+extern struct __kernel_timeval	atm_debugtime;
 extern int		atm_dev_print;
 extern int		atm_print_data;
 extern struct sp_info	atm_attributes_pool;
diff -ur src.old/sys/netatm/atm_vc.h src/sys/netatm/atm_vc.h
--- src.old/sys/netatm/atm_vc.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/netatm/atm_vc.h	2004-09-28 00:40:30.000000000 +0200
@@ -64,7 +64,7 @@
 	long		vc_obytes;	/* Bytes sent to VCC */
 	long		vc_ierrors;	/* Errors receiving from VCC */
 	long		vc_oerrors;	/* Errors sending to VCC */
-	time_t		vc_tstamp;	/* State transition timestamp */
+	__kernel_time_t		vc_tstamp;	/* State transition timestamp */
 };
 #endif	/* ATM_KERNEL */
 
diff -ur src.old/sys/netinet/if_ether.h src/sys/netinet/if_ether.h
--- src.old/sys/netinet/if_ether.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/netinet/if_ether.h	2004-09-28 00:40:30.000000000 +0200
@@ -37,6 +37,9 @@
 #ifndef _NETINET_IF_ETHER_H_
 #define _NETINET_IF_ETHER_H_
 
+/* Define 'struct in_addr'.  */
+#include <netinet/in.h>
+
 #include <net/ethernet.h>
 #include <net/if_arp.h>
 
diff -ur src.old/sys/netinet/ip_mroute.h src/sys/netinet/ip_mroute.h
--- src.old/sys/netinet/ip_mroute.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/netinet/ip_mroute.h	2004-09-28 00:40:30.000000000 +0200
@@ -187,7 +187,7 @@
     u_long	    mfc_byte_cnt;		/* byte count for src-grp    */
     u_long	    mfc_wrong_if;		/* wrong if for src-grp	     */
     int		    mfc_expire;			/* time to clean entry up    */
-    struct timeval  mfc_last_assert;		/* last time I sent an assert*/
+    struct __kernel_timeval  mfc_last_assert;		/* last time I sent an assert*/
     struct rtdetq  *mfc_stall;			/* q of packets awaiting mfc */
     struct mfc     *mfc_next;			/* next mfc entry            */
 };
@@ -216,7 +216,7 @@
     struct ifnet	*ifp;		/* Interface pkt came in on	    */
     vifi_t		xmt_vif;	/* Saved copy of imo_multicast_vif  */
 #ifdef UPCALL_TIMING
-    struct timeval	t;		/* Timestamp */
+    struct __kernel_timeval	t;		/* Timestamp */
 #endif /* UPCALL_TIMING */
     struct rtdetq	*next;		/* Next in list of packets          */
 };
@@ -241,7 +241,7 @@
  */
 struct tbf
 {
-    struct timeval tbf_last_pkt_t; /* arr. time of last pkt 	*/
+    struct __kernel_timeval tbf_last_pkt_t; /* arr. time of last pkt 	*/
     u_long tbf_n_tok;      	/* no of tokens in bucket 	*/
     u_long tbf_q_len;    	/* length of queue at this vif	*/
     u_long tbf_max_q_len;	/* max. queue length		*/
diff -ur src.old/sys/netinet6/in6_prefix.h src/sys/netinet6/in6_prefix.h
--- src.old/sys/netinet6/in6_prefix.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/netinet6/in6_prefix.h	2004-09-28 00:40:30.000000000 +0200
@@ -39,8 +39,8 @@
 	struct sockaddr_in6 rp_prefix;	/* prefix */
 	u_int32_t rp_vltime;	/* advertised valid lifetime */
 	u_int32_t rp_pltime;	/* advertised preferred lifetime */
-	time_t rp_expire;	/* expiration time of the prefix */
-	time_t rp_preferred;	/* preferred time of the prefix */
+	__kernel_time_t rp_expire;	/* expiration time of the prefix */
+	__kernel_time_t rp_preferred;	/* preferred time of the prefix */
 	struct in6_prflags rp_flags;
 	u_char	rp_origin; /* from where this prefix info is obtained */
 	struct	rp_stateflags {
diff -ur src.old/sys/netinet6/in6_var.h src/sys/netinet6/in6_var.h
--- src.old/sys/netinet6/in6_var.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/netinet6/in6_var.h	2004-09-28 00:40:30.000000000 +0200
@@ -84,8 +84,8 @@
  *	in kernel: modify preferred/expire only
  */
 struct in6_addrlifetime {
-	time_t ia6t_expire;	/* valid lifetime expiration time */
-	time_t ia6t_preferred;	/* preferred lifetime expiration time */
+	__kernel_time_t ia6t_expire;	/* valid lifetime expiration time */
+	__kernel_time_t ia6t_preferred;	/* preferred lifetime expiration time */
 	u_int32_t ia6t_vltime;	/* valid lifetime */
 	u_int32_t ia6t_pltime;	/* prefix lifetime */
 };
diff -ur src.old/sys/netinet6/ip6_mroute.h src/sys/netinet6/ip6_mroute.h
--- src.old/sys/netinet6/ip6_mroute.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/netinet6/ip6_mroute.h	2004-09-28 00:40:30.000000000 +0200
@@ -238,7 +238,7 @@
 	u_quad_t    	mf6c_byte_cnt;		/* byte count for src-grp    */
 	u_quad_t    	mf6c_wrong_if;		/* wrong if for src-grp	     */
 	int	    	mf6c_expire;		/* time to clean entry up    */
-	struct timeval  mf6c_last_assert;	/* last time I sent an assert*/
+	struct __kernel_timeval  mf6c_last_assert;	/* last time I sent an assert*/
 	struct rtdetq  *mf6c_stall;		/* pkts waiting for route */
 	struct mf6c    *mf6c_next;		/* hash table linkage */
 };
@@ -253,7 +253,7 @@
     struct mbuf 	*m;		/* A copy of the packet	    	    */
     struct ifnet	*ifp;		/* Interface pkt came in on 	    */
 #ifdef UPCALL_TIMING
-    struct timeval	t;		/* Timestamp */
+    struct __kernel_timeval	t;		/* Timestamp */
 #endif /* UPCALL_TIMING */
     struct rtdetq	*next;
 };
diff -ur src.old/sys/netinet6/ip6_var.h src/sys/netinet6/ip6_var.h
--- src.old/sys/netinet6/ip6_var.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/netinet6/ip6_var.h	2004-09-28 00:40:30.000000000 +0200
@@ -271,7 +271,7 @@
 extern int	ip6_accept_rtadv;	/* Acts as a host not a router */
 extern int	ip6_keepfaith;		/* Firewall Aided Internet Translator */
 extern int	ip6_log_interval;
-extern time_t	ip6_log_time;
+extern __kernel_time_t	ip6_log_time;
 extern int	ip6_hdrnestlimit; /* upper limit of # of extension headers */
 extern int	ip6_dad_count;		/* DupAddrDetectionTransmits */
 
diff -ur src.old/sys/netinet6/nd6.h src/sys/netinet6/nd6.h
--- src.old/sys/netinet6/nd6.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/netinet6/nd6.h	2004-09-28 00:40:30.000000000 +0200
@@ -127,7 +127,7 @@
 		u_char	origin;
 		u_int32_t vltime;
 		u_int32_t pltime;
-		time_t expire;
+		__kernel_time_t expire;
 		u_short if_index;
 		u_short advrtrs; /* number of advertisement routers */
 		struct	in6_addr advrtr[DRLSTSIZ]; /* XXX: explicit limit */
@@ -223,8 +223,8 @@
 	struct in6_addr ndpr_addr; /* address that is derived from the prefix */
 	u_int32_t ndpr_vltime;	/* advertised valid lifetime */
 	u_int32_t ndpr_pltime;	/* advertised preferred lifetime */
-	time_t ndpr_expire;	/* expiration time of the prefix */
-	time_t ndpr_preferred;	/* preferred time of the prefix */
+	__kernel_time_t ndpr_expire;	/* expiration time of the prefix */
+	__kernel_time_t ndpr_preferred;	/* preferred time of the prefix */
 	struct prf_ra ndpr_flags;
 	u_int32_t ndpr_stateflags; /* actual state flags */
 	/* list of routers that advertise the prefix: */
diff -ur src.old/sys/netncp/ncp_lib.h src/sys/netncp/ncp_lib.h
--- src.old/sys/netncp/ncp_lib.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/netncp/ncp_lib.h	2004-09-28 00:40:30.000000000 +0200
@@ -158,9 +158,9 @@
 void NWUnpackDateTime(nuint32, NW_DATE *, NW_TIME *);
 void NWUnpackDate(nuint16, NW_DATE *);
 void NWUnpackTime(nuint16, NW_TIME *);
-time_t ncp_UnpackDateTime(nuint32);
-int  ncp_GetFileServerDateAndTime(NWCONN_HANDLE, time_t *);
-int  ncp_SetFileServerDateAndTime(NWCONN_HANDLE, time_t *);
+__kernel_time_t ncp_UnpackDateTime(nuint32);
+int  ncp_GetFileServerDateAndTime(NWCONN_HANDLE, __kernel_time_t *);
+int  ncp_SetFileServerDateAndTime(NWCONN_HANDLE, __kernel_time_t *);
 NWCCODE NWDownFileServer(NWCONN_HANDLE, int);
 NWCCODE NWCloseBindery(NWCONN_HANDLE);
 NWCCODE NWOpenBindery(NWCONN_HANDLE);
@@ -217,7 +217,7 @@
 /* misc ncp calls */
 int  ncp_get_file_server_information(NWCONN_HANDLE, struct ncp_file_server_info *);
 int  ncp_get_stations_logged_info(NWCONN_HANDLE, u_int32_t,
-		struct ncp_bindery_object *, time_t *);
+		struct ncp_bindery_object *, __kernel_time_t *);
 int  ncp_get_internet_address(NWCONN_HANDLE, u_int32_t, struct ipx_addr *,
 		u_int8_t *);
 NWCCODE NWGetObjectConnectionNumbers(NWCONN_HANDLE, pnstr8, nuint16,
diff -ur src.old/sys/netncp/ncp_sock.h src/sys/netncp/ncp_sock.h
--- src.old/sys/netncp/ncp_sock.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/netncp/ncp_sock.h	2004-09-28 00:40:30.000000000 +0200
@@ -39,7 +39,7 @@
 struct ncp_rq;
 struct proc;
 struct socket;
-struct timeval;
+struct __kernel_timeval;
 
 int  ncp_sock_connect_ipx(struct ncp_conn *);
 int  ncp_sock_connect_in(struct ncp_conn *);
@@ -47,7 +47,7 @@
 int  ncp_sock_send(struct socket *so, struct mbuf *data, struct ncp_rq *rqp);
 int  ncp_sock_disconnect(struct ncp_conn *conn);
 int  ncp_poll(struct socket *so, int events);
-int  ncp_sock_rselect(struct socket *so,struct proc *p, struct timeval *tv,int events);
+int  ncp_sock_rselect(struct socket *so,struct proc *p, struct __kernel_timeval *tv,int events);
 int  ncp_sock_checksum(struct ncp_conn *conn, int enable);
 
 void ncp_check_rq(struct ncp_conn *conn);
diff -ur src.old/sys/nfs/nfs.h src/sys/nfs/nfs.h
--- src.old/sys/nfs/nfs.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/nfs/nfs.h	2004-09-28 00:40:30.000000000 +0200
@@ -40,6 +40,11 @@
 #ifndef _NFS_NFS_H_
 #define _NFS_NFS_H_
 
+#ifndef _KERNEL
+#include <sys/types.h>
+#include <sys/ucred.h>
+#include <nfs/rpcv2.h>
+#endif
 #ifdef _KERNEL
 #include "opt_nfs.h"
 #endif
@@ -202,7 +207,7 @@
 	u_char		*nsd_authstr;	/* Auth string (ret) */
 	u_int		nsd_verflen;	/* and the verfier */
 	u_char		*nsd_verfstr;
-	struct timeval	nsd_timestamp;	/* timestamp from verifier */
+	struct __kernel_timeval	nsd_timestamp;	/* timestamp from verifier */
 	u_int32_t	nsd_ttl;	/* credential ttl (sec) */
 	NFSKERBKEY_T	nsd_key;	/* Session key */
 };
@@ -404,7 +409,7 @@
 	union nethostaddr nu_haddr;	/* Host addr. for dgram sockets */
 	struct ucred	nu_cr;		/* Cred uid mapped to */
 	int		nu_expire;	/* Expiry time (sec) */
-	struct timeval	nu_timestamp;	/* Kerb. timestamp */
+	struct __kernel_timeval	nu_timestamp;	/* Kerb. timestamp */
 	u_int32_t	nu_nickname;	/* Nickname on server */
 	NFSKERBKEY_T	nu_key;		/* and session key */
 };
@@ -502,7 +507,7 @@
 	int			nd_repstat;	/* Reply status */
 	u_int32_t		nd_retxid;	/* Reply xid */
 	u_int32_t		nd_duration;	/* Lease duration */
-	struct timeval		nd_starttime;	/* Time RPC initiated */
+	struct __kernel_timeval		nd_starttime;	/* Time RPC initiated */
 	fhandle_t		nd_fh;		/* File handle */
 	struct ucred		nd_cr;		/* Credentials */
 };
diff -ur src.old/sys/nfs/nfsnode.h src/sys/nfs/nfsnode.h
--- src.old/sys/nfs/nfsnode.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/nfs/nfsnode.h	2004-09-28 00:40:30.000000000 +0200
@@ -93,23 +93,23 @@
 	u_quad_t		n_brev;		/* Modify rev when cached */
 	u_quad_t		n_lrev;		/* Modify rev for lease */
 	struct vattr		n_vattr;	/* Vnode attribute cache */
-	time_t			n_attrstamp;	/* Attr. cache timestamp */
+	__kernel_time_t			n_attrstamp;	/* Attr. cache timestamp */
 	u_int32_t		n_mode;		/* ACCESS mode cache */
 	uid_t			n_modeuid;	/* credentials having mode */
-	time_t			n_modestamp;	/* mode cache timestamp */
-	time_t			n_mtime;	/* Prev modify time. */
-	time_t			n_ctime;	/* Prev create time. */
-	time_t			n_expiry;	/* Lease expiry time */
+	__kernel_time_t			n_modestamp;	/* mode cache timestamp */
+	__kernel_time_t			n_mtime;	/* Prev modify time. */
+	__kernel_time_t			n_ctime;	/* Prev create time. */
+	__kernel_time_t			n_expiry;	/* Lease expiry time */
 	nfsfh_t			*n_fhp;		/* NFS File Handle */
 	struct vnode		*n_vnode;	/* associated vnode */
 	struct lockf		*n_lockf;	/* Locking record of file */
 	int			n_error;	/* Save write error value */
 	union {
-		struct timespec	nf_atim;	/* Special file times */
+		struct __kernel_timespec	nf_atim;	/* Special file times */
 		nfsuint64	nd_cookieverf;	/* Cookie verifier (dir only) */
 	} n_un1;
 	union {
-		struct timespec	nf_mtim;
+		struct __kernel_timespec	nf_mtim;
 		off_t		nd_direof;	/* Dir. EOF offset cache */
 	} n_un2;
 	union {
diff -ur src.old/sys/nfs/nfsrtt.h src/sys/nfs/nfsrtt.h
--- src.old/sys/nfs/nfsrtt.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/nfs/nfsrtt.h	2004-09-28 00:40:30.000000000 +0200
@@ -66,7 +66,7 @@
 		int	srtt;		/* Ave Round Trip Time */
 		int	sdrtt;		/* Ave mean deviation of RTT */
 		fsid_t	fsid;		/* Fsid for mount point */
-		struct timeval tstamp;	/* Timestamp of log entry */
+		struct __kernel_timeval tstamp;	/* Timestamp of log entry */
 	} rttl[NFSRTTLOGSIZ];
 };
 
@@ -97,7 +97,7 @@
 		u_int32_t proc;		/* NFS procedure number */
 		u_int32_t ipadr;	/* IP address of client */
 		int	resptime;	/* Response time (usec) */
-		struct timeval tstamp;	/* Timestamp of log entry */
+		struct __kernel_timeval tstamp;	/* Timestamp of log entry */
 	} drt[NFSRTTLOGSIZ];
 };
 
diff -ur src.old/sys/nfs/nqnfs.h src/sys/nfs/nqnfs.h
--- src.old/sys/nfs/nqnfs.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/nfs/nqnfs.h	2004-09-28 00:40:30.000000000 +0200
@@ -106,7 +106,7 @@
 struct nqlease {
 	LIST_ENTRY(nqlease) lc_hash;	/* Fhandle hash list */
 	CIRCLEQ_ENTRY(nqlease) lc_timer; /* Timer queue list */
-	time_t		lc_expiry;	/* Expiry time (sec) */
+	__kernel_time_t		lc_expiry;	/* Expiry time (sec) */
 	struct nqhost	lc_host;	/* Host that got lease */
 	struct nqm	*lc_morehosts;	/* Other hosts that share read lease */
 	fsid_t		lc_fsid;	/* Fhandle */
@@ -199,7 +199,7 @@
 int	nqnfs_callback __P((struct nfsmount *,struct mbuf *,struct mbuf *,caddr_t));
 int	nqnfs_clientd __P((struct nfsmount *,struct ucred *,struct nfsd_cargs *,int,caddr_t,struct proc *));
 struct nfsnode;
-void	nqnfs_clientlease __P((struct nfsmount *, struct nfsnode *, int, int, time_t, u_quad_t));
+void	nqnfs_clientlease __P((struct nfsmount *, struct nfsnode *, int, int, __kernel_time_t, u_quad_t));
 void	nqnfs_serverd __P((void));
 int	nqnfsrv_getlease __P((struct nfsrv_descript *, struct nfssvc_sock *, struct proc *, struct mbuf **));
 int	nqnfsrv_vacated __P((struct nfsrv_descript *, struct nfssvc_sock *, struct proc *, struct mbuf **));
diff -ur src.old/sys/ntfs/ntfs_subr.h src/sys/ntfs/ntfs_subr.h
--- src.old/sys/ntfs/ntfs_subr.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/ntfs/ntfs_subr.h	2004-09-28 00:40:30.000000000 +0200
@@ -82,7 +82,7 @@
 int ntfs_readattr __P(( struct ntfsmount *, struct ntnode *, u_int32_t, char *, off_t, size_t, void *, struct uio *));
 int ntfs_filesize __P(( struct ntfsmount *, struct fnode *, u_int64_t *, u_int64_t *));
 int ntfs_times __P(( struct ntfsmount *, struct ntnode *, ntfs_times_t *));
-struct timespec	ntfs_nttimetounix __P(( u_int64_t ));
+struct __kernel_timespec	ntfs_nttimetounix __P(( u_int64_t ));
 int ntfs_ntreaddir __P(( struct ntfsmount *, struct fnode *, u_int32_t, struct attr_indexentry **));
 int ntfs_runtovrun __P(( cn_t **, cn_t **, u_long *, u_int8_t *));
 int ntfs_attrtontvattr __P(( struct ntfsmount *, struct ntvattr **, struct attr * ));
diff -ur src.old/sys/nwfs/nwfs_node.h src/sys/nwfs/nwfs_node.h
--- src.old/sys/nwfs/nwfs_node.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/nwfs/nwfs_node.h	2004-09-28 00:40:30.000000000 +0200
@@ -51,9 +51,9 @@
 	struct vnode 		*n_vnode;
 	struct vattr		n_vattr;
 	struct nwmount		*n_mount;
-	time_t			n_atime;	/* attributes cache time*/
-	time_t			n_ctime;
-	time_t			n_mtime;
+	__kernel_time_t			n_atime;	/* attributes cache time*/
+	__kernel_time_t			n_ctime;
+	__kernel_time_t			n_mtime;
 	int			n_flag;
 	ncpfid			n_parent;
 	ncpfid			n_fid;
diff -ur src.old/sys/nwfs/nwfs_subr.h src/sys/nwfs/nwfs_subr.h
--- src.old/sys/nwfs/nwfs_subr.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/nwfs/nwfs_subr.h	2004-09-28 00:40:30.000000000 +0200
@@ -47,7 +47,7 @@
 struct nw_search_info;
 struct nwmount;
 struct proc;
-struct timespec;
+struct __kernel_timespec;
 struct ucred;
 struct vattr;
 struct vnode;
@@ -89,8 +89,8 @@
 		int n, struct ncp_volume_info *target,
 		struct proc *p,struct ucred *cred);
 
-void ncp_unix2dostime (struct timespec *tsp, int tz, u_int16_t *ddp, 
+void ncp_unix2dostime (struct __kernel_timespec *tsp, int tz, u_int16_t *ddp, 
 	     u_int16_t *dtp, u_int8_t *dhp);
-void ncp_dos2unixtime (u_int dd, u_int dt, u_int dh, int tz, struct timespec *tsp);
+void ncp_dos2unixtime (u_int dd, u_int dt, u_int dh, int tz, struct __kernel_timespec *tsp);
 
 #endif /* !_NWFS_SUBR_H_ */
diff -ur src.old/sys/posix4/aio.h src/sys/posix4/aio.h
--- src.old/sys/posix4/aio.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/posix4/aio.h	2004-09-28 00:40:30.000000000 +0200
@@ -53,7 +53,7 @@
 #include <time.h>
 #include <fcntl.h>
 #else
-struct timespec;
+struct __kernel_timespec;
 #endif
 #endif
 
@@ -100,7 +100,7 @@
 ssize_t aio_return __P((struct aiocb *));
 int aio_cancel __P((int, struct aiocb *));
 
-int aio_suspend __P((caio_listio_ctl[], int, const struct timespec *));
+int aio_suspend __P((caio_listio_ctl[], int, const struct __kernel_timespec *));
 
 int aio_fsync __P((int, struct aiocb *));
 __END_DECLS
diff -ur src.old/sys/posix4/posix4.h src/sys/posix4/posix4.h
--- src.old/sys/posix4/posix4.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/posix4/posix4.h	2004-09-28 00:40:30.000000000 +0200
@@ -109,7 +109,7 @@
 int ksched_get_priority_min(register_t *, struct ksched *, int);
 
 int ksched_rr_get_interval(register_t *, struct ksched *,
-	struct proc *, struct timespec *);
+	struct proc *, struct __kernel_timespec *);
 
 #endif /* _KPOSIX_PRIORITY_SCHEDULING */
 
diff -ur src.old/sys/posix4/sched.h src/sys/posix4/sched.h
--- src.old/sys/posix4/sched.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/posix4/sched.h	2004-09-28 00:40:30.000000000 +0200
@@ -68,7 +68,7 @@
 int sched_yield __P((void));
 int sched_get_priority_max __P((int));
 int sched_get_priority_min __P((int));
-int sched_rr_get_interval __P((pid_t, struct timespec *));
+int sched_rr_get_interval __P((pid_t, struct __kernel_timespec *));
 __END_DECLS
 
 #endif
diff -ur src.old/sys/sys/acct.h src/sys/sys/acct.h
--- src.old/sys/sys/acct.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/acct.h	2004-09-28 00:40:30.000000000 +0200
@@ -61,7 +61,7 @@
 	comp_t	  ac_utime;		/* user time */
 	comp_t	  ac_stime;		/* system time */
 	comp_t	  ac_etime;		/* elapsed time */
-	time_t	  ac_btime;		/* starting time */
+	__kernel_time_t	  ac_btime;		/* starting time */
 	uid_t	  ac_uid;		/* user id */
 	gid_t	  ac_gid;		/* group id */
 	u_int16_t ac_mem;		/* average memory usage */
diff -ur src.old/sys/sys/acl.h src/sys/sys/acl.h
--- src.old/sys/sys/acl.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/acl.h	2004-09-28 00:40:30.000000000 +0200
@@ -36,6 +36,9 @@
 #ifndef _SYS_ACL_H
 #define	_SYS_ACL_H
 
+#include <features.h>
+#include <sys/types.h>
+
 /*
  * POSIX.1e ACL types and related constants
  */
@@ -91,59 +94,60 @@
 #define	ACL_PERM_BITS	(ACL_PERM_EXEC | ACL_PERM_WRITE | ACL_PERM_READ)
 #define	ACL_POSIX1E_BITS	(ACL_PERM_EXEC | ACL_PERM_WRITE | ACL_PERM_READ)
 
-#ifdef _KERNEL
-
 /*
- * Storage for ACLs and support structures
- */
-#ifdef MALLOC_DECLARE
-MALLOC_DECLARE(M_ACL);
-#endif
-
-#else /* !_KERNEL */
-
-/*
- * Syscall interface -- use the library calls instead as the syscalls
+ * Syscall interface, defined in libc.
+ * You should use the libposix1e library calls instead as the syscalls
  * have strict acl entry ordering requirements
  */
 __BEGIN_DECLS
-int	__acl_aclcheck_fd(int _filedes, acl_type_t _type, struct acl *_aclp);
-int	__acl_aclcheck_file(const char *_path, acl_type_t _type,
-	    struct acl *_aclp);
-int	__acl_delete_fd(int _filedes, acl_type_t _type);
-int	__acl_delete_file(const char *_path_p, acl_type_t _type);
-int	__acl_get_fd(int _filedes, acl_type_t _type, struct acl *_aclp);
-int	__acl_get_file(const char *_path, acl_type_t _type, struct acl *_aclp);
-int	__acl_set_fd(int _filedes, acl_type_t _type, struct acl *_aclp);
-int	__acl_set_file(const char *_path, acl_type_t _type, struct acl *_aclp);
+extern int __acl_aclcheck_fd (int __fd, acl_type_t __type,
+			      struct acl *__aclp) __THROW;
+extern int __acl_aclcheck_file (__const char *__path, acl_type_t __type,
+				struct acl *__aclp) __THROW;
+extern int __acl_delete_fd (int __fd, acl_type_t __type) __THROW;
+extern int __acl_delete_file (__const char *__path, acl_type_t __type) __THROW;
+extern int __acl_get_fd (int __fd, acl_type_t __type,
+			 struct acl *__aclp) __THROW;
+extern int __acl_get_file (__const char *_path, acl_type_t __type,
+			   struct acl *__aclp) __THROW;
+extern int __acl_set_fd (int __fd, acl_type_t __type,
+			 struct acl *__aclp) __THROW;
+extern int __acl_set_file (__const char *__path, acl_type_t __type,
+			   struct acl *_aclp) __THROW;
 __END_DECLS
 
 /*
- * Supported POSIX.1e ACL manipulation and assignment/retrieval API
+ * Supported POSIX.1e ACL manipulation and assignment/retrieval API,
+ * defined in libposix1e.
  * _np calls are local extensions that reflect an environment capable of
  * opening file descriptors of directories, and allowing additional
  * ACL type for different file systems (i.e., AFS)
  */
 __BEGIN_DECLS
-int	acl_delete_fd_np(int _filedes, acl_type_t _type);
-int	acl_delete_file_np(const char *_path_p, acl_type_t _type);
-int	acl_delete_def_file(const char *_path_p);
-acl_t	acl_dup(acl_t _acl);
-int	acl_free(void *_obj_p);
-acl_t	acl_from_text(const char *_buf_p);
-acl_t	acl_get_fd(int _fd);
-acl_t	acl_get_fd_np(int fd, acl_type_t _type);
-acl_t	acl_get_file(const char *_path_p, acl_type_t _type);
-acl_t	acl_init(int _count);
-int	acl_set_fd(int _fd, acl_t _acl);
-int	acl_set_fd_np(int _fd, acl_t _acl, acl_type_t _type);
-int	acl_set_file(const char *_path_p, acl_type_t _type, acl_t _acl);
-char	*acl_to_text(acl_t _acl, ssize_t *_len_p);
-int	acl_valid(acl_t _acl);
-int	acl_valid_fd_np(int _fd, acl_type_t _type, acl_t _acl);
-int	acl_valid_file_np(const char *_path_p, acl_type_t _type, acl_t _acl);
+extern int acl_delete_fd_np (int __fd,
+			     acl_type_t __type) __THROW;
+extern int acl_delete_file_np (__const char *__path,
+			       acl_type_t __type) __THROW;
+extern int acl_delete_def_file (__const char *__path) __THROW;
+extern acl_t acl_dup (acl_t __acl) __THROW;
+extern int acl_free (void *__obj) __THROW;
+extern acl_t acl_from_text (__const char *__buf) __THROW;
+extern acl_t acl_get_fd (int __fd) __THROW;
+extern acl_t acl_get_fd_np (int __fd, acl_type_t __type) __THROW;
+extern acl_t acl_get_file (__const char *__path, acl_type_t __type) __THROW;
+extern acl_t acl_init (int __count) __THROW;
+extern int acl_set_fd (int __fd,
+		       acl_t __acl) __THROW;
+extern int acl_set_fd_np (int __fd,
+			  acl_t __acl, acl_type_t __type) __THROW;
+extern int acl_set_file (__const char *__path,
+			 acl_type_t __type, acl_t __acl) __THROW;
+extern char *acl_to_text (acl_t __acl, ssize_t *__lenp) __THROW;
+extern int acl_valid (acl_t __acl) __THROW;
+extern int acl_valid_fd_np (int __fd,
+			    acl_type_t __type, acl_t __acl) __THROW;
+extern int acl_valid_file_np (__const char *__path,
+			      acl_type_t __type, acl_t __acl) __THROW;
 __END_DECLS
 
-#endif /* !_KERNEL */
-
 #endif /* !_SYS_ACL_H */
diff -ur src.old/sys/sys/aio.h src/sys/sys/aio.h
--- src.old/sys/sys/aio.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/aio.h	2004-09-28 00:40:30.000000000 +0200
@@ -116,9 +116,9 @@
 /*
  * Suspend until all specified I/O or timeout is complete.
  */
-int	aio_suspend(const struct aiocb * const[], int, const struct timespec *);
+int	aio_suspend(const struct aiocb * const[], int, const struct __kernel_timespec *);
 
-int	aio_waitcomplete(struct aiocb **, struct timespec *);
+int	aio_waitcomplete(struct aiocb **, struct __kernel_timespec *);
 
 __END_DECLS
 
diff -ur src.old/sys/sys/callout.h src/sys/sys/callout.h
--- src.old/sys/sys/callout.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/callout.h	2004-09-28 00:40:30.000000000 +0200
@@ -42,6 +42,8 @@
 #ifndef _SYS_CALLOUT_H_
 #define _SYS_CALLOUT_H_
 
+#include <features.h>
+
 #include <sys/queue.h>
 
 SLIST_HEAD(callout_list, callout);
diff -ur src.old/sys/sys/devicestat.h src/sys/sys/devicestat.h
--- src.old/sys/sys/devicestat.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/devicestat.h	2004-09-28 00:40:30.000000000 +0200
@@ -174,23 +174,23 @@
 						      * and head of queue 
 						      * tags sent.
 						      */
-	struct timeval		dev_creation_time;   /* 
+	struct __kernel_timeval		dev_creation_time;   /* 
 						      * Time the device was
 						      * created.
 						      */
-	struct timeval 		busy_time;	     /*
+	struct __kernel_timeval 		busy_time;	     /*
 						      * Total amount of
 						      * time drive has spent 
 						      * processing requests.
 						      */
-	struct timeval		start_time;	     /*
+	struct __kernel_timeval		start_time;	     /*
 						      * The time when
 						      * busy_count was 
 						      * last == 0.  Or, the
 						      * start of the latest 
 						      * busy period.
 						      */
-	struct timeval		last_comp_time;	     /*
+	struct __kernel_timeval		last_comp_time;	     /*
 						      * Last time a
 						      * transaction was 
 						      * completed.
diff -ur src.old/sys/sys/dvdio.h src/sys/sys/dvdio.h
--- src.old/sys/sys/dvdio.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/dvdio.h	2004-09-28 00:40:30.000000000 +0200
@@ -31,6 +31,8 @@
 #ifndef _SYS_DVDIO_H_
 #define _SYS_DVDIO_H_
 
+#include <sys/types.h>
+
 struct dvd_layer {
 	u_int8_t book_type	:4;
 	u_int8_t book_version	:4;
diff -ur src.old/sys/sys/errno.h src/sys/sys/errno.h
--- src.old/sys/sys/errno.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/errno.h	2004-09-28 00:42:26.000000000 +0200
@@ -39,16 +39,8 @@
  * $FreeBSD: src/sys/sys/errno.h,v 1.14.2.2 2002/01/22 10:46:56 keramida Exp $
  */
 
-#ifndef _SYS_ERRNO_H_
-#define _SYS_ERRNO_H_
-
-#ifndef _KERNEL
-#include <sys/cdefs.h>
-__BEGIN_DECLS
-int *	__error __P((void));
-__END_DECLS
-#define	errno		(* __error())
-#endif
+#ifndef _ERRNO_H_
+#define _ERRNO_H_
 
 #define	EPERM		1		/* Operation not permitted */
 #define	ENOENT		2		/* No such file or directory */
@@ -65,9 +57,7 @@
 #define	ENOMEM		12		/* Cannot allocate memory */
 #define	EACCES		13		/* Permission denied */
 #define	EFAULT		14		/* Bad address */
-#ifndef _POSIX_SOURCE
 #define	ENOTBLK		15		/* Block device required */
-#endif
 #define	EBUSY		16		/* Device busy */
 #define	EEXIST		17		/* File exists */
 #define	EXDEV		18		/* Cross-device link */
@@ -78,9 +68,7 @@
 #define	ENFILE		23		/* Too many open files in system */
 #define	EMFILE		24		/* Too many open files */
 #define	ENOTTY		25		/* Inappropriate ioctl for device */
-#ifndef _POSIX_SOURCE
 #define	ETXTBSY		26		/* Text file busy */
-#endif
 #define	EFBIG		27		/* File too large */
 #define	ENOSPC		28		/* No space left on device */
 #define	ESPIPE		29		/* Illegal seek */
@@ -88,13 +76,21 @@
 #define	EMLINK		31		/* Too many links */
 #define	EPIPE		32		/* Broken pipe */
 
+#endif /* <errno.h> included.  */
+
 /* math software */
+
+#if !defined(__Emath_defined) &&  (defined(_ERRNO_H) || defined(__need_Emath))
 #define	EDOM		33		/* Numerical argument out of domain */
+#endif /* Emath not defined and <errno.h> included or need Emath.  */
+#if !defined(__Emath_defined) &&  (defined(_ERRNO_H) || defined(__need_Emath))
 #define	ERANGE		34		/* Result too large */
+#endif /* Emath not defined and <errno.h> included or need Emath.  */
+
+#ifdef _ERRNO_H
 
 /* non-blocking and interrupt i/o */
 #define	EAGAIN		35		/* Resource temporarily unavailable */
-#ifndef _POSIX_SOURCE
 #define	EWOULDBLOCK	EAGAIN		/* Operation would block */
 #define	EINPROGRESS	36		/* Operation now in progress */
 #define	EALREADY	37		/* Operation already in progress */
@@ -129,18 +125,14 @@
 #define	ECONNREFUSED	61		/* Connection refused */
 
 #define	ELOOP		62		/* Too many levels of symbolic links */
-#endif /* _POSIX_SOURCE */
 #define	ENAMETOOLONG	63		/* File name too long */
 
 /* should be rearranged */
-#ifndef _POSIX_SOURCE
 #define	EHOSTDOWN	64		/* Host is down */
 #define	EHOSTUNREACH	65		/* No route to host */
-#endif /* _POSIX_SOURCE */
 #define	ENOTEMPTY	66		/* Directory not empty */
 
 /* quotas & mush */
-#ifndef _POSIX_SOURCE
 #define	EPROCLIM	67		/* Too many processes */
 #define	EUSERS		68		/* Too many users */
 #define	EDQUOT		69		/* Disc quota exceeded */
@@ -153,29 +145,46 @@
 #define	EPROGUNAVAIL	74		/* RPC prog. not avail */
 #define	EPROGMISMATCH	75		/* Program version wrong */
 #define	EPROCUNAVAIL	76		/* Bad procedure for program */
-#endif /* _POSIX_SOURCE */
 
 #define	ENOLCK		77		/* No locks available */
 #define	ENOSYS		78		/* Function not implemented */
 
-#ifndef _POSIX_SOURCE
 #define	EFTYPE		79		/* Inappropriate file type or format */
+
 #define	EAUTH		80		/* Authentication error */
 #define	ENEEDAUTH	81		/* Need authenticator */
 #define	EIDRM		82		/* Identifier removed */
 #define	ENOMSG		83		/* No message of desired type */
 #define	EOVERFLOW	84		/* Value too large to be stored in data type */
 #define	ECANCELED	85		/* Operation canceled */
+
+#endif /* <errno.h> included.  */
+
+#if !defined(__Emath_defined) &&  (defined(_ERRNO_H) || defined(__need_Emath))
 #define	EILSEQ		86		/* Illegal byte sequence */
+#endif /* Emath not defined and <errno.h> included or need Emath.  */
+
+#ifdef _ERRNO_H
+
 #define	ELAST		86		/* Must be equal largest errno */
 
-#endif /* _POSIX_SOURCE */
 
-#ifdef _KERNEL
-/* pseudo-errors returned inside kernel to modify return to process */
-#define	ERESTART	(-1)		/* restart syscall */
-#define	EJUSTRETURN	(-2)		/* don't modify regs, just return */
-#define	ENOIOCTL	(-3)		/* ioctl not handled by this layer */
-#endif
+#ifndef __ASSEMBLER__
+/* We now need a declaration of the `errno' variable.  */
+extern int errno;
+
+/* Function to get address of global `errno' variable.  */
+extern int *__errno_location (void) __THROW __attribute__ ((__const__));
+
+# if defined _LIBC
+/* We wouldn't need a special macro anymore but it is history.  */
+#  define __set_errno(val) (*__errno_location ()) = (val)
+# endif /* _LIBC */
+
+# if !defined _LIBC || defined _LIBC_REENTRANT
+/* When using threads, errno is a per-thread value.  */
+#  define errno (*__errno_location ())
+# endif
+#endif /* !__ASSEMBLER__ */
 
-#endif
+#endif /* <errno.h> included.  */
diff -ur src.old/sys/sys/event.h src/sys/sys/event.h
--- src.old/sys/sys/event.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/event.h	2004-09-28 00:40:30.000000000 +0200
@@ -172,13 +172,13 @@
 #else 	/* !_KERNEL */
 
 #include <sys/cdefs.h>
-struct timespec;
+struct __kernel_timespec;
 
 __BEGIN_DECLS
 int     kqueue __P((void));
 int     kevent __P((int kq, const struct kevent *changelist, int nchanges,
 		    struct kevent *eventlist, int nevents,
-		    const struct timespec *timeout));
+		    const struct __kernel_timespec *timeout));
 __END_DECLS
 
 #endif /* !_KERNEL */
diff -ur src.old/sys/sys/extattr.h src/sys/sys/extattr.h
--- src.old/sys/sys/extattr.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/extattr.h	2004-09-28 00:40:30.000000000 +0200
@@ -41,23 +41,24 @@
 
 #ifndef _SYS_EXTATTR_H_
 #define	_SYS_EXTATTR_H_
-#ifdef _KERNEL
 
-#define	EXTATTR_MAXNAMELEN	NAME_MAX
-
-#else
-#include <sys/cdefs.h>
+#include <features.h>
 
 struct iovec;
 
 __BEGIN_DECLS
-int	extattrctl(const char *path, int cmd, const char *attrname, char *arg);
-int	extattr_delete_file(const char *path, const char *attrname);
-int	extattr_get_file(const char *path, const char *attrname,
-	    struct iovec *iovp, unsigned iovcnt);
-int	extattr_set_file(const char *path, const char *attrname,
-	    struct iovec *iovp, unsigned iovcnt);
+
+extern int extattrctl (__const char *__path, int __cmd, const char *__attrname,
+		       char *__arg) __THROW;
+extern int extattr_delete_file (__const char *__path, __const char *__attrname)
+     __THROW;
+extern int extattr_get_file (__const char *__path, __const char *__attrname,
+			     struct iovec *__iovp, unsigned int __iovcnt)
+     __THROW;
+extern int extattr_set_file (__const char *__path, __const char *__attrname,
+			     struct iovec *__iovp, unsigned int __iovcnt)
+     __THROW;
+
 __END_DECLS
 
-#endif /* !_KERNEL */
 #endif /* !_SYS_EXTATTR_H_ */
diff -ur src.old/sys/sys/filedesc.h src/sys/sys/filedesc.h
--- src.old/sys/sys/filedesc.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/filedesc.h	2004-09-28 00:40:30.000000000 +0200
@@ -37,6 +37,7 @@
 #ifndef _SYS_FILEDESC_H_
 #define _SYS_FILEDESC_H_
 
+#include <sys/types.h>
 #include <sys/queue.h>
 
 /*
diff -ur src.old/sys/sys/jail.h src/sys/sys/jail.h
--- src.old/sys/sys/jail.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/jail.h	2004-09-28 00:40:30.000000000 +0200
@@ -13,6 +13,10 @@
 #ifndef _SYS_JAIL_H_
 #define _SYS_JAIL_H_
 
+#include <features.h>
+
+#include <sys/types.h>
+
 struct jail {
 	u_int32_t	version;
 	char		*path;
@@ -22,7 +26,11 @@
 
 #ifndef _KERNEL
 
-int jail __P((struct jail *));
+__BEGIN_DECLS
+
+extern int jail (struct jail *__jailp) __THROW;
+
+__END_DECLS
 
 #else /* _KERNEL */
 
diff -ur src.old/sys/sys/kernel.h src/sys/sys/kernel.h
--- src.old/sys/sys/kernel.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/kernel.h	2004-09-28 00:40:30.000000000 +0200
@@ -63,7 +63,7 @@
 extern char kernelname[MAXPATHLEN];
 
 /* 1.2 */
-extern struct timeval boottime;
+extern struct __kernel_timeval boottime;
 
 extern struct timezone tz;			/* XXX */
 
diff -ur src.old/sys/sys/linker.h src/sys/sys/linker.h
--- src.old/sys/sys/linker.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/linker.h	2004-09-28 00:40:30.000000000 +0200
@@ -199,6 +199,13 @@
 int linker_ddb_symbol_values(c_linker_sym_t _sym, linker_symval_t *_symval);
 
 
+#else
+
+#include <features.h>
+
+#include <sys/param.h>
+#include <sys/types.h>
+
 #endif	/* _KERNEL */
 
 /*
@@ -270,26 +277,45 @@
     size_t	size;		/* size in bytes */
 };
 
+/* Possible commands for kldsym.  */
+enum
+{
+  KLDSYM_LOOKUP = 1		/* Kernel symbol lookup.  */
+#define KLDSYM_LOOKUP KLDSYM_LOOKUP
+};
+
 struct kld_sym_lookup {
     int		version;	/* set to sizeof(struct kld_sym_lookup) */
     char	*symname;	/* Symbol name we are looking up */
     u_long	symvalue;
     size_t	symsize;
 };
-#define KLDSYM_LOOKUP	1
 
 #ifndef _KERNEL
 
-#include <sys/cdefs.h>
-
 __BEGIN_DECLS
-int	kldload(const char* _file);
-int	kldunload(int _fileid);
-int	kldfind(const char* _file);
-int	kldnext(int _fileid);
-int	kldstat(int _fileid, struct kld_file_stat* _stat);
-int	kldfirstmod(int _fileid);
-int	kldsym(int _fileid, int _cmd, void *_data);
+
+/* Load a KLD kernel module into the kernel.  */
+extern int kldload (__const char *__file) __THROW;
+
+/* Unload a KLD kernel module from the kernel.  */
+extern int kldunload (int __fileid) __THROW;
+
+/* Return the fileid of loaded KLD kernel module.  */
+extern int kldfind (__const char *__file) __THROW;
+
+/* Return the fileid of the next loaded KLD kernel module after FILEID.  */
+extern int kldnext (int __fileid) __THROW;
+
+/* Return info about the loaded KLD kernel module FILEID in *STATP.  */
+extern int kldstat (int __fileid, struct kld_file_stat *__statp) __THROW;
+
+/* Return the moduleid of the first module referenced by FILEID.  */
+extern int kldfirstmod (int __fileid) __THROW;
+
+/* Perform an operation related to kernel module symbols.  */
+extern int kldsym (int __fileid, int __cmd, void*__data) __THROW;
+
 __END_DECLS
 
 #endif
diff -ur src.old/sys/sys/lock.h src/sys/sys/lock.h
--- src.old/sys/sys/lock.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/lock.h	2004-09-28 00:40:30.000000000 +0200
@@ -41,7 +41,7 @@
 #ifndef	_LOCK_H_
 #define	_LOCK_H_
 
-
+#include <sys/types.h>
 #include <machine/lock.h>
 
 /*
diff -ur src.old/sys/sys/memrange.h src/sys/sys/memrange.h
--- src.old/sys/sys/memrange.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/memrange.h	2004-09-28 00:40:30.000000000 +0200
@@ -4,6 +4,11 @@
  * $FreeBSD: src/sys/sys/memrange.h,v 1.4.2.1 2002/04/28 22:57:52 dwmalone Exp $
  */
 
+#ifndef _SYS_MEMRANGE_H_
+#define _SYS_MEMRANGE_H_
+
+#include <sys/types.h>
+
 /* Memory range attributes */
 #define MDF_UNCACHEABLE		(1<<0)	/* region not cached */
 #define MDF_WRITECOMBINE	(1<<1)	/* region supports "write combine" action */
@@ -68,3 +73,4 @@
 extern void mem_range_AP_init(void);
 #endif
 
+#endif /* _SYS_MEMRANGE_H_ */
diff -ur src.old/sys/sys/param.h src/sys/sys/param.h
--- src.old/sys/sys/param.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/param.h	2004-09-28 00:40:30.000000000 +0200
@@ -56,22 +56,10 @@
 #undef __FreeBSD_version
 #define __FreeBSD_version 460101	/* Master, propagated to newvers */
 
-#ifndef NULL
-#define	NULL	0
-#endif
-
-#ifndef LOCORE
+/* Some inet code expects that this file defines the 'u_int32_t' type.  */
 #include <sys/types.h>
-#endif
 
-/*
- * Machine-independent constants (some used in following include files).
- * Redefined constants are from POSIX 1003.1 limits file.
- *
- * MAXCOMLEN should be >= sizeof(ac_comm) (see <acct.h>)
- * MAXLOGNAME should be == UT_NAMESIZE+1 (see <utmp.h>)
- */
-#include <sys/syslimits.h>
+#include <limits.h>
 
 #define	MAXCOMLEN	16		/* max command name remembered */
 #define	MAXINTERP	32		/* max interpreter file name length */
@@ -83,26 +71,7 @@
 #define	NOGROUP		65535		/* marker for empty group set member */
 #define MAXHOSTNAMELEN	256		/* max hostname size */
 
-/* More types and definitions used throughout the kernel. */
-#ifdef _KERNEL
-#include <sys/cdefs.h>
-#include <sys/errno.h>
-#include <sys/time.h>
-
-#define	FALSE	0
-#define	TRUE	1
-#endif
-
-#ifndef _KERNEL
-/* Signals. */
-#include <sys/signal.h>
-#endif
-
-/* Machine type dependent parameters. */
 #include <machine/param.h>
-#ifndef _KERNEL
-#include <machine/limits.h>
-#endif
 
 /*
  * Priorities.  Note that with 32 run queues, differences less than 4 are
@@ -122,36 +91,14 @@
 #define	PUSER	50
 #define	MAXPRI	127		/* Priorities range from 0 through MAXPRI. */
 
-#define	PRIMASK	0x0ff
-#define	PCATCH	0x100		/* OR'd with pri for tsleep to check signals */
+#define PRIMASK	0x0ff
+#define PCATCH	0x100		/* OR'd with pri for tsleep to check signals */
 
-#define	NZERO	0		/* default "nice" */
+#define NBPW	sizeof(int)	/* number of bytes per word (integer) */
 
-#define	NBPW	sizeof(int)	/* number of bytes per word (integer) */
+#define CMASK	022		/* default file mask: S_IWGRP|S_IWOTH */
 
-#define	CMASK	022		/* default file mask: S_IWGRP|S_IWOTH */
-#ifdef _KERNEL
-#define	NODEV	(dev_t)(-1)	/* non-existent device */
-#define	NOUDEV	(udev_t)(-1)	/* non-existent device */
-#define	NOMAJ	256		/* non-existent device */
-#else
-#define	NODEV	(dev_t)(-1)	/* non-existent device */
-#endif
-
-/*
- * Clustering of hardware pages on machines with ridiculously small
- * page sizes is done here.  The paging subsystem deals with units of
- * CLSIZE pte's describing PAGE_SIZE (from machine/machparam.h) pages each.
- */
-#if 0
-#define	CLBYTES		(CLSIZE*PAGE_SIZE)
-#endif
-
-#define	CBLOCK	128		/* Clist block size, must be a power of 2. */
-#define CBQSIZE	(CBLOCK/NBBY)	/* Quote bytes/cblock - can do better. */
-				/* Data chars/clist. */
-#define	CBSIZE	(CBLOCK - sizeof(struct cblock *) - CBQSIZE)
-#define	CROUND	(CBLOCK - 1)	/* Clist rounding. */
+#define NODEV	(dev_t)(-1)	/* non-existent device */
 
 /*
  * File system parameters and macros.
@@ -209,32 +156,8 @@
 #define powerof2(x)	((((x)-1)&(x))==0)
 
 /* Macros for min/max. */
-#ifndef _KERNEL
 #define	MIN(a,b) (((a)<(b))?(a):(b))
 #define	MAX(a,b) (((a)>(b))?(a):(b))
-#endif
-
-/*
- * Constants for setting the parameters of the kernel memory allocator.
- *
- * 2 ** MINBUCKET is the smallest unit of memory that will be
- * allocated. It must be at least large enough to hold a pointer.
- *
- * Units of memory less or equal to MAXALLOCSAVE will permanently
- * allocate physical memory; requests for these size pieces of
- * memory are quite fast. Allocations greater than MAXALLOCSAVE must
- * always allocate and free physical memory; requests for these
- * size allocations should be done infrequently as they will be slow.
- *
- * Constraints: PAGE_SIZE <= MAXALLOCSAVE <= 2 ** (MINBUCKET + 14), and
- * MAXALLOCSIZE must be a power of two.
- */
-#if defined(__alpha__)
-#define MINBUCKET	5		/* 5 => min allocation of 32 bytes */
-#else
-#define MINBUCKET	4		/* 4 => min allocation of 16 bytes */
-#endif
-#define MAXALLOCSAVE	(2 * PAGE_SIZE)
 
 /*
  * Scale factor for scaled integers used to count %cpu time and load avgs.
@@ -256,13 +179,4 @@
 #define ctodb(db)			/* calculates pages to devblks */ \
 	((db) << (PAGE_SHIFT - DEV_BSHIFT))
 
-
-/*
- * Make this available for most of the kernel.  There were too many
- * things that included sys/systm.h just for panic().
- */
-#ifdef _KERNEL
-void	panic __P((const char *, ...)) __dead2 __printflike(1, 2);
-#endif
-
 #endif	/* _SYS_PARAM_H_ */
diff -ur src.old/sys/sys/pciio.h src/sys/sys/pciio.h
--- src.old/sys/sys/pciio.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/pciio.h	2004-09-28 00:40:30.000000000 +0200
@@ -31,6 +31,7 @@
 #ifndef _SYS_PCIIO_H_
 #define	_SYS_PCIIO_H_
 
+#include <sys/types.h>
 #include <sys/ioccom.h>
 
 #define PCI_MAXNAMELEN	16
diff -ur src.old/sys/sys/pipe.h src/sys/sys/pipe.h
--- src.old/sys/sys/pipe.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/pipe.h	2004-09-28 00:40:30.000000000 +0200
@@ -25,7 +25,7 @@
 #define _SYS_PIPE_H_
 
 #ifndef _KERNEL
-#include <sys/time.h>			/* for struct timespec */
+#include <sys/time.h>			/* for struct __kernel_timespec */
 #include <sys/select.h>			/* for struct selinfo */
 #include <vm/vm.h>			/* for vm_page_t */
 #include <machine/param.h>		/* for PAGE_SIZE */
@@ -99,9 +99,9 @@
 	struct	pipebuf pipe_buffer;	/* data storage */
 	struct	pipemapping pipe_map;	/* pipe mapping for direct I/O */
 	struct	selinfo pipe_sel;	/* for compat with select */
-	struct	timespec pipe_atime;	/* time of last access */
-	struct	timespec pipe_mtime;	/* time of last modify */
-	struct	timespec pipe_ctime;	/* time of status change */
+	struct	__kernel_timespec pipe_atime;	/* time of last access */
+	struct	__kernel_timespec pipe_mtime;	/* time of last modify */
+	struct	__kernel_timespec pipe_ctime;	/* time of status change */
 	struct	sigio *pipe_sigio;	/* information for async I/O */
 	struct	pipe *pipe_peer;	/* link with other direction */
 	u_int	pipe_state;		/* pipe status info */
diff -ur src.old/sys/sys/proc.h src/sys/sys/proc.h
--- src.old/sys/sys/proc.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/proc.h	2004-09-28 00:40:30.000000000 +0200
@@ -42,6 +42,7 @@
 #ifndef _SYS_PROC_H_
 #define	_SYS_PROC_H_
 
+#include <machine/types.h>
 #include <machine/proc.h>		/* Machine-dependent proc substruct. */
 #include <sys/callout.h>		/* For struct callout_handle. */
 #include <sys/filedesc.h>
@@ -49,7 +50,7 @@
 #include <sys/rtprio.h>			/* For struct rtprio. */
 #include <sys/signal.h>
 #ifndef _KERNEL
-#include <sys/time.h>			/* For structs itimerval, timeval. */
+#include <sys/time.h>			/* For structs __kernel_itimerval, __kernel_timeval. */
 #endif
 #include <sys/ucred.h>
 #include <sys/event.h>			/* For struct klist */
@@ -172,7 +173,7 @@
 	u_int	p_swtime;	 /* Time swapped in or out. */
 	u_int	p_slptime;	 /* Time since last blocked. */
 
-	struct	itimerval p_realtimer;	/* Alarm timer. */
+	struct	__kernel_itimerval p_realtimer;	/* Alarm timer. */
 	u_int64_t p_runtime;		/* Real time in microsec. */
 	u_int64_t p_uu;			/* Previous user time in microsec. */
 	u_int64_t p_su;			/* Previous system time in microsec. */
@@ -378,7 +379,7 @@
 extern struct proc *curproc;		/* Current running proc. */
 extern u_int astpending;		/* software interrupt pending */
 extern int switchticks;			/* `ticks' at last context switch. */
-extern struct timeval switchtime;	/* Uptime at last context switch */
+extern struct __kernel_timeval switchtime;	/* Uptime at last context switch */
 #endif
 extern struct proc proc0;		/* Process slot for swapper. */
 extern int hogticks;			/* Limit on kernel cpu hogs. */
diff -ur src.old/sys/sys/procfs.h src/sys/sys/procfs.h
--- src.old/sys/sys/procfs.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/procfs.h	2004-09-28 00:40:30.000000000 +0200
@@ -65,8 +65,6 @@
     gregset_t	pr_reg;		/* General purpose registers (1) */
 } prstatus_t;
 
-typedef fpregset_t prfpregset_t;
-
 #define PRARGSZ		80	/* Maximum argument bytes saved */
 
 #define PRPSINFO_VERSION	1	/* Current version of prpsinfo_t */
@@ -78,4 +76,15 @@
     char	pr_psargs[PRARGSZ+1];	/* Arguments, null terminated (1) */
 } prpsinfo_t;
 
+/* Addresses.  */
+typedef void *psaddr_t;
+
+/* Register sets.  */
+typedef gregset_t prgregset_t;
+typedef fpregset_t prfpregset_t;
+
+/* We don't have any differences between processes and threads,
+   therefore have only one PID type.  */
+typedef __pid_t lwpid_t;
+
 #endif /* _SYS_PROCFS_H_ */
diff -ur src.old/sys/sys/reboot.h src/sys/sys/reboot.h
--- src.old/sys/sys/reboot.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/reboot.h	2004-09-28 00:40:30.000000000 +0200
@@ -37,6 +37,8 @@
 #ifndef _SYS_REBOOT_H_
 #define _SYS_REBOOT_H_
 
+#include <features.h>
+
 /*
  * Arguments to reboot system call.  These are passed to
  * the boot program and on to init.
@@ -104,4 +106,11 @@
 	((controller) << B_CONTROLLERSHIFT) | ((unit) << B_UNITSHIFT) | \
 	((partition) << B_PARTITIONSHIFT) | B_DEVMAGIC)
 
+__BEGIN_DECLS
+
+/* Reboot or halt the system.  */
+extern int reboot (int __howto) __THROW;
+
+__END_DECLS
+
 #endif
diff -ur src.old/sys/sys/resourcevar.h src/sys/sys/resourcevar.h
--- src.old/sys/sys/resourcevar.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/resourcevar.h	2004-09-28 00:40:30.000000000 +0200
@@ -39,6 +39,8 @@
 
 #include <sys/resource.h>
 #include <sys/queue.h>
+#include <sys/time.h>
+#include <sys/types.h>
 
 /*
  * Kernel per-process accounting / statistics
@@ -51,7 +53,7 @@
 #define	pstat_endzero	pstat_startcopy
 
 #define	pstat_startcopy	p_timer
-	struct	itimerval p_timer[3];	/* virtual-time timers */
+	struct	__kernel_itimerval p_timer[3];	/* virtual-time timers */
 
 	struct uprof {			/* profile arguments */
 		caddr_t	pr_base;	/* buffer base */
@@ -62,7 +64,7 @@
 		u_long	pr_ticks;	/* temp storage for ticks until AST */
 	} p_prof;
 #define	pstat_endcopy	p_start
-	struct	timeval p_start;	/* starting time */
+	struct	__kernel_timeval p_start;	/* starting time */
 };
 
 /*
@@ -98,8 +100,8 @@
 
 void	 addupc_intr __P((struct proc *p, u_long pc, u_int ticks));
 void	 addupc_task __P((struct proc *p, u_long pc, u_int ticks));
-void	 calcru __P((struct proc *p, struct timeval *up, struct timeval *sp,
-	    struct timeval *ip));
+void	 calcru __P((struct proc *p, struct __kernel_timeval *up, struct __kernel_timeval *sp,
+	    struct __kernel_timeval *ip));
 int	 chgproccnt __P((struct uidinfo *uip, int diff, int max));
 int	 chgsbsize __P((struct uidinfo *uip, u_long *hiwat, u_long to,
 	    rlim_t max));
diff -ur src.old/sys/sys/rtprio.h src/sys/sys/rtprio.h
--- src.old/sys/sys/rtprio.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/rtprio.h	2004-09-28 00:40:30.000000000 +0200
@@ -34,6 +34,10 @@
 #ifndef _SYS_RTPRIO_H_
 #define _SYS_RTPRIO_H_
 
+#include <features.h>
+
+#include <sys/types.h>
+
 /*
  * Process realtime-priority specifications to rtprio.
  */
@@ -63,18 +67,20 @@
 #define RTP_LOOKUP		0
 #define RTP_SET			1
 
-#ifndef LOCORE
 struct rtprio {
 	u_short type;
 	u_short prio;
 };
-#endif
-
-#ifndef _KERNEL
-#include <sys/cdefs.h>
 
 __BEGIN_DECLS
-int	rtprio __P((int, pid_t, struct rtprio *));
+
+extern int rtprio (int __function, __pid_t __pid, struct rtprio *__rtp)
+     __THROW;
+
+#ifdef _LIBC
+extern int __rtprio (int __function, __pid_t __pid, struct rtprio *__rtp);
+#endif
+
 __END_DECLS
-#endif	/* !_KERNEL */
+
 #endif	/* !_SYS_RTPRIO_H_ */
diff -ur src.old/sys/sys/signalvar.h src/sys/sys/signalvar.h
--- src.old/sys/sys/signalvar.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/signalvar.h	2004-09-28 00:40:30.000000000 +0200
@@ -46,6 +46,9 @@
  * not exported to user programs.
  */
 
+#define	_SIG_WORDS	4
+#define	_SIG_MAXSIG	128
+
 /*
  * Process signal actions and state, needed only within the process
  * (not necessarily resident).
@@ -62,6 +65,8 @@
 	sigset_t ps_usertramp;		/* SunOS compat; libc sigtramp XXX */
 };
 
+#if 0
+
 /*
  * Compatibility.
  */
@@ -83,6 +88,8 @@
 
 typedef void __osiginfohandler_t __P((int, osiginfo_t *, void *));
 
+#endif
+
 /* additional signal action values, used only temporarily/internally */
 #define	SIG_CATCH	((__sighandler_t *)2)
 #define SIG_HOLD        ((__sighandler_t *)3)
@@ -169,7 +176,7 @@
 	int i;
 
 	for (i = 0; i < _SIG_WORDS; i++) {
-		if (set->__bits[i])
+		if (set->__sigbits[i])
 			return (0);
 	}
 	return (1);
@@ -181,7 +188,7 @@
 	int i;
 
 	for (i = 0; i < _SIG_WORDS; i++) {
-		if (set1->__bits[i] != set2->__bits[i])
+		if (set1->__sigbits[i] != set2->__sigbits[i])
 			return (0);
 	}
 	return (1);
diff -ur src.old/sys/sys/sysctl.h src/sys/sys/sysctl.h
--- src.old/sys/sys/sysctl.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/sysctl.h	2004-09-28 00:40:30.000000000 +0200
@@ -40,8 +40,7 @@
 #ifndef _SYS_SYSCTL_H_
 #define	_SYS_SYSCTL_H_
 
-#include <sys/_posix.h>
-#include <sys/queue.h>
+#include <features.h>
 
 /*
  * Definitions for sysctl call.  The sysctl call uses a hierarchical name
@@ -95,177 +94,6 @@
  */ 
 #define OID_AUTO	(-1)
 
-#ifdef _KERNEL
-#define SYSCTL_HANDLER_ARGS struct sysctl_oid *oidp, void *arg1, int arg2, \
-	struct sysctl_req *req
-
-/*
- * This describes the access space for a sysctl request.  This is needed
- * so that we can use the interface from the kernel or from user-space.
- */
-struct sysctl_req {
-	struct proc	*p;
-	int		lock;
-	void		*oldptr;
-	size_t		oldlen;
-	size_t		oldidx;
-	int		(*oldfunc)(struct sysctl_req *, const void *, size_t);
-	void		*newptr;
-	size_t		newlen;
-	size_t		newidx;
-	int		(*newfunc)(struct sysctl_req *, void *, size_t);
-};
-
-SLIST_HEAD(sysctl_oid_list, sysctl_oid);
-
-/*
- * This describes one "oid" in the MIB tree.  Potentially more nodes can
- * be hidden behind it, expanded by the handler.
- */
-struct sysctl_oid {
-	struct sysctl_oid_list *oid_parent;
-	SLIST_ENTRY(sysctl_oid) oid_link;
-	int		oid_number;
-	int		oid_kind;
-	void		*oid_arg1;
-	int		oid_arg2;
-	const char	*oid_name;
-	int 		(*oid_handler)(SYSCTL_HANDLER_ARGS);
-	const char	*oid_fmt;
-	int		oid_refcnt;
-};
-
-#define SYSCTL_IN(r, p, l) (r->newfunc)(r, p, l)
-#define SYSCTL_OUT(r, p, l) (r->oldfunc)(r, p, l)
-
-int sysctl_handle_int(SYSCTL_HANDLER_ARGS);
-int sysctl_handle_long(SYSCTL_HANDLER_ARGS);
-int sysctl_handle_intptr(SYSCTL_HANDLER_ARGS);
-int sysctl_handle_string(SYSCTL_HANDLER_ARGS);
-int sysctl_handle_opaque(SYSCTL_HANDLER_ARGS);
-
-/*
- * These functions are used to add/remove an oid from the mib.
- */
-void sysctl_register_oid(struct sysctl_oid *oidp);
-void sysctl_unregister_oid(struct sysctl_oid *oidp);
-
-/* Declare a static oid to allow child oids to be added to it. */
-#define SYSCTL_DECL(name)					\
-	extern struct sysctl_oid_list sysctl_##name##_children
-
-/* Hide these in macros */
-#define	SYSCTL_CHILDREN(oid_ptr) (struct sysctl_oid_list *) \
-	(oid_ptr)->oid_arg1
-#define	SYSCTL_STATIC_CHILDREN(oid_name) \
-	(&sysctl_##oid_name##_children)
-
-/* === Structs and macros related to context handling === */
-
-/* All dynamically created sysctls can be tracked in a context list. */
-struct sysctl_ctx_entry {
-	struct sysctl_oid *entry;
-	TAILQ_ENTRY(sysctl_ctx_entry) link;
-};
-
-TAILQ_HEAD(sysctl_ctx_list, sysctl_ctx_entry);
-
-/* This constructs a "raw" MIB oid. */
-#define SYSCTL_OID(parent, nbr, name, kind, a1, a2, handler, fmt, descr) \
-	static struct sysctl_oid sysctl__##parent##_##name = {		 \
-		&sysctl_##parent##_children, { 0 },			 \
-		nbr, kind, a1, a2, #name, handler, fmt, 0 };		 \
-	DATA_SET(sysctl_set, sysctl__##parent##_##name);
-
-#define SYSCTL_ADD_OID(ctx, parent, nbr, name, kind, a1, a2, handler, fmt, descr) \
-	sysctl_add_oid(ctx, parent, nbr, name, kind, a1, a2, handler, fmt, descr);
-
-/* This constructs a node from which other oids can hang. */
-#define SYSCTL_NODE(parent, nbr, name, access, handler, descr)		    \
-	struct sysctl_oid_list sysctl_##parent##_##name##_children;	    \
-	SYSCTL_OID(parent, nbr, name, CTLTYPE_NODE|access,		    \
-		   (void*)&sysctl_##parent##_##name##_children, 0, handler, \
-		   "N", descr);
-
-#define SYSCTL_ADD_NODE(ctx, parent, nbr, name, access, handler, descr)	    \
-	sysctl_add_oid(ctx, parent, nbr, name, CTLTYPE_NODE|access,	    \
-	0, 0, handler, "N", descr);
-
-/* Oid for a string.  len can be 0 to indicate '\0' termination. */
-#define SYSCTL_STRING(parent, nbr, name, access, arg, len, descr) \
-	SYSCTL_OID(parent, nbr, name, CTLTYPE_STRING|access, \
-		arg, len, sysctl_handle_string, "A", descr)
-
-#define SYSCTL_ADD_STRING(ctx, parent, nbr, name, access, arg, len, descr)  \
-	sysctl_add_oid(ctx, parent, nbr, name, CTLTYPE_STRING|access,	    \
-	arg, len, sysctl_handle_string, "A", descr);
-
-/* Oid for an int.  If ptr is NULL, val is returned. */
-#define SYSCTL_INT(parent, nbr, name, access, ptr, val, descr) \
-	SYSCTL_OID(parent, nbr, name, CTLTYPE_INT|access, \
-		ptr, val, sysctl_handle_int, "I", descr)
-
-#define SYSCTL_ADD_INT(ctx, parent, nbr, name, access, ptr, val, descr)	    \
-	sysctl_add_oid(ctx, parent, nbr, name, CTLTYPE_INT|access,	    \
-	ptr, val, sysctl_handle_int, "I", descr);
-
-/* Oid for an unsigned int.  If ptr is NULL, val is returned. */
-#define SYSCTL_UINT(parent, nbr, name, access, ptr, val, descr) \
-	SYSCTL_OID(parent, nbr, name, CTLTYPE_UINT|access, \
-		ptr, val, sysctl_handle_int, "IU", descr)
-
-#define SYSCTL_ADD_UINT(ctx, parent, nbr, name, access, ptr, val, descr)    \
-	sysctl_add_oid(ctx, parent, nbr, name, CTLTYPE_UINT|access,	    \
-	ptr, val, sysctl_handle_int, "IU", descr);
-
-/* Oid for a long.  The pointer must be non NULL. */
-#define SYSCTL_LONG(parent, nbr, name, access, ptr, val, descr) \
-	SYSCTL_OID(parent, nbr, name, CTLTYPE_LONG|access, \
-		ptr, val, sysctl_handle_long, "L", descr)
-
-#define SYSCTL_ADD_LONG(ctx, parent, nbr, name, access, ptr, descr)	    \
-	sysctl_add_oid(ctx, parent, nbr, name, CTLTYPE_LONG|access,	    \
-	ptr, 0, sysctl_handle_long, "L", descr);
-
-/* Oid for a long.  The pointer must be non NULL. */
-#define SYSCTL_ULONG(parent, nbr, name, access, ptr, val, descr) \
-	SYSCTL_OID(parent, nbr, name, CTLTYPE_ULONG|access, \
-		ptr, val, sysctl_handle_long, "LU", descr)
-
-#define SYSCTL_ADD_ULONG(ctx, parent, nbr, name, access, ptr, descr)	    \
-	sysctl_add_oid(ctx, parent, nbr, name, CTLTYPE_ULONG|access,	    \
-	ptr, 0, sysctl_handle_long, "LU", descr);
-
-/* Oid for an opaque object.  Specified by a pointer and a length. */
-#define SYSCTL_OPAQUE(parent, nbr, name, access, ptr, len, fmt, descr) \
-	SYSCTL_OID(parent, nbr, name, CTLTYPE_OPAQUE|access, \
-		ptr, len, sysctl_handle_opaque, fmt, descr)
-
-#define SYSCTL_ADD_OPAQUE(ctx, parent, nbr, name, access, ptr, len, fmt, descr)\
-	sysctl_add_oid(ctx, parent, nbr, name, CTLTYPE_OPAQUE|access,	    \
-	ptr, len, sysctl_handle_opaque, fmt, descr);
-
-/* Oid for a struct.  Specified by a pointer and a type. */
-#define SYSCTL_STRUCT(parent, nbr, name, access, ptr, type, descr) \
-	SYSCTL_OID(parent, nbr, name, CTLTYPE_OPAQUE|access, \
-		ptr, sizeof(struct type), sysctl_handle_opaque, \
-		"S," #type, descr)
-
-#define SYSCTL_ADD_STRUCT(ctx, parent, nbr, name, access, ptr, type, descr) \
-	sysctl_add_oid(ctx, parent, nbr, name, CTLTYPE_OPAQUE|access,	    \
-	ptr, sizeof(struct type), sysctl_handle_opaque, "S," #type, descr);
-
-/* Oid for a procedure.  Specified by a pointer and an arg. */
-#define SYSCTL_PROC(parent, nbr, name, access, ptr, arg, handler, fmt, descr) \
-	SYSCTL_OID(parent, nbr, name, access, \
-		ptr, arg, handler, fmt, descr)
-
-#define SYSCTL_ADD_PROC(ctx, parent, nbr, name, access, ptr, arg, handler, fmt, descr) \
-	sysctl_add_oid(ctx, parent, nbr, name, access,			    \
-	ptr, arg, handler, fmt, descr);
-
-#endif /* _KERNEL */
-
 /*
  * Top-level identifiers
  */
@@ -308,7 +136,7 @@
 #define	KERN_SECURELVL	 	 9	/* int: system security level */
 #define	KERN_HOSTNAME		10	/* string: hostname */
 #define	KERN_HOSTID		11	/* int: host identifier */
-#define	KERN_CLOCKRATE		12	/* struct: struct clockrate */
+#define	KERN_CLOCKRATE		12	/* struct: struct clockinfo */
 #define	KERN_VNODE		13	/* struct: vnode structures */
 #define	KERN_PROC		14	/* struct: process entries */
 #define	KERN_FILE		15	/* struct: file entries */
@@ -539,66 +367,137 @@
 	{ "timer_max", CTLTYPE_INT }, \
 }
 
-#ifdef _KERNEL
+
+/* Other sysctl identifiers from <sys/mount.h>.  */
+
+/*
+ * Sysctl CTL_VFS definitions.
+ *
+ * Second level identifier specifies which filesystem. Second level
+ * identifier VFS_VFSCONF returns information about all filesystems.
+ * Second level identifier VFS_GENERIC is non-terminal.
+ */
+#define	VFS_VFSCONF		0	/* get configured filesystems */
+#define	VFS_GENERIC		0	/* generic filesystem information */
+/*
+ * Third level identifiers for VFS_GENERIC are given below; third
+ * level identifiers for specific filesystems are given in their
+ * mount specific header files.
+ */
+#define VFS_MAXTYPENUM	1	/* int: highest defined filesystem type */
+#define VFS_CONF	2	/* struct: vfsconf for filesystem given
+				   as next argument */
+
+
+/* Other sysctl identifiers from <vm/vm_param.h>.  */
 
 /*
- * Declare some common oids.
+ * CTL_VM identifiers
  */
-extern struct sysctl_oid_list sysctl__children;
-SYSCTL_DECL(_kern);
-SYSCTL_DECL(_sysctl);
-SYSCTL_DECL(_vm);
-SYSCTL_DECL(_vfs);
-SYSCTL_DECL(_net);
-SYSCTL_DECL(_debug);
-SYSCTL_DECL(_hw);
-SYSCTL_DECL(_machdep);
-SYSCTL_DECL(_user);
-SYSCTL_DECL(_compat);
-
-extern char	machine[];
-extern char	osrelease[];
-extern char	ostype[];
-
-struct linker_set;
-
-/* Dynamic oid handling */
-struct sysctl_oid *sysctl_add_oid(struct sysctl_ctx_list *clist,
-		struct sysctl_oid_list *parent, int nbr, const char *name,
-		int kind, void *arg1, int arg2,
-		int (*handler) (SYSCTL_HANDLER_ARGS),
-		const char *fmt, const char *descr);
-int	sysctl_remove_oid(struct sysctl_oid *oidp, int del, int recurse);
-int	sysctl_ctx_init(struct sysctl_ctx_list *clist);
-int	sysctl_ctx_free(struct sysctl_ctx_list *clist);
-struct	sysctl_ctx_entry *sysctl_ctx_entry_add(struct sysctl_ctx_list *clist,
-		struct sysctl_oid *oidp);
-struct	sysctl_ctx_entry *sysctl_ctx_entry_find(struct sysctl_ctx_list *clist,
-		struct sysctl_oid *oidp);
-int	sysctl_ctx_entry_del(struct sysctl_ctx_list *clist,
-		struct sysctl_oid *oidp);
-
-/* Linker set based oid handling */
-void	sysctl_register_set(struct linker_set *lsp);
-void	sysctl_unregister_set(struct linker_set *lsp);
-
-int	kernel_sysctl(struct proc *p, int *name, u_int namelen, void *old,
-		      size_t *oldlenp, void *new, size_t newlen,
-		      size_t *retval);
-int	userland_sysctl(struct proc *p, int *name, u_int namelen, void *old,
-			size_t *oldlenp, int inkernel, void *new, size_t newlen,
-			size_t *retval);
-int	sysctl_find_oid(int *name, u_int namelen, struct sysctl_oid **noid,
-			int *nindx, struct sysctl_req *req);
+#define	VM_METER		1	/* struct vmmeter */
+#define	VM_LOADAVG	 	2	/* struct loadavg */
+#define VM_V_FREE_MIN		3	/* cnt.v_free_min */
+#define VM_V_FREE_TARGET	4	/* cnt.v_free_target */
+#define VM_V_FREE_RESERVED	5	/* cnt.v_free_reserved */
+#define VM_V_INACTIVE_TARGET	6	/* cnt.v_inactive_target */
+#define VM_V_CACHE_MIN		7	/* cnt.v_cache_max */
+#define VM_V_CACHE_MAX		8	/* cnt.v_cache_min */
+#define VM_V_PAGEOUT_FREE_MIN	9	/* cnt.v_pageout_free_min */
+#define	VM_PAGEOUT_ALGORITHM	10	/* pageout algorithm */
+#define VM_SWAPPING_ENABLED	11	/* swapping enabled */
+#define	VM_MAXID		12	/* number of valid vm ids */
+
+#define CTL_VM_NAMES { \
+	{ 0, 0 }, \
+	{ "vmmeter", CTLTYPE_STRUCT }, \
+	{ "loadavg", CTLTYPE_STRUCT }, \
+	{ "v_free_min", CTLTYPE_INT }, \
+	{ "v_free_target", CTLTYPE_INT }, \
+	{ "v_free_reserved", CTLTYPE_INT }, \
+	{ "v_inactive_target", CTLTYPE_INT }, \
+	{ "v_cache_min", CTLTYPE_INT }, \
+	{ "v_cache_max", CTLTYPE_INT }, \
+	{ "v_pageout_free_min", CTLTYPE_INT}, \
+	{ "pageout_algorithm", CTLTYPE_INT}, \
+	{ "swapping_enabled", CTLTYPE_INT},\
+}
+
+
+/* Other sysctl identifiers from <sys/socket.h>.  */
+
+#define CTL_NET_NAMES { \
+	{ 0, 0 }, \
+	{ "unix", CTLTYPE_NODE }, \
+	{ "inet", CTLTYPE_NODE }, \
+	{ "implink", CTLTYPE_NODE }, \
+	{ "pup", CTLTYPE_NODE }, \
+	{ "chaos", CTLTYPE_NODE }, \
+	{ "xerox_ns", CTLTYPE_NODE }, \
+	{ "iso", CTLTYPE_NODE }, \
+	{ "emca", CTLTYPE_NODE }, \
+	{ "datakit", CTLTYPE_NODE }, \
+	{ "ccitt", CTLTYPE_NODE }, \
+	{ "ibm_sna", CTLTYPE_NODE }, \
+	{ "decnet", CTLTYPE_NODE }, \
+	{ "dec_dli", CTLTYPE_NODE }, \
+	{ "lat", CTLTYPE_NODE }, \
+	{ "hylink", CTLTYPE_NODE }, \
+	{ "appletalk", CTLTYPE_NODE }, \
+	{ "route", CTLTYPE_NODE }, \
+	{ "link_layer", CTLTYPE_NODE }, \
+	{ "xtp", CTLTYPE_NODE }, \
+	{ "coip", CTLTYPE_NODE }, \
+	{ "cnt", CTLTYPE_NODE }, \
+	{ "rtip", CTLTYPE_NODE }, \
+	{ "ipx", CTLTYPE_NODE }, \
+	{ "sip", CTLTYPE_NODE }, \
+	{ "pip", CTLTYPE_NODE }, \
+	{ "isdn", CTLTYPE_NODE }, \
+	{ "key", CTLTYPE_NODE }, \
+	{ "inet6", CTLTYPE_NODE }, \
+	{ "natm", CTLTYPE_NODE }, \
+	{ "atm", CTLTYPE_NODE }, \
+	{ "hdrcomplete", CTLTYPE_NODE }, \
+	{ "netgraph", CTLTYPE_NODE }, \
+}
+
+/*
+ * PF_ROUTE - Routing table
+ *
+ * Three additional levels are defined:
+ *	Fourth: address family, 0 is wildcard
+ *	Fifth: type of info, defined below
+ *	Sixth: flag(s) to mask with for NET_RT_FLAGS
+ */
+#define NET_RT_DUMP	1		/* dump; may limit to a.f. */
+#define NET_RT_FLAGS	2		/* by flags, e.g. RESOLVING */
+#define NET_RT_IFLIST	3		/* survey interface list */
+#define	NET_RT_MAXID	4
+
+#define CTL_NET_RT_NAMES { \
+	{ 0, 0 }, \
+	{ "dump", CTLTYPE_STRUCT }, \
+	{ "flags", CTLTYPE_STRUCT }, \
+	{ "iflist", CTLTYPE_STRUCT }, \
+}
 
-#else	/* !_KERNEL */
-#include <sys/cdefs.h>
 
 __BEGIN_DECLS
-int	sysctl __P((int *, u_int, void *, size_t *, void *, size_t));
-int	sysctlbyname __P((const char *, void *, size_t *, void *, size_t));
-int	sysctlnametomib __P((const char *, int *, size_t *));
+
+#define __need_size_t
+#include <stddef.h>
+
+/* Read or write system parameters.  */
+extern int sysctl (int *__name, int __nlen, void *__oldval, size_t *__oldlenp,
+		   void *__newval, size_t __newlen) __THROW;
+extern int sysctlbyname (const char *__name, void *__oldval, size_t *__oldlenp,
+			 void *__newval, size_t __newlen) __THROW;
+#ifdef _LIBC
+extern int __sysctlbyname (const char *__name,
+			   void *__oldval, size_t *__oldlenp,
+			   void *__newval, size_t __newlen) __THROW;
+#endif
+
 __END_DECLS
-#endif	/* _KERNEL */
 
 #endif	/* !_SYS_SYSCTL_H_ */
diff -ur src.old/sys/sys/syslimits.h src/sys/sys/syslimits.h
--- src.old/sys/sys/syslimits.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/syslimits.h	2004-09-28 00:40:30.000000000 +0200
@@ -45,20 +45,13 @@
 #define	MAX_CANON		  255	/* max bytes in term canon input line */
 #define	MAX_INPUT		  255	/* max bytes in terminal input */
 #define	NAME_MAX		  255	/* max bytes in a file name */
+#ifndef NGROUPS_MAX
 #define	NGROUPS_MAX		   16	/* max supplemental group id's */
+#endif
 #ifndef OPEN_MAX
 #define	OPEN_MAX		   64	/* max open files per process */
 #endif
 #define	PATH_MAX		 1024	/* max bytes in pathname */
 #define	PIPE_BUF		  512	/* max bytes for atomic pipe writes */
 
-#define	BC_BASE_MAX		   99	/* max ibase/obase values in bc(1) */
-#define	BC_DIM_MAX		 2048	/* max array elements in bc(1) */
-#define	BC_SCALE_MAX		   99	/* max scale value in bc(1) */
-#define	BC_STRING_MAX		 1000	/* max const string length in bc(1) */
-#define	COLL_WEIGHTS_MAX	    0	/* max weights for order keyword */
-#define	EXPR_NEST_MAX		   32	/* max expressions nested in expr(1) */
-#define	LINE_MAX		 2048	/* max bytes in an input line */
-#define	RE_DUP_MAX		  255	/* max RE's in interval notation */
-
 #endif
diff -ur src.old/sys/sys/sysproto.h src/sys/sys/sysproto.h
--- src.old/sys/sys/sysproto.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/sysproto.h	2004-09-28 00:40:30.000000000 +0200
@@ -297,8 +297,8 @@
 };
 struct	setitimer_args {
 	u_int	which;	char which_[PAD_(u_int)];
-	struct itimerval *	itv;	char itv_[PAD_(struct itimerval *)];
-	struct itimerval *	oitv;	char oitv_[PAD_(struct itimerval *)];
+	struct __kernel_itimerval *	itv;	char itv_[PAD_(struct __kernel_itimerval *)];
+	struct __kernel_itimerval *	oitv;	char oitv_[PAD_(struct __kernel_itimerval *)];
 };
 struct	owait_args {
 	register_t dummy;
@@ -308,7 +308,7 @@
 };
 struct	getitimer_args {
 	u_int	which;	char which_[PAD_(u_int)];
-	struct itimerval *	itv;	char itv_[PAD_(struct itimerval *)];
+	struct __kernel_itimerval *	itv;	char itv_[PAD_(struct __kernel_itimerval *)];
 };
 struct	getdtablesize_args {
 	register_t dummy;
@@ -327,7 +327,7 @@
 	fd_set *	in;	char in_[PAD_(fd_set *)];
 	fd_set *	ou;	char ou_[PAD_(fd_set *)];
 	fd_set *	ex;	char ex_[PAD_(fd_set *)];
-	struct timeval *	tv;	char tv_[PAD_(struct timeval *)];
+	struct __kernel_timeval *	tv;	char tv_[PAD_(struct __kernel_timeval *)];
 };
 struct	fsync_args {
 	int	fd;	char fd_[PAD_(int)];
@@ -368,7 +368,7 @@
 	int	backlog;	char backlog_[PAD_(int)];
 };
 struct	gettimeofday_args {
-	struct timeval *	tp;	char tp_[PAD_(struct timeval *)];
+	struct __kernel_timeval *	tp;	char tp_[PAD_(struct __kernel_timeval *)];
 	struct timezone *	tzp;	char tzp_[PAD_(struct timezone *)];
 };
 struct	getrusage_args {
@@ -393,7 +393,7 @@
 	u_int	iovcnt;	char iovcnt_[PAD_(u_int)];
 };
 struct	settimeofday_args {
-	struct timeval *	tv;	char tv_[PAD_(struct timeval *)];
+	struct __kernel_timeval *	tv;	char tv_[PAD_(struct __kernel_timeval *)];
 	struct timezone *	tzp;	char tzp_[PAD_(struct timezone *)];
 };
 struct	fchown_args {
@@ -452,11 +452,11 @@
 };
 struct	utimes_args {
 	char *	path;	char path_[PAD_(char *)];
-	struct timeval *	tptr;	char tptr_[PAD_(struct timeval *)];
+	struct __kernel_timeval *	tptr;	char tptr_[PAD_(struct __kernel_timeval *)];
 };
 struct	adjtime_args {
-	struct timeval *	delta;	char delta_[PAD_(struct timeval *)];
-	struct timeval *	olddelta;	char olddelta_[PAD_(struct timeval *)];
+	struct __kernel_timeval *	delta;	char delta_[PAD_(struct __kernel_timeval *)];
+	struct __kernel_timeval *	olddelta;	char olddelta_[PAD_(struct __kernel_timeval *)];
 };
 struct	ogethostid_args {
 	register_t dummy;
@@ -636,7 +636,7 @@
 };
 struct	futimes_args {
 	int	fd;	char fd_[PAD_(int)];
-	struct timeval *	tptr;	char tptr_[PAD_(struct timeval *)];
+	struct __kernel_timeval *	tptr;	char tptr_[PAD_(struct __kernel_timeval *)];
 };
 struct	getpgid_args {
 	pid_t	pid;	char pid_[PAD_(pid_t)];
@@ -704,19 +704,19 @@
 };
 struct	clock_gettime_args {
 	clockid_t	clock_id;	char clock_id_[PAD_(clockid_t)];
-	struct timespec *	tp;	char tp_[PAD_(struct timespec *)];
+	struct __kernel_timespec *	tp;	char tp_[PAD_(struct __kernel_timespec *)];
 };
 struct	clock_settime_args {
 	clockid_t	clock_id;	char clock_id_[PAD_(clockid_t)];
-	const struct timespec *	tp;	char tp_[PAD_(const struct timespec *)];
+	const struct __kernel_timespec *	tp;	char tp_[PAD_(const struct __kernel_timespec *)];
 };
 struct	clock_getres_args {
 	clockid_t	clock_id;	char clock_id_[PAD_(clockid_t)];
-	struct timespec *	tp;	char tp_[PAD_(struct timespec *)];
+	struct __kernel_timespec *	tp;	char tp_[PAD_(struct __kernel_timespec *)];
 };
 struct	nanosleep_args {
-	const struct timespec *	rqtp;	char rqtp_[PAD_(const struct timespec *)];
-	struct timespec *	rmtp;	char rmtp_[PAD_(struct timespec *)];
+	const struct __kernel_timespec *	rqtp;	char rqtp_[PAD_(const struct __kernel_timespec *)];
+	struct __kernel_timespec *	rmtp;	char rmtp_[PAD_(struct __kernel_timespec *)];
 };
 struct	minherit_args {
 	void *	addr;	char addr_[PAD_(void *)];
@@ -750,7 +750,7 @@
 };
 struct	lutimes_args {
 	char *	path;	char path_[PAD_(char *)];
-	struct timeval *	tptr;	char tptr_[PAD_(struct timeval *)];
+	struct __kernel_timeval *	tptr;	char tptr_[PAD_(struct __kernel_timeval *)];
 };
 struct	nstat_args {
 	char *	path;	char path_[PAD_(char *)];
@@ -827,7 +827,7 @@
 struct	aio_suspend_args {
 	struct aiocb *const *	aiocbp;	char aiocbp_[PAD_(struct aiocb *const *)];
 	int	nent;	char nent_[PAD_(int)];
-	const struct timespec *	timeout;	char timeout_[PAD_(const struct timespec *)];
+	const struct __kernel_timespec *	timeout;	char timeout_[PAD_(const struct __kernel_timespec *)];
 };
 struct	aio_cancel_args {
 	int	fd;	char fd_[PAD_(int)];
@@ -852,7 +852,7 @@
 	register_t dummy;
 };
 struct	thr_sleep_args {
-	const struct timespec *	timeout;	char timeout_[PAD_(const struct timespec *)];
+	const struct __kernel_timespec *	timeout;	char timeout_[PAD_(const struct __kernel_timespec *)];
 };
 struct	thr_wakeup_args {
 	pid_t	pid;	char pid_[PAD_(pid_t)];
@@ -894,7 +894,7 @@
 };
 struct	sched_rr_get_interval_args {
 	pid_t	pid;	char pid_[PAD_(pid_t)];
-	struct timespec *	interval;	char interval_[PAD_(struct timespec *)];
+	struct __kernel_timespec *	interval;	char interval_[PAD_(struct __kernel_timespec *)];
 };
 struct	utrace_args {
 	const void *	addr;	char addr_[PAD_(const void *)];
@@ -998,7 +998,7 @@
 };
 struct	aio_waitcomplete_args {
 	struct aiocb **	aiocbp;	char aiocbp_[PAD_(struct aiocb **)];
-	struct timespec *	timeout;	char timeout_[PAD_(struct timespec *)];
+	struct __kernel_timespec *	timeout;	char timeout_[PAD_(struct __kernel_timespec *)];
 };
 struct	getresuid_args {
 	uid_t *	ruid;	char ruid_[PAD_(uid_t *)];
@@ -1019,7 +1019,7 @@
 	int	nchanges;	char nchanges_[PAD_(int)];
 	struct kevent *	eventlist;	char eventlist_[PAD_(struct kevent *)];
 	int	nevents;	char nevents_[PAD_(int)];
-	const struct timespec *	timeout;	char timeout_[PAD_(const struct timespec *)];
+	const struct __kernel_timespec *	timeout;	char timeout_[PAD_(const struct __kernel_timespec *)];
 };
 int	nosys __P((struct proc *, struct nosys_args *));
 void	sys_exit __P((struct proc *, struct sys_exit_args *));
diff -ur src.old/sys/sys/systm.h src/sys/sys/systm.h
--- src.old/sys/sys/systm.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/systm.h	2004-09-28 00:40:30.000000000 +0200
@@ -96,7 +96,7 @@
 struct clockframe;
 struct malloc_type;
 struct proc;
-struct timeval;
+struct __kernel_timeval;
 struct tty;
 struct uio;
 
@@ -181,7 +181,7 @@
 extern char *kern_envp;
 
 #ifdef APM_FIXUP_CALLTODO 
-void	adjust_timeout_calltodo __P((struct timeval *time_change)); 
+void	adjust_timeout_calltodo __P((struct __kernel_timeval *time_change)); 
 #endif /* APM_FIXUP_CALLTODO */ 
 
 #include <sys/libkern.h>
@@ -199,7 +199,7 @@
 /*
  * Kernel to clock driver interface.
  */
-void	inittodr __P((time_t base));
+void	inittodr __P((__kernel_time_t base));
 void	resettodr __P((void));
 void	startrtclock __P((void));
 
diff -ur src.old/sys/sys/timepps.h src/sys/sys/timepps.h
--- src.old/sys/sys/timepps.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/timepps.h	2004-09-28 00:40:30.000000000 +0200
@@ -15,6 +15,8 @@
 #ifndef _SYS_TIMEPPS_H_
 #define _SYS_TIMEPPS_H_
 
+#include <stddef.h>
+#include <sys/time.h>
 #include <sys/ioccom.h>
 
 #define PPS_API_VERS_1	1
@@ -29,7 +31,7 @@
 } ntp_fp_t;
 
 typedef union pps_timeu {
-	struct timespec	tspec;
+	struct __kernel_timespec	tspec;
 	ntp_fp_t	ntpfp;
 	unsigned long	longpad[3];
 } pps_timeu_t;
@@ -85,7 +87,7 @@
 struct pps_fetch_args {
 	int tsformat;
 	pps_info_t	pps_info_buf;
-	struct timespec	timeout;
+	struct __kernel_timespec	timeout;
 };
 
 struct pps_kcbind_args {
@@ -115,7 +117,7 @@
 void pps_event __P((struct pps_state *pps, struct timecounter *tc, unsigned count, int event));
 void pps_init __P((struct pps_state *pps));
 int pps_ioctl __P((u_long cmd, caddr_t data, struct pps_state *pps));
-void hardpps __P((struct timespec *tsp, long nsec));
+void hardpps __P((struct __kernel_timespec *tsp, long nsec));
 
 #else /* !_KERNEL */
 
@@ -158,7 +160,7 @@
 
 static __inline int
 time_pps_fetch(pps_handle_t handle, const int tsformat,
-	pps_info_t *ppsinfobuf, const struct timespec *timeout)
+	pps_info_t *ppsinfobuf, const struct __kernel_timespec *timeout)
 {
 	int error;
 	struct pps_fetch_args arg;
diff -ur src.old/sys/sys/timex.h src/sys/sys/timex.h
--- src.old/sys/sys/timex.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/timex.h	2004-09-28 00:40:30.000000000 +0200
@@ -69,7 +69,7 @@
  *	int ntp_gettime(struct ntptimeval *ntv);
  *
  * DESCRIPTION
- *	The time returned by ntp_gettime() is in a timespec structure,
+ *	The time returned by ntp_gettime() is in a __kernel_timespec structure,
  *	but may be in either microsecond (seconds and microseconds) or
  *	nanosecond (seconds and nanoseconds) format. The particular
  *	format in use is determined by the STA_NANO bit of the status
@@ -94,11 +94,9 @@
  */
 #ifndef _SYS_TIMEX_H_
 #define _SYS_TIMEX_H_ 1
-#define NTP_API		4	/* NTP API version */
 
-#ifndef MSDOS			/* Microsoft specific */
-#include <sys/syscall.h>
-#endif /* MSDOS */
+#include <features.h>
+#include <time.h>
 
 /*
  * The following defines establish the performance envelope of the
@@ -175,8 +173,14 @@
  * Note: The time member is in microseconds if STA_NANO is zero and
  * nanoseconds if not.
  */
-struct ntptimeval {
-	struct timespec time;	/* current time (ns) (ro) */
+struct ntptimeval3 {
+	struct __kernel_timespec time;	/* current time (ns) (ro) */
+	long maxerror;		/* maximum error (us) (ro) */
+	long esterror;		/* estimated error (us) (ro) */
+	int time_state;		/* time status */
+};
+struct ntptimeval4 {
+	struct __kernel_timespec time;	/* current time (ns) (ro) */
 	long maxerror;		/* maximum error (us) (ro) */
 	long esterror;		/* estimated error (us) (ro) */
 	long tai;		/* TAI offset */
@@ -217,20 +221,14 @@
 	long	stbcnt;		/* stability limit exceeded (ro) */
 };
 
-#ifdef __FreeBSD__
-
-#ifdef _KERNEL
-struct timecounter;
-void	ntp_update_second __P((struct timecounter *tc));
-#else /* !_KERNEL */
-#include <sys/cdefs.h>
+#define NTP_API		4	/* NTP API version */
+#define ntptimeval	ntptimeval4
 
 __BEGIN_DECLS
-int	ntp_adjtime __P((struct timex *));
-int	ntp_gettime __P((struct ntptimeval *));
-__END_DECLS
-#endif /* _KERNEL */
 
-#endif /* __FreeBSD__ */
+extern int ntp_adjtime (struct timex *__ntv) __THROW;
+extern int ntp_gettime (struct ntptimeval *__ntv) __THROW;
+
+__END_DECLS
 
 #endif /* !_SYS_TIMEX_H_ */
diff -ur src.old/sys/sys/ttycom.h src/sys/sys/ttycom.h
--- src.old/sys/sys/ttycom.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/ttycom.h	2004-09-28 00:40:30.000000000 +0200
@@ -124,9 +124,9 @@
 #define	TIOCDRAIN	 _IO('t', 94)		/* wait till output drained */
 #define	TIOCMSDTRWAIT	_IOW('t', 91, int)	/* modem: set wait on close */
 #define	TIOCMGDTRWAIT	_IOR('t', 90, int)	/* modem: get wait on close */
-#define	TIOCTIMESTAMP	_IOR('t', 89, struct timeval)	/* enable/get timestamp
+#define	TIOCTIMESTAMP	_IOR('t', 89, struct __kernel_timeval)	/* enable/get timestamp
 						 * of last input event */
-#define	TIOCDCDTIMESTAMP _IOR('t', 88, struct timeval)	/* enable/get timestamp
+#define	TIOCDCDTIMESTAMP _IOR('t', 88, struct __kernel_timeval)	/* enable/get timestamp
 						 * of last DCd rise */
 #define	TIOCSDRAINWAIT	_IOW('t', 87, int)	/* set ttywait timeout */
 #define	TIOCGDRAINWAIT	_IOR('t', 86, int)	/* get ttywait timeout */
diff -ur src.old/sys/sys/ucred.h src/sys/sys/ucred.h
--- src.old/sys/sys/ucred.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/ucred.h	2004-09-28 00:40:30.000000000 +0200
@@ -37,6 +37,9 @@
 #ifndef _SYS_UCRED_H_
 #define	_SYS_UCRED_H_
 
+#include <sys/types.h>
+#include <sys/param.h>
+
 /*
  * Credentials.
  *
diff -ur src.old/sys/sys/user.h src/sys/sys/user.h
--- src.old/sys/sys/user.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/user.h	2004-09-28 00:40:30.000000000 +0200
@@ -75,7 +75,7 @@
 		pid_t	e_ppid;			/* parent process id */
 		pid_t	e_pgid;			/* process group id */
 		short	e_jobc;			/* job control counter */
-		udev_t	e_tdev;			/* controlling tty dev */
+		dev_t	e_tdev;			/* controlling tty dev */
 		pid_t	e_tpgid;		/* tty process group id */
 		struct	session *e_tsess;	/* tty session pointer */
 #define	WMESGLEN	7
diff -ur src.old/sys/sys/vnode.h src/sys/sys/vnode.h
--- src.old/sys/sys/vnode.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/vnode.h	2004-09-28 00:40:30.000000000 +0200
@@ -184,9 +184,9 @@
 	long		va_fileid;	/* file id */
 	u_quad_t	va_size;	/* file size in bytes */
 	long		va_blocksize;	/* blocksize preferred for i/o */
-	struct timespec	va_atime;	/* time of last access */
-	struct timespec	va_mtime;	/* time of last modification */
-	struct timespec	va_ctime;	/* time file changed */
+	struct __kernel_timespec	va_atime;	/* time of last access */
+	struct __kernel_timespec	va_mtime;	/* time of last modification */
+	struct __kernel_timespec	va_ctime;	/* time file changed */
 	u_long		va_gen;		/* generation number of file */
 	u_long		va_flags;	/* flags defined for file */
 	udev_t		va_rdev;	/* device the special file represents */
@@ -283,10 +283,10 @@
  */
 extern	struct vnode *rootvnode;	/* root (i.e. "/") vnode */
 extern	int desiredvnodes;		/* number of vnodes desired */
-extern	time_t syncdelay;		/* max time to delay syncing data */
-extern	time_t filedelay;		/* time to delay syncing files */
-extern	time_t dirdelay;		/* time to delay syncing directories */
-extern	time_t metadelay;		/* time to delay syncing metadata */
+extern	__kernel_time_t syncdelay;		/* max time to delay syncing data */
+extern	__kernel_time_t filedelay;		/* time to delay syncing files */
+extern	__kernel_time_t dirdelay;		/* time to delay syncing directories */
+extern	__kernel_time_t metadelay;		/* time to delay syncing metadata */
 extern	struct vm_zone *namei_zone;
 extern	int prtactive;			/* nonzero to call vprint() */
 extern	struct vattr va_null;		/* predefined null vattr structure */
@@ -612,7 +612,7 @@
 int	vfs_cache_lookup __P((struct vop_lookup_args *ap));
 int	vfs_object_create __P((struct vnode *vp, struct proc *p,
                 struct ucred *cred));
-void	vfs_timestamp __P((struct timespec *));
+void	vfs_timestamp __P((struct __kernel_timespec *));
 int 	vn_writechk __P((struct vnode *vp));
 int	vop_stdbwrite __P((struct vop_bwrite_args *ap));
 int	vop_stdislocked __P((struct vop_islocked_args *));
diff -ur src.old/sys/sys/wormio.h src/sys/sys/wormio.h
--- src.old/sys/sys/wormio.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/wormio.h	2004-09-28 00:40:30.000000000 +0200
@@ -4,6 +4,7 @@
 #ifndef	_SYS_WORMIO_H_
 #define	_SYS_WORMIO_H_
 
+#include <sys/types.h>
 #include <sys/ioccom.h>
 
 /***************************************************************\
diff -ur src.old/sys/sys/xrpuio.h src/sys/sys/xrpuio.h
--- src.old/sys/sys/xrpuio.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/sys/xrpuio.h	2004-09-28 00:40:30.000000000 +0200
@@ -13,6 +13,7 @@
 #ifndef _SYS_XRPUIO_H_
 #define _SYS_XRPUIO_H_
 
+#include <sys/types.h>
 #include <sys/ioccom.h>
 
 #define XRPU_MAX_PPS	16
diff -ur src.old/sys/ufs/ffs/fs.h src/sys/ufs/ffs/fs.h
--- src.old/sys/ufs/ffs/fs.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/ufs/ffs/fs.h	2004-09-28 00:40:30.000000000 +0200
@@ -193,7 +193,7 @@
 	ufs_daddr_t fs_dblkno;		/* offset of first data after cg */
 	int32_t	 fs_cgoffset;		/* cylinder group offset in cylinder */
 	int32_t	 fs_cgmask;		/* used to calc mod fs_ntrak */
-	time_t 	 fs_time;		/* last time written */
+	__kernel_time_t 	 fs_time;		/* last time written */
 	int32_t	 fs_size;		/* number of blocks in fs */
 	int32_t	 fs_dsize;		/* number of data blocks in fs */
 	int32_t	 fs_ncg;		/* number of cylinder groups */
@@ -347,7 +347,7 @@
 struct cg {
 	int32_t	 cg_firstfield;		/* historic cyl groups linked list */
 	int32_t	 cg_magic;		/* magic number */
-	time_t	 cg_time;		/* time last written */
+	__kernel_time_t	 cg_time;		/* time last written */
 	int32_t	 cg_cgx;		/* we are the cgx'th cylinder group */
 	int16_t	 cg_ncyl;		/* number of cyl's this cg */
 	int16_t	 cg_niblk;		/* number of inode blocks this cg */
@@ -404,7 +404,7 @@
 struct ocg {
 	int32_t	 cg_firstfield;		/* historic linked list of cyl groups */
 	int32_t	 cg_unused_1;		/*     used for incore cyl groups */
-	time_t	 cg_time;		/* time last written */
+	__kernel_time_t	 cg_time;		/* time last written */
 	int32_t	 cg_cgx;		/* we are the cgx'th cylinder group */
 	int16_t	 cg_ncyl;		/* number of cyl's this cg */
 	int16_t	 cg_niblk;		/* number of inode blocks this cg */
diff -ur src.old/sys/ufs/ufs/quota.h src/sys/ufs/ufs/quota.h
--- src.old/sys/ufs/ufs/quota.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/ufs/ufs/quota.h	2004-09-28 00:40:30.000000000 +0200
@@ -104,8 +104,8 @@
 	u_int32_t dqb_ihardlimit;	/* maximum # allocated inodes + 1 */
 	u_int32_t dqb_isoftlimit;	/* preferred inode limit */
 	u_int32_t dqb_curinodes;	/* current # allocated inodes */
-	time_t	  dqb_btime;		/* time limit for excessive disk use */
-	time_t	  dqb_itime;		/* time limit for excessive files */
+	__kernel_time_t	  dqb_btime;		/* time limit for excessive disk use */
+	__kernel_time_t	  dqb_itime;		/* time limit for excessive files */
 };
 
 #ifdef _KERNEL
diff -ur src.old/sys/ufs/ufs/ufsmount.h src/sys/ufs/ufs/ufsmount.h
--- src.old/sys/ufs/ufs/ufsmount.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/ufs/ufs/ufsmount.h	2004-09-28 00:40:30.000000000 +0200
@@ -64,7 +64,7 @@
 struct buf;
 struct inode;
 struct nameidata;
-struct timeval;
+struct __kernel_timeval;
 struct ucred;
 struct uio;
 struct vnode;
@@ -89,8 +89,8 @@
 	u_long	um_nindir;			/* indirect ptrs per block */
 	u_long	um_bptrtodb;			/* indir ptr to disk block */
 	u_long	um_seqinc;			/* inc between seq blocks */
-	time_t	um_btime[MAXQUOTAS];		/* block quota time limit */
-	time_t	um_itime[MAXQUOTAS];		/* inode quota time limit */
+	__kernel_time_t	um_btime[MAXQUOTAS];		/* block quota time limit */
+	__kernel_time_t	um_itime[MAXQUOTAS];		/* inode quota time limit */
 	char	um_qflags[MAXQUOTAS];		/* quota specific flags */
 	struct	netexport um_export;		/* export information */
 	int64_t	um_savedmaxfilesize;		/* XXX - limit maxfilesize */
diff -ur src.old/sys/vm/vm.h src/sys/vm/vm.h
--- src.old/sys/vm/vm.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/vm/vm.h	2004-09-28 00:40:30.000000000 +0200
@@ -65,6 +65,8 @@
 #ifndef VM_H
 #define VM_H
 
+#include <sys/types.h>
+
 typedef char vm_inherit_t;	/* inheritance codes */
 
 #define	VM_INHERIT_SHARE	((vm_inherit_t) 0)
diff -ur src.old/sys/vm/vm_map.h src/sys/vm/vm_map.h
--- src.old/sys/vm/vm_map.h	2004-09-28 00:40:16.000000000 +0200
+++ src/sys/vm/vm_map.h	2004-09-28 00:40:30.000000000 +0200
@@ -71,6 +71,12 @@
 #ifndef	_VM_MAP_
 #define	_VM_MAP_
 
+#include <sys/types.h>
+#include <machine/types.h>
+#include <machine/pmap.h>
+#include <vm/vm.h>
+#include <sys/lock.h>
+
 /*
  *	Types defined:
  *
