
Status: FIONBIO/FIOASYNC is in http://www.freebsd.org/cgi/query-pr.cgi?pr=138526
	/dev/full already rejected in upstream (kern/68961)

---
 sys/dev/null/null.c |   27 +++++++++++++++++++++++++++
 1 file changed, 27 insertions(+)

--- a/sys/dev/null/null.c
+++ b/sys/dev/null/null.c
@@ -43,9 +43,11 @@ __FBSDID("$FreeBSD$");
 
 /* For use with destroy_dev(9). */
 static struct cdev *null_dev;
+static struct cdev *full_dev;
 static struct cdev *zero_dev;
 
 static d_write_t null_write;
+static d_write_t full_write;
 static d_ioctl_t null_ioctl;
 static d_read_t zero_read;
 
@@ -57,6 +59,14 @@ static struct cdevsw null_cdevsw = {
 	.d_name =	"null",
 };
 
+static struct cdevsw full_cdevsw = {
+	.d_version =	D_VERSION,
+	.d_read =	(d_read_t *)nullop,
+	.d_write =	full_write,
+	.d_ioctl =	null_ioctl,
+	.d_name =	"full",
+};
+
 static struct cdevsw zero_cdevsw = {
 	.d_version =	D_VERSION,
 	.d_read =	zero_read,
@@ -78,11 +88,25 @@ null_write(struct cdev *dev __unused, st
 
 /* ARGSUSED */
 static int
+full_write(struct cdev *dev __unused, struct uio *uio, int flags __unused)
+{
+	uio->uio_resid = 0;
+
+	return (ENOSPC);
+}
+
+#include <sys/filio.h>
+/* ARGSUSED */
+static int
 null_ioctl(struct cdev *dev __unused, u_long cmd, caddr_t data __unused,
     int flags __unused, struct thread *td)
 {
 	int error;
 
+	if (cmd == FIONBIO)
+		return 0;
+	if ((cmd == FIOASYNC) && ((*(int *)data) == 0))
+		return 0;
 	if (cmd != DIOCSKERNELDUMP)
 		return (ENOIOCTL);
 	error = priv_check(td, PRIV_SETDUMPER);
@@ -114,12 +138,15 @@ null_modevent(module_t mod __unused, int
 		zbuf = (void *)malloc(PAGE_SIZE, M_TEMP, M_WAITOK | M_ZERO);
 		null_dev = make_dev_credf(MAKEDEV_ETERNAL_KLD, &null_cdevsw, 0,
 		    NULL, UID_ROOT, GID_WHEEL, 0666, "null");
+		null_dev = make_dev_credf(MAKEDEV_ETERNAL_KLD, &full_cdevsw, 0,
+		    NULL, UID_ROOT, GID_WHEEL, 0666, "full");
 		zero_dev = make_dev_credf(MAKEDEV_ETERNAL_KLD, &zero_cdevsw, 0,
 		    NULL, UID_ROOT, GID_WHEEL, 0666, "zero");
 		break;
 
 	case MOD_UNLOAD:
 		destroy_dev(null_dev);
+		destroy_dev(full_dev);
 		destroy_dev(zero_dev);
 		free(zbuf, M_TEMP);
 		break;
