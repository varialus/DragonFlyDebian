#! /bin/sh
# postinst script
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#

PATH="/sbin:/bin:/usr/sbin:/usr/bin"
KERNEL_IMG_CONF="/etc/kernel-img.conf"
RELEASE="@RELEASE@"
VERSION="@VERSION@"

case "$1" in
    configure)
        # Don't do symlinks if explicitely disabled
        if [ -z "$(sed -e '/^\s*do_symlinks\s*=\s*\(no\|false\|0\)\s*$/!d' $KERNEL_IMG_CONF 2>/dev/null)" ] ; then
            for i in kernel.gz acpi.ko ; do
                if test -e /boot/kernel/$i && ! test -L /boot/kernel/$i ; then
                    echo "What happen!! /boot/kernel/$i exists but is not a symlink."
                    exit 1
                fi
            done

	    mkdir -p /boot/kernel
    
            if [ "$(readlink -f /boot/kernel/kernel.gz)" != "/boot/kfreebsd-$RELEASE.gz" ] ; then
                rm -f /boot/kernel/kernel.old.gz
                if [ -L /boot/kernel/kernel.gz ] ; then
                    mv /boot/kernel/kernel.gz /boot/kernel/kernel.old.gz
                fi
                ln -s /boot/kfreebsd-$RELEASE.gz /boot/kernel/kernel.gz
            fi
    
            # on i386 acpi MUST be within kfreebsd-loader reach
            if [ "${RELEASE%%-[456]86}" != "${RELEASE}" ] ; then
                if [ "$(readlink -f /boot/kernel/acpi.ko)" != "/lib/modules/$RELEASE/acpi.ko" ] ; then
                    rm -f /boot/kernel/acpi.ko.old
                    if [ -L /boot/kernel/acpi.ko ] ; then
                        mv /boot/kernel/acpi.ko /boot/kernel/acpi.ko.old
                    fi
                    ln -s /lib/modules/$RELEASE/acpi.ko /boot/kernel/acpi.ko
                fi    
            fi
        fi

        # Sanitize and quote maintainer script parameters
        for p in "$@"; do
            q="$(echo "$p" | sed -e "s/'/'\\''/g")"
            DEB_MAINT_PARAMS="$DEB_MAINT_PARAMS '$q'"
        done
        export DEB_MAINT_PARAMS

        # Run /etc/kernel-img.cnf postinst hook if defined
        postinst_hook=$(sed '/^\s*postinst_hook/!d;s/.*=\s*//' $KERNEL_IMG_CONF 2>/dev/null || true)
        if [ -n "$postinst_hook" ] ; then
            echo "Running postinst hook script $postinst_hook." 1>&2 
            $postinst_hook "$RELEASE" "/boot/kfreebsd-$RELEASE.gz"
        fi

        # Run /etc/kernel/postinst.d/ hooks if they exist
        if [ -d "/etc/kernel/postinst.d" ] ; then
            run-parts --verbose --exit-on-error \
                --arg=$RELEASE \
                --arg=/boot/kfreebsd-$RELEASE.gz \
                /etc/kernel/postinst.d
        fi
    ;;
   
    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


