diff -ur ../foo.old/src/usr.bin/lex/flex.skl ./src/usr.bin/lex/flex.skl
--- ../foo.old/src/usr.bin/lex/flex.skl	2004-01-06 20:03:44.000000000 +0100
+++ ./src/usr.bin/lex/flex.skl	2005-12-17 12:53:40.000000000 +0100
@@ -263,7 +263,7 @@
 %*
 
 static void *yy_flex_alloc YY_PROTO(( yy_size_t ));
-static void *yy_flex_realloc YY_PROTO(( void *, yy_size_t )) __unused;
+static void *yy_flex_realloc YY_PROTO(( void *, yy_size_t )) ;
 static void yy_flex_free YY_PROTO(( void * ));
 
 #define yy_new_buffer yy_create_buffer
diff -ur ../foo.old/src/usr.bin/make/cond.c ./src/usr.bin/make/cond.c
--- ../foo.old/src/usr.bin/make/cond.c	2005-05-25 18:06:14.000000000 +0200
+++ ./src/usr.bin/make/cond.c	2005-12-17 12:53:40.000000000 +0100
@@ -1115,7 +1115,7 @@
  *	Handle .else statement.
  */
 void
-Cond_Else(char *line __unused, int code __unused, int lineno __unused)
+Cond_Else(char *line , int code , int lineno )
 {
 
 	while (isspace((u_char)*line))
@@ -1156,7 +1156,7 @@
  *	Handle .endif statement.
  */
 void
-Cond_Endif(char *line __unused, int code __unused, int lineno __unused)
+Cond_Endif(char *line , int code , int lineno )
 {
 
 	while (isspace((u_char)*line))
diff -ur ../foo.old/src/usr.bin/make/job.c ./src/usr.bin/make/job.c
--- ../foo.old/src/usr.bin/make/job.c	2005-12-17 12:46:35.000000000 +0100
+++ ./src/usr.bin/make/job.c	2005-12-17 12:53:40.000000000 +0100
@@ -477,7 +477,7 @@
 }
 
 static void
-catch_child(int sig __unused)
+catch_child(int sig )
 {
 }
 
@@ -2193,7 +2193,7 @@
  */
 void
 #ifdef USE_KQUEUE
-Job_CatchOutput(int flag __unused)
+Job_CatchOutput(int flag )
 #else
 Job_CatchOutput(int flag)
 #endif
diff -ur ../foo.old/src/usr.bin/make/parse.c ./src/usr.bin/make/parse.c
--- ../foo.old/src/usr.bin/make/parse.c	2005-12-17 12:46:36.000000000 +0100
+++ ./src/usr.bin/make/parse.c	2005-12-17 12:55:14.000000000 +0100
@@ -2065,7 +2065,7 @@
  *	options
  */
 static void
-parse_include(char *file, int code __unused, int lineno __unused)
+parse_include(char *file, int code, int lineno)
 {
 	char	*fullname;	/* full pathname of file */
 	char	endc;		/* the character which ends the file spec */
@@ -2204,7 +2204,7 @@
  *	a warning if the directive is malformed.
  */
 static void
-parse_message(char *line, int iserror, int lineno __unused)
+parse_message(char *line, int iserror, int lineno )
 {
 
 	if (!isspace((u_char)*line)) {
@@ -2231,7 +2231,7 @@
  *	Parse an .undef directive.
  */
 static void
-parse_undef(char *line, int code __unused, int lineno __unused)
+parse_undef(char *line, int code , int lineno )
 {
 	char *cp;
 
@@ -2253,7 +2253,7 @@
  *	Parse a .for directive.
  */
 static void
-parse_for(char *line, int code __unused, int lineno)
+parse_for(char *line, int code , int lineno)
 {
 
 	if (!For_For(line)) {
@@ -2285,7 +2285,7 @@
  *	Parse endfor. This may only happen if there was no matching .for.
  */
 static void
-parse_endfor(char *line __unused, int code __unused, int lineno __unused)
+parse_endfor(char *line , int code , int lineno )
 {
 
 	Parse_Error(PARSE_FATAL, "for-less endfor");
diff -ur ../foo.old/src/usr.bin/make/shell.c ./src/usr.bin/make/shell.c
--- ../foo.old/src/usr.bin/make/shell.c	2005-05-24 17:30:03.000000000 +0200
+++ ./src/usr.bin/make/shell.c	2005-12-17 12:53:40.000000000 +0100
@@ -120,7 +120,7 @@
  */
 static struct Shells shells = TAILQ_HEAD_INITIALIZER(shells);
 
-void ShellDump(const struct Shell *) __unused;
+void ShellDump(const struct Shell *) ;
 
 /**
  * Helper function for sorting the builtin list alphabetically.
diff -ur ../foo.old/src/usr.bin/make/var.c ./src/usr.bin/make/var.c
--- ../foo.old/src/usr.bin/make/var.c	2005-12-17 12:46:36.000000000 +0100
+++ ./src/usr.bin/make/var.c	2005-12-17 12:53:40.000000000 +0100
@@ -248,7 +248,7 @@
  *	The trimmed word is added to the buffer.
  */
 static Boolean
-VarHead(const char *word, Boolean addSpace, Buffer *buf, void *dummy __unused)
+VarHead(const char *word, Boolean addSpace, Buffer *buf, void *dummy )
 {
 	char *slash;
 
@@ -283,7 +283,7 @@
  *	The trimmed word is added to the buffer.
  */
 static Boolean
-VarTail(const char *word, Boolean addSpace, Buffer *buf, void *dummy __unused)
+VarTail(const char *word, Boolean addSpace, Buffer *buf, void *dummy )
 {
 	const char *slash;
 
@@ -312,7 +312,7 @@
  *	The suffix from the word is placed in the buffer.
  */
 static Boolean
-VarSuffix(const char *word, Boolean addSpace, Buffer *buf, void *dummy __unused)
+VarSuffix(const char *word, Boolean addSpace, Buffer *buf, void *dummy )
 {
 	const char *dot;
 
@@ -340,7 +340,7 @@
  *	The trimmed word is added to the buffer.
  */
 static Boolean
-VarRoot(const char *word, Boolean addSpace, Buffer *buf, void *dummy __unused)
+VarRoot(const char *word, Boolean addSpace, Buffer *buf, void *dummy )
 {
 	char *dot;
 
diff -ur ../foo.old/src/usr.bin/yacc/main.c ./src/usr.bin/yacc/main.c
--- ../foo.old/src/usr.bin/yacc/main.c	2005-12-17 12:48:54.000000000 +0100
+++ ./src/usr.bin/yacc/main.c	2005-12-17 12:53:40.000000000 +0100
@@ -131,7 +131,7 @@
 
 static void
 onintr(signo)
-	int signo __unused;
+	int signo ;
 {
     sigdie = 1;
     done(1);
diff -ur ../foo.old/src/usr.sbin/mtree/compare.c ./src/usr.sbin/mtree/compare.c
--- ../foo.old/src/usr.sbin/mtree/compare.c	2005-12-17 12:48:54.000000000 +0100
+++ ./src/usr.sbin/mtree/compare.c	2005-12-17 12:53:40.000000000 +0100
@@ -72,7 +72,7 @@
 	}
 
 int
-compare(char *name __unused, NODE *s, FTSENT *p)
+compare(char *name , NODE *s, FTSENT *p)
 {
 	struct timeval tv[2];
 	uint32_t val;
diff -ur ../build-tree.old/src/usr.bin/make/proc.h ./src/usr.bin/make/proc.h
--- ../build-tree.old/src/usr.bin/make/proc.h	2005-12-17 00:17:45.000000000 +0100
+++ ./src/usr.bin/make/proc.h	2005-12-17 00:20:28.000000000 +0100
@@ -48,6 +48,6 @@
 	pid_t	child_pid;
 } ProcStuff;
 
-void Proc_Exec(const ProcStuff *) __dead2;
+void Proc_Exec(const ProcStuff *) ;
 
 #endif /* proc_h_458845848 */
diff -ur ../build-tree.old/src/usr.bin/make/util.c ./src/usr.bin/make/util.c
--- ../build-tree.old/src/usr.bin/make/util.c	2005-12-17 00:17:45.000000000 +0100
+++ ./src/usr.bin/make/util.c	2005-12-17 00:20:28.000000000 +0100
@@ -60,7 +60,7 @@
 #include "targ.h"
 #include "util.h"
 
-static void enomem(void) __dead2;
+static void enomem(void) ;
 
 /*-
  * Debug --
diff -ur ../build-tree.old/src/usr.bin/make/util.h ./src/usr.bin/make/util.h
--- ../build-tree.old/src/usr.bin/make/util.h	2005-12-17 00:17:45.000000000 +0100
+++ ./src/usr.bin/make/util.h	2005-12-17 00:20:28.000000000 +0100
@@ -103,10 +103,10 @@
 void Debug(const char *, ...);
 void DebugM(const char *, ...);
 void Error(const char *, ...);
-void Fatal(const char *, ...) __dead2;
-void Punt(const char *, ...) __dead2;
-void DieHorribly(void) __dead2;
-void Finish(int) __dead2;
+void Fatal(const char *, ...) ;
+void Punt(const char *, ...) ;
+void DieHorribly(void) ;
+void Finish(int) ;
 char *estrdup(const char *);
 void *emalloc(size_t);
 void *erealloc(void *, size_t);
