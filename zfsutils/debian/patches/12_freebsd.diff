---
 cddl/contrib/opensolaris/lib/libzfs/common/libzfs.h         |    2 +-
 cddl/contrib/opensolaris/lib/libzfs/common/libzfs_impl.h    |    2 +-
 sys/cddl/contrib/opensolaris/uts/common/fs/zfs/dmu.c        |    4 ++--
 sys/cddl/contrib/opensolaris/uts/common/fs/zfs/sys/zvol.h   |    2 +-
 sys/cddl/contrib/opensolaris/uts/common/fs/zfs/zfs_acl.c    |    4 ++--
 sys/cddl/contrib/opensolaris/uts/common/fs/zfs/zfs_dir.c    |    4 ++--
 sys/cddl/contrib/opensolaris/uts/common/fs/zfs/zfs_vfsops.c |    2 +-
 7 files changed, 10 insertions(+), 10 deletions(-)

--- a/sys/cddl/contrib/opensolaris/uts/common/fs/zfs/sys/zvol.h
+++ b/sys/cddl/contrib/opensolaris/uts/common/fs/zfs/sys/zvol.h
@@ -71,7 +71,7 @@
     ssize_t resid, boolean_t sync);
 #endif	/* sun */
 
-#ifdef __FreeBSD__
+#ifdef defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
 extern int zvol_create_minors(const char *name);
 extern void zvol_rename_minors(const char *oldname, const char *newname);
 #endif
--- a/sys/cddl/contrib/opensolaris/uts/common/fs/zfs/zfs_acl.c
+++ b/sys/cddl/contrib/opensolaris/uts/common/fs/zfs/zfs_acl.c
@@ -1681,7 +1681,7 @@
 			} else {
 				acl_ids->z_fgid = zfs_fuid_create_cred(zfsvfs,
 				    ZFS_GROUP, cr, &acl_ids->z_fuidp);
-#ifdef __FreeBSD__
+#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
 				gid = acl_ids->z_fgid = dzp->z_gid;
 #else
 				gid = crgetgid(cr);
@@ -2371,7 +2371,7 @@
 
 	is_attr = ((zp->z_pflags & ZFS_XATTR) && (ZTOV(zp)->v_type == VDIR));
 
-#ifdef __FreeBSD__
+#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
 	/*
 	 * In FreeBSD, we don't care about permissions of individual ADS.
 	 * Note that not checking them is not just an optimization - without
--- a/sys/cddl/contrib/opensolaris/uts/common/fs/zfs/zfs_dir.c
+++ b/sys/cddl/contrib/opensolaris/uts/common/fs/zfs/zfs_dir.c
@@ -919,7 +919,7 @@
 	 * In FreeBSD, access checking for creating an EA is being done
 	 * in zfs_setextattr(),
 	 */
-#ifndef __FreeBSD__
+#if !defined(__FreeBSD__) && !defined(__FreeBSD_kernel__)
 	if (error = zfs_zaccess(zp, ACE_WRITE_NAMED_ATTRS, 0, B_FALSE, cr))
 		return (error);
 #endif
@@ -1012,7 +1012,7 @@
 
 	if (!(flags & CREATE_XATTR_DIR)) {
 		zfs_dirent_unlock(dl);
-#ifdef __FreeBSD__
+#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
 		return (ENOATTR);
 #else
 		return (ENOENT);
--- a/sys/cddl/contrib/opensolaris/uts/common/fs/zfs/zfs_vfsops.c
+++ b/sys/cddl/contrib/opensolaris/uts/common/fs/zfs/zfs_vfsops.c
@@ -1804,7 +1804,7 @@
 		rrw_exit(&zfsvfs->z_teardown_lock, FTAG);
 		rw_exit(&zfsvfs->z_teardown_inactive_lock);
 
-#ifdef __FreeBSD__
+#if defined(__FreeBSD__) || defined(__FreeBSD_kernel__)
 		/*
 		 * Some znodes might not be fully reclaimed, wait for them.
 		 */
