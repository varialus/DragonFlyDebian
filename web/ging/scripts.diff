Index: livecd.sh
===================================================================
--- livecd.sh	(revision 575)
+++ livecd.sh	(working copy)
@@ -13,7 +13,7 @@
 
 if [ "$UID" != "0" ] ; then
   # I call that incest, don't you?
-  fakeroot $0 $@
+  sudo $0 $@
   exit 0
 fi
 
@@ -38,8 +38,6 @@
 
 if ! test -e base.tgz ; then ./tarball.sh ; fi
 tar -C ${tmp1} --same-owner -xzpf base.tgz
-mkdir ${tmp1}/base
-cp base.tgz ${tmp1}/base/
 
 ##################
 #  add some trickery
@@ -104,41 +102,30 @@
 mkfs.ufs /dev/md0
 mount -o rw -t ufs /dev/md0 /ramdisk
 echo "Populating ramdisk node \(this might take a while\) ..."
+
+for i in bin usr boot lib libexec sbin var/lib/{dpkg,apt}
+  var/cache/apt ; do
+  mkdir -p /ramdisk/\$i
+  mount -t nullfs /\$i /ramdisk/\$i
+done
+
+mkdir -p /ramdisk/{dev,proc}
+mount -t devfs null /ramdisk/dev
+
 for i in /* ; do
-  case \${i} in
-    /bin|/usr|/boot|/lib|/libexec|/sbin|/base)
-      mkdir -p /ramdisk/\${i}
-      mount -t nullfs /\${i} /ramdisk/\${i}
+  case \$i in
+    /dev|/proc|/bin|/usr|/boot|/lib|/libexec|/sbin|/base|/ramdisk|/*-RELEASE)
     ;;
-    /dev)
-      mkdir -p /ramdisk/dev
-      mount -t devfs null /ramdisk/dev
-    ;;
-    /proc)
-      mkdir -p /ramdisk/proc
-      mount -t linprocfs null /ramdisk/proc
-    ;;
     /var)
-      mkdir -p /ramdisk/var
-      for i in \${i}/* ; do
-        case \${i} in
-          /var/lib|/var/cache)
-            mkdir -p /ramdisk/\${i}
-            mount -t nullfs /\${i} /ramdisk/\${i}
-          ;;
-          *)
-            cp -a /\${i} /ramdisk/\${i}
-          ;;
-        esac
-      done
+      # will fail for /var/lib/{dpkg,apt} and /var/cache/apt
+      cp -a \$i /ramdisk/\$i 2>/dev/null || true
     ;;
-    /ramdisk|/*-RELEASE)
+    *)
+      cp -a \$i /ramdisk/\$i
     ;;
-    /*)
-      cp -a /\${i} /ramdisk/\${i}
-    ;;
   esac
 done
+
 # doesn't work as expected (i.e. you still need -f to halt)
 #mknod -m 600 /ramdisk/etc/.initctl p
 export TERM=cons25
@@ -152,28 +139,19 @@
 # (we don't use <<EOF because bash requires a tempfile to do that)
 echo "/dev/md0	/	ufs		rw	1 1" > /ramdisk/etc/fstab
 
-while chroot /ramdisk ; do true ; done
-echo "chrooted shell exitted with non-zero status.  NOT respawning."
-while bash ; do true ; done
-echo "Ok, you get what you wanted ..."
-halt -f
+# exec chrooted init using -i hack
+cp /usr/share/sysvinit/inittab /ramdisk/etc/
+exec chroot /ramdisk init -i
 __EOF__
 chmod +x root/startup
 
-# hacks for being a FreeBSD compliant [tm] cdrom
-for i in 5 6 ; do for j in 0 1 2 3 4 5 6 7 8 9 ; do
-  ln -sf . $i.$j-RELEASE
-done ; done
-ln -s ../base/base.tgz root/
-
-
 #########################
 #                    ignition!
 #################################
 cp ${pwd}/cdboot boot/
 # -r messes up file permissions, use -R instead
 mkisofs -b boot/cdboot -no-emul-boot \
-  -o ${pwd}/livecd-${version}.iso -R .
+  -o ${pwd}/ging-${version}.iso -R .
 
 rm -rf ${tmp1} ${tmp2} &
 cd ${pwd}/
Index: tarball.sh
===================================================================
--- tarball.sh	(revision 575)
+++ tarball.sh	(working copy)
@@ -9,7 +9,7 @@
 
 if [ "$UID" != "0" ] ; then
   # I call that incest, don't you?
-  fakeroot $0 $@
+  sudo $0 $@
   exit 0
 fi
 
@@ -52,6 +52,74 @@
 __EOF__
 fi
 
+################################################################################
+# BEGIN GING-SPECIFIC STUFF
+################################################################################
+
+version=0.0.1
+
+echo ging > ${tmp1}/etc/hostname
+cat > ${tmp1}/etc/hosts << __EOF__
+127.0.0.1	localhost ging
+__EOF__
+
+echo > ${tmp1}/etc/motd
+
+cat > ${tmp1}/etc/issue << __EOF__
+Ging $version \n \l
+
+(login as ging)
+
+__EOF__
+
+cat > ${tmp1}/etc/apt/apt.conf << __EOF__
+APT::Get::AllowUnauthenticated "yes";
+__EOF__
+chroot ${tmp1} /native-install
+
+if test -e ./packages ; then packages=`grep -v "^#" ./packages | tr "\n" " "` ; fi
+# gnome-core, minus yelp and gnome-applets (not installable)
+packages=`echo ${packages} | sed -e "s/gnome-core/bug-buddy eog gedit gnome-control-center gnome-icon-theme gnome-menus gnome-panel gnome-session gnome-terminal metacity nautilus scrollkeeper/g"`
+chroot ${tmp1} apt-get update
+chroot ${tmp1} apt-get -y install ${packages} || true
+
+username="ging"
+chroot ${tmp1} adduser --disabled-password $username
+sed -i ${tmp1}/etc/shadow -e "s/^ging:\*:/ging::/g"
+echo "case \`tty\` in /dev/ttyv*) xinit /usr/bin/gnome-session ;; esac" >> ${tmp1}/home/$username/.bashrc
+
+cat > ${tmp1}/etc/sudoers << __EOF__
+$username ALL=NOPASSWD: ALL
+__EOF__
+
+# avoid messed-up file with "ed0"
+cat > ${tmp1}/etc/network/interfaces << __EOF__
+auto lo0
+iface lo0 inet loopback
+__EOF__
+
+echo "Spawning a shell.  The following packages are supposedly installed:"
+echo ${packages}
+chroot ${tmp1}
+
+rm -f ${tmp1}/var/cache/apt/archives/*.deb ${tmp1}/native-install
+
+################################################################################
+# END GING-SPECIFIC STUFF
+################################################################################
+
+# if X server wrapper is installed, allow console users to run it
+if test -e ${tmp1}/etc/X11/Xwrapper.config ; then
+  sed -i ${tmp1}/etc/X11/Xwrapper.config -e "s/^allowed_users=.*/allowed_users=console/g"
+fi
+
+# if X server auto-configurator is installed, enable it
+if test -e ${tmp1}/etc/init.d/xserver-xorg ; then
+  cat > ${tmp1}/etc/default/xorg << __EOF__
+GENERATE_XCFG_AT_BOOT=true
+__EOF__
+fi
+
 # crosshurd uses host machine /etc/resolv.conf.  we don't really want that
 echo -n > ${tmp1}/etc/resolv.conf
 
