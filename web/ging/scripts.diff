Index: livecd.sh
===================================================================
--- livecd.sh	(revision 565)
+++ livecd.sh	(working copy)
@@ -13,7 +13,7 @@
 
 if [ "$UID" != "0" ] ; then
   # I call that incest, don't you?
-  fakeroot $0 $@
+  sudo $0 $@
   exit 0
 fi
 
@@ -38,8 +38,6 @@
 
 if ! test -e base.tgz ; then ./tarball.sh ; fi
 tar -C ${tmp1} --same-owner -xzpf base.tgz
-mkdir ${tmp1}/base
-cp base.tgz ${tmp1}/base/
 
 ##################
 #  add some trickery
@@ -152,28 +150,23 @@
 # (we don't use <<EOF because bash requires a tempfile to do that)
 echo "/dev/md0	/	ufs		rw	1 1" > /ramdisk/etc/fstab
 
-while chroot /ramdisk ; do true ; done
-echo "chrooted shell exitted with non-zero status.  NOT respawning."
+# spawn chrooted init using -i hack
+cp /usr/share/sysvinit/inittab /ramdisk/etc/
+chroot /ramdisk init -i
+echo
+echo "chrooted init died!!  Spawning a rescue shell."
 while bash ; do true ; done
-echo "Ok, you get what you wanted ..."
 halt -f
 __EOF__
 chmod +x root/startup
 
-# hacks for being a FreeBSD compliant [tm] cdrom
-for i in 5 6 ; do for j in 0 1 2 3 4 5 6 7 8 9 ; do
-  ln -sf . $i.$j-RELEASE
-done ; done
-ln -s ../base/base.tgz root/
-
-
 #########################
 #                    ignition!
 #################################
 cp ${pwd}/cdboot boot/
 # -r messes up file permissions, use -R instead
 mkisofs -b boot/cdboot -no-emul-boot \
-  -o ${pwd}/livecd-${version}.iso -R .
+  -o ${pwd}/ging-${version}.iso -R .
 
 rm -rf ${tmp1} ${tmp2} &
 cd ${pwd}/
Index: tarball.sh
===================================================================
--- tarball.sh	(revision 562)
+++ tarball.sh	(working copy)
@@ -2,14 +2,14 @@
 #
 # Build-Depends: mkisofs, crosshurd, fakeroot
 #
-# Copyright 2004  Robert Millan <rmh@debian.org>
+# Copyright 2004, 2005  Robert Millan <rmh@aybabtu.com>
 # See /usr/share/common-licenses/GPL for license terms.
 
 set -ex
 
 if [ "$UID" != "0" ] ; then
   # I call that incest, don't you?
-  fakeroot $0 $@
+  sudo $0 $@
   exit 0
 fi
 
@@ -21,7 +21,7 @@
 cpu="i486"
 system="kfreebsd-gnu"
 uname="GNU/kFreeBSD"
-tmp1=`tempfile` && rm -f ${tmp1} && mkdir -p ${tmp1}
+tmp1=`mktemp -d`
 pwd=`pwd`
 export GZIP=--best
 
@@ -40,6 +40,74 @@
 # maybe-missing kernel package
 cd ${tmp1} && dpkg --extract var/cache/apt/archives/kfreebsd-image-5.*.deb .
 
+################################################################################
+# BEGIN GING-SPECIFIC STUFF
+################################################################################
+
+version=0.0.1
+
+echo ging > ${tmp1}/etc/hostname
+cat > ${tmp1}/etc/hosts << __EOF__
+127.0.0.1	localhost ging
+__EOF__
+
+echo > ${tmp1}/etc/motd
+
+cat > ${tmp1}/etc/issue << __EOF__
+Ging $version \n \l
+
+(login as ging)
+
+__EOF__
+
+cat > ${tmp1}/etc/apt/apt.conf << __EOF__
+APT::Get::AllowUnauthenticated "yes";
+__EOF__
+chroot ${tmp1} /native-install
+
+if test -e ./packages ; then packages=`grep -v "^#" ./packages | tr "\n" " "` ; fi
+# gnome-core, minus yelp and gnome-applets (not installable)
+packages=`echo ${packages} | sed -e "s/gnome-core/bug-buddy eog gedit gnome-control-center gnome-icon-theme gnome-menus gnome-panel gnome-session gnome-terminal metacity nautilus scrollkeeper/g"`
+chroot ${tmp1} apt-get update
+chroot ${tmp1} apt-get -y install ${packages} || true
+
+username="ging"
+chroot ${tmp1} adduser --disabled-password $username
+sed -i ${tmp1}/etc/shadow -e "s/^ging:\*:/ging::/g"
+echo "case \`tty\` in /dev/ttyv*) xinit /usr/bin/gnome-session && sudo halt ;; esac" >> ${tmp1}/home/$username/.bashrc
+
+cat > ${tmp1}/etc/sudoers << __EOF__
+$username ALL=NOPASSWD: ALL
+__EOF__
+
+# avoid messed-up file with "ed0"
+cat > ${tmp1}/etc/network/interfaces << __EOF__
+auto lo0
+iface lo0 inet loopback
+__EOF__
+
+echo "Spawning a shell.  The following packages are supposedly installed:"
+echo ${packages}
+chroot ${tmp1}
+
+rm -f ${tmp1}/var/cache/apt/archives/*.deb ${tmp1}/native-install
+
+################################################################################
+# END GING-SPECIFIC STUFF
+################################################################################
+
+# if X server wrapper is installed, allow console users to run it
+if test -e ${tmp1}/etc/X11/Xwrapper.config ; then
+  sed -i ${tmp1}/etc/X11/Xwrapper.config -e "s/^allowed_users=.*/allowed_users=console/g"
+fi
+
+# if X server auto-configurator is installed, enable it
+if test -e ${tmp1}/etc/init.d/xserver-xorg ; then
+  cat > ${tmp1}/etc/default/xorg << __EOF__
+GENERATE_XCFG_AT_BOOT=true
+__EOF__
+fi
+
 # crosshurd uses host machine /etc/resolv.conf.  we don't really want that
 echo -n > ${tmp1}/etc/resolv.conf
 
