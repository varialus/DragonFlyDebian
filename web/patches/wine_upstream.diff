
Author: rmh
Status: need to verify it runs before submitting

diff -ur wine-0.9.6.old/configure wine-0.9.6/configure
--- wine-0.9.6.old/configure	2006-01-19 15:13:50.000000000 +0100
+++ wine-0.9.6/configure	2006-02-02 09:54:48.000000000 +0100
@@ -13080,7 +13080,7 @@
 esac
 
 case $host_os in
-  linux*)
+  linux* | k*bsd*-gnu)
     case $host_cpu in
       *i[3456789]86*) WINE_BINARIES="wine-glibc wine-kthread wine-pthread wine-preloader"
  ;;
diff -ur wine-0.9.6.old/configure.ac wine-0.9.6/configure.ac
--- wine-0.9.6.old/configure.ac	2006-01-19 15:13:50.000000000 +0100
+++ wine-0.9.6/configure.ac	2006-02-02 09:54:40.000000000 +0100
@@ -1102,7 +1102,7 @@
 esac
 
 case $host_os in
-  linux*)
+  linux* | k*bsd*-gnu)
     case $host_cpu in
       *i[[3456789]]86*) AC_SUBST(WINE_BINARIES,"wine-glibc wine-kthread wine-pthread wine-preloader") ;;
       *) AC_SUBST(WINE_BINARIES,"wine-glibc wine-kthread wine-pthread") ;;
diff -ur wine-0.9.6.old/dlls/kernel/cpu.c wine-0.9.6/dlls/kernel/cpu.c
--- wine-0.9.6.old/dlls/kernel/cpu.c	2006-01-19 15:13:59.000000000 +0100
+++ wine-0.9.6/dlls/kernel/cpu.c	2006-02-02 09:34:39.000000000 +0100
@@ -511,7 +511,7 @@
 
         }
         memcpy(si,&cachedsi,sizeof(*si));
-#elif defined(__FreeBSD__)
+#elif defined(__FreeBSD_kernel__)
 	{
 	unsigned int regs[4], regs2[4];
 	int ret, len, num;
diff -ur wine-0.9.6.old/dlls/kernel/heap.c wine-0.9.6/dlls/kernel/heap.c
--- wine-0.9.6.old/dlls/kernel/heap.c	2006-01-19 15:13:59.000000000 +0100
+++ wine-0.9.6/dlls/kernel/heap.c	2006-02-02 09:34:39.000000000 +0100
@@ -1138,7 +1138,7 @@
 #ifdef linux
     FILE *f;
 #endif
-#if defined(__FreeBSD__) || defined(__NetBSD__)
+#if defined(__FreeBSD_kernel__) || defined(__NetBSD__)
     int *tmp;
     int size_sys;
     int mib[2] = { CTL_HW };
@@ -1209,7 +1209,7 @@
                                       / (TotalPhysical / 100);
         }
     }
-#elif defined(__FreeBSD__) || defined(__NetBSD__)
+#elif defined(__FreeBSD_kernel__) || defined(__NetBSD__)
     mib[1] = HW_PHYSMEM;
     sysctl(mib, 2, NULL, &size_sys, NULL, 0);
     tmp = malloc(size_sys * sizeof(int));
diff -ur wine-0.9.6.old/dlls/ntdll/cdrom.c wine-0.9.6/dlls/ntdll/cdrom.c
--- wine-0.9.6.old/dlls/ntdll/cdrom.c	2006-01-19 15:14:04.000000000 +0100
+++ wine-0.9.6/dlls/ntdll/cdrom.c	2006-02-02 09:34:39.000000000 +0100
@@ -480,7 +480,7 @@
    cdrom_cache[dev].toc_good = 1;
    return STATUS_SUCCESS;
 
-#elif defined(__FreeBSD__) || defined(__NetBSD__)
+#elif defined(__FreeBSD_kernel__) || defined(__NetBSD__)
 
    int i, tsz;
    struct ioc_toc_header hdr;
@@ -617,7 +617,7 @@
         return 1;
     }
     return 0;
-#elif defined(__FreeBSD__)
+#elif defined(__FreeBSD_kernel__)
     FIXME("not implemented for BSD\n");
     return 0;
 #else
@@ -728,7 +728,7 @@
 {
 #if defined(linux)
     return CDROM_GetStatusCode(ioctl(fd, CDROMRESET));
-#elif defined(__FreeBSD__) || defined(__NetBSD__)
+#elif defined(__FreeBSD_kernel__) || defined(__NetBSD__)
     return CDROM_GetStatusCode(ioctl(fd, CDIOCRESET, NULL));
 #else
     return STATUS_NOT_SUPPORTED;
@@ -744,7 +744,7 @@
 {
 #if defined(linux)
     return CDROM_GetStatusCode(ioctl(fd, doEject ? CDROMEJECT : CDROMCLOSETRAY));
-#elif defined(__FreeBSD__) || defined(__NetBSD__)
+#elif defined(__FreeBSD_kernel__) || defined(__NetBSD__)
     return CDROM_GetStatusCode((ioctl(fd, CDIOCALLOW, NULL)) ||
                                (ioctl(fd, doEject ? CDIOCEJECT : CDIOCCLOSE, NULL)) ||
                                (ioctl(fd, CDIOCPREVENT, NULL)));
@@ -762,7 +762,7 @@
 {
 #if defined(linux)
     return CDROM_GetStatusCode(ioctl(fd, CDROM_LOCKDOOR, rmv->PreventMediaRemoval));
-#elif defined(__FreeBSD__) || defined(__NetBSD__)
+#elif defined(__FreeBSD_kernel__) || defined(__NetBSD__)
     return CDROM_GetStatusCode(ioctl(fd, (rmv->PreventMediaRemoval) ? CDIOCPREVENT : CDIOCALLOW, NULL));
 #else
     return STATUS_NOT_SUPPORTED;
@@ -920,7 +920,7 @@
 
  end:
     ret = CDROM_GetStatusCode(io);
-#elif defined(__FreeBSD__) || defined(__NetBSD__)
+#elif defined(__FreeBSD_kernel__) || defined(__NetBSD__)
     unsigned            size;
     SUB_Q_HEADER*       hdr = (SUB_Q_HEADER*)data;
     int                 io;
@@ -1090,7 +1090,7 @@
 	  msf.cdmsf_min1, msf.cdmsf_sec1, msf.cdmsf_frame1);
  end:
     ret = CDROM_GetStatusCode(io);
-#elif defined(__FreeBSD__) || defined(__NetBSD__)
+#elif defined(__FreeBSD_kernel__) || defined(__NetBSD__)
     struct	ioc_play_msf	msf;
     int         io;
 
@@ -1135,7 +1135,7 @@
 #if defined(linux)
     struct cdrom_msf0	msf;
     struct cdrom_subchnl sc;
-#elif defined(__FreeBSD__) || defined(__NetBSD__)
+#elif defined(__FreeBSD_kernel__) || defined(__NetBSD__)
     struct ioc_play_msf	msf;
     struct ioc_read_subchannel	read_sc;
     struct cd_sub_channel_info	sc;
@@ -1188,7 +1188,7 @@
       return CDROM_GetStatusCode(ioctl(fd, CDROMSEEK, &msf));
     }
     return STATUS_SUCCESS;
-#elif defined(__FreeBSD__) || defined(__NetBSD__)
+#elif defined(__FreeBSD_kernel__) || defined(__NetBSD__)
     read_sc.address_format = CD_MSF_FORMAT;
     read_sc.track          = 0;
     read_sc.data_len       = sizeof(sc);
@@ -1228,7 +1228,7 @@
 {
 #if defined(linux)
     return CDROM_GetStatusCode(ioctl(fd, CDROMPAUSE));
-#elif defined(__FreeBSD__) || defined(__NetBSD__)
+#elif defined(__FreeBSD_kernel__) || defined(__NetBSD__)
     return CDROM_GetStatusCode(ioctl(fd, CDIOCPAUSE, NULL));
 #else
     return STATUS_NOT_SUPPORTED;
@@ -1244,7 +1244,7 @@
 {
 #if defined(linux)
     return CDROM_GetStatusCode(ioctl(fd, CDROMRESUME));
-#elif defined(__FreeBSD__) || defined(__NetBSD__)
+#elif defined(__FreeBSD_kernel__) || defined(__NetBSD__)
     return CDROM_GetStatusCode(ioctl(fd, CDIOCRESUME, NULL));
 #else
     return STATUS_NOT_SUPPORTED;
@@ -1260,7 +1260,7 @@
 {
 #if defined(linux)
     return CDROM_GetStatusCode(ioctl(fd, CDROMSTOP));
-#elif defined(__FreeBSD__) || defined(__NetBSD__)
+#elif defined(__FreeBSD_kernel__) || defined(__NetBSD__)
     return CDROM_GetStatusCode(ioctl(fd, CDIOCSTOP, NULL));
 #else
     return STATUS_NOT_SUPPORTED;
@@ -1287,7 +1287,7 @@
         vc->PortVolume[3] = volc.channel3;
     }
     return CDROM_GetStatusCode(io);
-#elif defined(__FreeBSD__) || defined(__NetBSD__)
+#elif defined(__FreeBSD_kernel__) || defined(__NetBSD__)
     struct  ioc_vol     volc;
     int io;
 
@@ -1321,7 +1321,7 @@
     volc.channel3 = vc->PortVolume[3];
 
     return CDROM_GetStatusCode(ioctl(fd, CDROMVOLCTRL, &volc));
-#elif defined(__FreeBSD__) || defined(__NetBSD__)
+#elif defined(__FreeBSD_kernel__) || defined(__NetBSD__)
     struct  ioc_vol     volc;
 
     volc.vol[0] = vc->PortVolume[0];
@@ -1753,7 +1753,7 @@
     ret =CDROM_GetStatusCode(ioctl(fd, DVD_AUTH, &auth_info));
     *sid_out = auth_info.lsa.agid;
     return ret;
-#elif defined(__FreeBSD__) || defined(__NetBSD__)
+#elif defined(__FreeBSD_kernel__) || defined(__NetBSD__)
     return STATUS_NOT_SUPPORTED;
 #else
     return STATUS_NOT_SUPPORTED;
@@ -1776,7 +1776,7 @@
 
     TRACE("\n");
     return CDROM_GetStatusCode(ioctl(fd, DVD_AUTH, &auth_info));
-#elif defined(__FreeBSD__) || defined(__NetBSD__)
+#elif defined(__FreeBSD_kernel__) || defined(__NetBSD__)
     return STATUS_NOT_SUPPORTED;
 #else
     return STATUS_NOT_SUPPORTED;
@@ -1906,7 +1906,7 @@
 	FIXME("Unknown keytype 0x%x\n",key->KeyType);
     }
     return ret;
-#elif defined(__FreeBSD__) || defined(__NetBSD__)
+#elif defined(__FreeBSD_kernel__) || defined(__NetBSD__)
     TRACE("bsd\n");
     return STATUS_NOT_SUPPORTED;
 #else
diff -ur wine-0.9.6.old/dlls/ntdll/directory.c wine-0.9.6/dlls/ntdll/directory.c
--- wine-0.9.6.old/dlls/ntdll/directory.c	2006-01-19 15:14:04.000000000 +0100
+++ wine-0.9.6/dlls/ntdll/directory.c	2006-02-02 09:34:39.000000000 +0100
@@ -288,7 +288,7 @@
 }
 #endif
 
-#ifdef __FreeBSD__
+#ifdef __FreeBSD_kernel__
 #include <fstab.h>
 static char *parse_mount_entries( FILE *f, dev_t dev, ino_t ino )
 {
@@ -391,7 +391,7 @@
     }
     RtlLeaveCriticalSection( &dir_section );
 
-#elif defined( __FreeBSD__ )
+#elif defined( __FreeBSD_kernel__ )
     char *device = NULL;
     int fd, res = -1;
     struct stat st;
diff -ur wine-0.9.6.old/dlls/ntdll/file.c wine-0.9.6/dlls/ntdll/file.c
--- wine-0.9.6.old/dlls/ntdll/file.c	2006-01-19 15:14:04.000000000 +0100
+++ wine-0.9.6/dlls/ntdll/file.c	2006-02-02 11:42:42.000000000 +0100
@@ -57,6 +57,10 @@
 # endif
 #endif
 
+#if defined(__FreeBSD_kernel__) && (!defined(MNT_RDONLY) || !defined(MNT_LOCAL))
+# include <sys/mount.h>
+#endif
+
 #ifdef HAVE_IOKIT_IOKITLIB_H
 # include <IOKit/IOKitLib.h>
 # include <CoreFoundation/CFNumber.h> /* for kCFBooleanTrue, kCFBooleanFalse */
@@ -1587,7 +1591,7 @@
             info->DeviceType = FILE_DEVICE_DISK_FILE_SYSTEM;
             break;
         }
-#elif defined(__FreeBSD__)
+#elif defined(__FreeBSD_kernel__)
         struct statfs stfs;
 
         /* The proper way to do this in FreeBSD seems to be with the
diff -ur wine-0.9.6.old/dlls/ntdll/signal_i386.c wine-0.9.6/dlls/ntdll/signal_i386.c
--- wine-0.9.6.old/dlls/ntdll/signal_i386.c	2006-01-19 15:14:04.000000000 +0100
+++ wine-0.9.6/dlls/ntdll/signal_i386.c	2006-02-02 11:46:00.000000000 +0100
@@ -204,7 +204,7 @@
 
 #endif /* bsdi */
 
-#if defined(__NetBSD__) || defined(__FreeBSD__) || defined(__OpenBSD__)
+#if defined(__NetBSD__) || defined(__FreeBSD_kernel__) || defined(__OpenBSD__)
 
 typedef struct sigcontext SIGCONTEXT;
 
@@ -328,7 +328,7 @@
 
 #endif /* __APPLE__ */
 
-#if defined(linux) || defined(__NetBSD__) || defined(__FreeBSD__) ||\
+#if defined(linux) || defined(__NetBSD__) || defined(__FreeBSD_kernel__) ||\
     defined(__OpenBSD__) || defined(__EMX__) || defined(__CYGWIN__)
 
 #define EAX_sig(context)     ((context)->sc_eax)
@@ -358,7 +358,7 @@
 #define FAULT_ADDRESS        ((void *)HANDLER_CONTEXT->cr2)
 #endif
 
-#ifdef __FreeBSD__
+#ifdef __FreeBSD_kernel__
 #define EFL_sig(context)     ((context)->sc_efl)
 /* FreeBSD, see i386/i386/traps.c::trap_pfault va->err kludge  */
 #define FAULT_ADDRESS        ((void *)HANDLER_CONTEXT->sc_err)
@@ -369,7 +369,7 @@
 #define EIP_sig(context)     (*((unsigned long*)&(context)->sc_eip))
 #define ESP_sig(context)     (*((unsigned long*)&(context)->sc_esp))
 
-#endif  /* linux || __NetBSD__ || __FreeBSD__ || __OpenBSD__ */
+#endif  /* linux || __NetBSD__ || __FreeBSD_kernel__ || __OpenBSD__ */
 
 #if defined(__svr4__) || defined(_SCO_DS) || defined(__sun)
 
@@ -1373,7 +1373,7 @@
     sigaddset( &sig_act.sa_mask, SIGUSR1 );
     sigaddset( &sig_act.sa_mask, SIGUSR2 );
 
-#if defined(linux) || defined(__NetBSD__) || defined(__FreeBSD__) || defined(__OpenBSD__)
+#if defined(linux) || defined(__NetBSD__) || defined(__FreeBSD_kernel__) || defined(__OpenBSD__)
     sig_act.sa_flags = SA_RESTART;
 #elif defined (__svr4__) || defined(_SCO_DS) || defined(__APPLE__)
     sig_act.sa_flags = SA_SIGINFO | SA_RESTART;
diff -ur wine-0.9.6.old/dlls/winsock/socket.c wine-0.9.6/dlls/winsock/socket.c
--- wine-0.9.6.old/dlls/winsock/socket.c	2006-01-19 15:14:27.000000000 +0100
+++ wine-0.9.6/dlls/winsock/socket.c	2006-02-02 09:34:39.000000000 +0100
@@ -144,10 +144,10 @@
 #endif
 
 
-#ifdef __FreeBSD__
+#ifdef __FreeBSD_kernel__
 # define sipx_network    sipx_addr.x_net
 # define sipx_node       sipx_addr.x_host.c_host
-#endif  /* __FreeBSD__ */
+#endif  /* __FreeBSD_kernel__ */
 
 #ifndef INADDR_NONE
 #define INADDR_NONE ~0UL
diff -ur wine-0.9.6.old/include/wine/port.h wine-0.9.6/include/wine/port.h
--- wine-0.9.6.old/include/wine/port.h	2006-01-19 15:14:29.000000000 +0100
+++ wine-0.9.6/include/wine/port.h	2006-02-02 09:34:39.000000000 +0100
@@ -443,4 +443,8 @@
 
 #endif /* NO_LIBWINE_PORT */
 
+#if defined(__FreeBSD__) && !defined(__FreeBSD_kernel__)
+#define __FreeBSD_kernel__
+#endif
+
 #endif /* !defined(__WINE_WINE_PORT_H) */
diff -ur wine-0.9.6.old/libs/wine/ldt.c wine-0.9.6/libs/wine/ldt.c
--- wine-0.9.6.old/libs/wine/ldt.c	2006-01-19 15:14:30.000000000 +0100
+++ wine-0.9.6/libs/wine/ldt.c	2006-02-02 10:06:20.000000000 +0100
@@ -109,12 +140,12 @@
 #endif
 #endif
 
-#if defined(__NetBSD__) || defined(__FreeBSD__) || defined(__OpenBSD__)
+#if defined(__NetBSD__) || defined(__FreeBSD_kernel__) || defined(__OpenBSD__)
 #include <machine/segments.h>
 
 extern int i386_get_ldt(int, union descriptor *, int);
 extern int i386_set_ldt(int, union descriptor *, int);
-#endif  /* __NetBSD__ || __FreeBSD__ || __OpenBSD__ */
+#endif  /* __NetBSD__ || __FreeBSD_kernel__ || __OpenBSD__ */
 
 #ifdef __APPLE__
 
@@ -217,7 +248,7 @@
         if ((ret = modify_ldt(0x11, &ldt_info, sizeof(ldt_info))) < 0)
             perror( "modify_ldt" );
     }
-#elif defined(__NetBSD__) || defined(__FreeBSD__) || defined(__OpenBSD__)
+#elif defined(__NetBSD__) || defined(__FreeBSD_kernel__) || defined(__OpenBSD__)
     {
 	LDT_ENTRY entry_copy = *entry;
 	/* The kernel will only let us set LDTs with user priority level */
diff -ur wine-0.9.6.old/libs/wine/mmap.c wine-0.9.6/libs/wine/mmap.c
--- wine-0.9.6.old/libs/wine/mmap.c	2006-01-19 15:14:30.000000000 +0100
+++ wine-0.9.6/libs/wine/mmap.c	2006-02-02 09:34:39.000000000 +0100
@@ -196,7 +196,7 @@
 
     if (!(flags & MAP_FIXED))
     {
-#ifdef __FreeBSD__
+#ifdef __FreeBSD_kernel__
         /* Even FreeBSD 5.3 does not properly support NULL here. */
         if( start == NULL ) start = (void *)0x110000;
 #endif
@@ -280,7 +280,7 @@
 {
     struct reserved_area *area;
     struct list *ptr;
-#if defined(__i386__) && !defined(__FreeBSD__)  /* commented out until FreeBSD gets fixed */
+#if defined(__i386__) && !defined(__FreeBSD_kernel__)  /* commented out until FreeBSD gets fixed */
     char stack;
     char * const stack_ptr = &stack;
     char *user_space_limit = (char *)0x80000000;
diff -ur wine-0.9.6.old/server/context_i386.c wine-0.9.6/server/context_i386.c
--- wine-0.9.6.old/server/context_i386.c	2006-01-19 15:14:41.000000000 +0100
+++ wine-0.9.6/server/context_i386.c	2006-02-02 09:34:39.000000000 +0100
@@ -19,6 +19,7 @@
  */
 
 #include "config.h"
+#include "wine/port.h"
 
 #ifdef __i386__
 
@@ -340,7 +341,7 @@
     file_set_error();
 }
 
-#elif defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__NetBSD__)
+#elif defined(__FreeBSD_kernel__) || defined(__OpenBSD__) || defined(__NetBSD__)
 #include <machine/reg.h>
 
 /* retrieve a thread context */
@@ -495,9 +496,9 @@
     file_set_error();
 }
 
-#else  /* linux || __sun__ || __FreeBSD__ */
+#else  /* linux || __sun__ || __FreeBSD_kernel__ */
 #error You must implement get/set_thread_context_ptrace for your platform
-#endif  /* linux || __sun__ || __FreeBSD__ */
+#endif  /* linux || __sun__ || __FreeBSD_kernel__ */
 
 
 /* copy a context structure according to the flags */
