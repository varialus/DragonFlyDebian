diff -uNr mgetty-1.1.33.old/logfile.c mgetty-1.1.33.new/logfile.c
--- mgetty-1.1.33.old/logfile.c	2005-11-09 10:26:41.000000000 +0100
+++ mgetty-1.1.33.new/logfile.c	2005-11-09 10:32:35.000000000 +0100
@@ -25,7 +25,7 @@
 #include <syslog.h>
 
 #if !defined(linux) && !defined(BSD) && !defined(_SCO_DS) && \
-    !defined(SVR42) && !defined(solaris2) && !defined(_AIX)
+    !defined(SVR42) && !defined(solaris2) && !defined(_AIX) && !defined(__GLIBC__)
 int openlog _PROTO(( char *, int, int ));
 int syslog _PROTO(( int, char *, ... ));
 #endif
@@ -58,10 +58,16 @@
 /* Most systems have these variables but do not declare them. On many
    of those systems that _do_ declare them, it won't hurt */
 
+/* commented in by was@debian.org on Wed, 27 Nov 2002 01:15:11 -0500
+   because sys_nerr and sys_errlist are deprecated. strerror() is used
+   instead below.*/
+
+#if 0
 #if !defined(__NetBSD__) && !defined( __FreeBSD__ ) && !defined(__OpenBSD__) && !defined(__GLIBC__) && !defined(__MACH__)
 extern int sys_nerr;
 extern char *sys_errlist[];
 #endif
+#endif
 
 /* Interactive Unix is a little bit braindead - does not have atexit(),
  */
@@ -211,6 +217,7 @@
 va_list pvar;
 int     errnr;
 char * p;
+char *error_string;
 static int first_open = TRUE;
 
     if ( level > log_level )	/* log level high enough? */
@@ -327,12 +334,20 @@
     }
     else		/* ERROR or FATAL */
     {
+        error_string = strerror (errnr);
+	if ( error_string == NULL )
+	{
+            if ( errno == EINVAL )
+	        error_string = "<error not in list>";
+	    else
+	        error_string = "<error calling strerror()>";
+	}
+
 	fprintf(log_fp, "\n%02d/%02d %02d:%02d:%02d %s %s: %s",
 		             tm->tm_mon+1,  tm->tm_mday,
 			     tm->tm_hour, tm->tm_min, tm->tm_sec,
 		             log_infix, ws,
-			     ( errnr <= sys_nerr ) ? sys_errlist[errnr]:
-			     "<error not in list>" );
+			     strerror (errnr));
 #ifdef SYSLOG
 	syslog( level == L_FATAL? LOG_ALERT: LOG_ERR, "%s: %m", ws );
 #endif
diff -uNr mgetty-1.1.33.old/mgetty.h mgetty-1.1.33.new/mgetty.h
--- mgetty-1.1.33.old/mgetty.h	2005-11-09 10:26:41.000000000 +0100
+++ mgetty-1.1.33.new/mgetty.h	2005-11-09 10:28:50.000000000 +0100
@@ -313,7 +313,7 @@
 extern char * mktemp _PROTO(( char * template ));
 
 #if  !defined(linux) && !defined(SVR4) && !defined(__hpux) && \
-     !defined(BSD) && !defined(M_UNIX) && !defined(_AIX)
+     !defined(BSD) && !defined(M_UNIX) && !defined(_AIX) && !defined(__GLIBC__)
 extern int	getopt _PROTO(( int, char **, char * ));
 #endif
 extern int	optind;
diff -uNr mgetty-1.1.33.old/tio.c mgetty-1.1.33.new/tio.c
--- mgetty-1.1.33.old/tio.c	2005-11-09 10:26:41.000000000 +0100
+++ mgetty-1.1.33.new/tio.c	2005-11-09 10:34:02.000000000 +0100
@@ -45,7 +45,7 @@
 
 /* some systems do not define all flags needed later, e.g. NetBSD */
 
-#ifdef BSD
+#if defined(BSD) || defined(__FreeBSD_kernel__)
 # ifndef IUCLC
 # define IUCLC 0
 # endif
diff -uNr mgetty-1.1.33.old/tio.h mgetty-1.1.33.new/tio.h
--- mgetty-1.1.33.old/tio.h	2005-11-09 10:26:41.000000000 +0100
+++ mgetty-1.1.33.new/tio.h	2005-11-09 10:31:10.000000000 +0100
@@ -18,7 +18,7 @@
 #if !defined( POSIX_TERMIOS ) && !defined( BSD_SGTTY ) && !defined( SYSV_TERMIO)
 # if defined(linux) || defined(sunos4) || defined(_AIX) || defined(BSD) || \
      defined(SVR4) || defined(solaris2) || defined(m88k) || defined(M_UNIX) ||\
-     defined(__sgi)
+     defined(__sgi) || defined(__GLIBC__)
 #  define POSIX_TERMIOS
 # else
 #  define SYSV_TERMIO
