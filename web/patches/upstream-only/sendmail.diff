diff -uNr sendmail-8.13.4.orig/devtools/bin/Build sendmail-8.13.4/devtools/bin/Build
--- sendmail-8.13.4.orig/devtools/bin/Build	2003-08-20 20:08:35.000000000 +0200
+++ sendmail-8.13.4/devtools/bin/Build	2005-04-13 12:53:46.000000000 +0200
@@ -422,6 +422,7 @@
   NeXT)		mkdir="mkdirs";;
   UNICOSMK)	rel=`echo $rel | sed -e 's/\(.*\)\.\(.*\)\.\(.*\)\..*$/\1.\2.\3/'`;;
   UNICOS*)	rel=`echo $rel | sed -e 's/\(.*\)\.\(.*\)\..*$/\1.\2/'`;;
+  GNU-*)	os=Linux;;
 esac
 
 # get "base part" of operating system release
diff -uNr sendmail-8.13.4.orig/include/sm/conf.h sendmail-8.13.4/include/sm/conf.h
--- sendmail-8.13.4.orig/include/sm/conf.h	2005-03-22 23:07:53.000000000 +0100
+++ sendmail-8.13.4/include/sm/conf.h	2005-04-13 13:17:25.000000000 +0200
@@ -773,7 +773,7 @@
 **	See also BSD defines.
 */
 
-# if defined(BSD4_4) && !defined(__bsdi__) && !defined(__GNU__)
+# if defined(BSD4_4) && !defined(__bsdi__) && !defined(__GNU__) && !defined(__GLIBC__)
 #  include <paths.h>
 #  define HASUNSETENV	1	/* has unsetenv(3) call */
 #  define USESETEUID	1	/* has usable seteuid(2) call */
@@ -791,7 +791,7 @@
 #  endif /* ! LA_TYPE */
 #  define SFS_TYPE	SFS_MOUNT	/* use <sys/mount.h> statfs() impl */
 #  define SPT_TYPE	SPT_PSSTRINGS	/* use PS_STRINGS pointer */
-# endif /* defined(BSD4_4) && !defined(__bsdi__) && !defined(__GNU__) */
+# endif /* defined(BSD4_4) && !defined(__bsdi__) && !defined(__GNU__) && !defined(__GLIBC__) */
 
 
 /*
@@ -1361,7 +1361,7 @@
 
 
 /*
-**  Linux 0.99pl10 and above...
+**  Linux 0.99pl10 and above, and other glibc based systems
 **
 **  Thanks to, in reverse order of contact:
 **
@@ -1376,12 +1376,14 @@
 **	*or* fcntl(2) file locking, but not both.
 */
 
-# ifdef __linux__
-#  include <linux/version.h>
-#  if !defined(KERNEL_VERSION)	/* not defined in 2.0.x kernel series */
-#   define KERNEL_VERSION(a,b,c) (((a) << 16) + ((b) << 8) + (c))
-#  endif /* !defined(KERNEL_VERSION) */
-#  define BSD		1	/* include BSD defines */
+# if defined(__linux__) || defined (__GLIBC__)
+#  ifdef __linux__
+#   include <linux/version.h>
+#   if !defined(KERNEL_VERSION)	/* not defined in 2.0.x kernel series */
+#    define KERNEL_VERSION(a,b,c) (((a) << 16) + ((b) << 8) + (c))
+#   endif /* !defined(KERNEL_VERSION) */
+#   define BSD		1	/* include BSD defines */
+#  endif /* __linux__ */
 #  define HASSETREGID	1	/* use setregid(2) to set saved gid */
 #  ifndef REQUIRES_DIR_FSYNC
 #   define REQUIRES_DIR_FSYNC	1	/* requires fsync() on directory */
@@ -1406,27 +1408,31 @@
 #  ifndef USE_SIGLONGJMP
 #   define USE_SIGLONGJMP	1 /* sigsetjmp needed for signal handling */
 #  endif /* ! USE_SIGLONGJMP */
-#  ifndef HASFLOCK
-#   if LINUX_VERSION_CODE < 66399
-#    define HASFLOCK	0	/* flock(2) is broken after 0.99.13 */
-#   else /* LINUX_VERSION_CODE < 66399 */
-#     if (LINUX_VERSION_CODE < KERNEL_VERSION(2,4,0))
-#      define HASFLOCK	1	/* flock(2) fixed after 1.3.95 */
-#     else /* (LINUX_VERSION_CODE < KERNEL_VERSION(2,4,0)) */
-#      define HASFLOCK	0	/* flock(2) is broken (again) after 2.4.0 */
-#     endif /* (LINUX_VERSION_CODE < KERNEL_VERSION(2,4,0)) */
-#   endif /* LINUX_VERSION_CODE < 66399 */
-#  endif /* ! HASFLOCK */
+#  ifdef __linux__
+#   ifndef HASFLOCK
+#    if LINUX_VERSION_CODE < 66399
+#     define HASFLOCK	0	/* flock(2) is broken after 0.99.13 */
+#    else /* LINUX_VERSION_CODE < 66399 */
+#      if (LINUX_VERSION_CODE < KERNEL_VERSION(2,4,0))
+#       define HASFLOCK	1	/* flock(2) fixed after 1.3.95 */
+#      else /* (LINUX_VERSION_CODE < KERNEL_VERSION(2,4,0)) */
+#       define HASFLOCK	0	/* flock(2) is broken (again) after 2.4.0 */
+#      endif /* (LINUX_VERSION_CODE < KERNEL_VERSION(2,4,0)) */
+#    endif /* LINUX_VERSION_CODE < 66399 */
+#   endif /* ! HASFLOCK */
+#  endif /* __linux__ */
 #  ifndef LA_TYPE
 #   define LA_TYPE	LA_PROCSTR
 #  endif /* ! LA_TYPE */
 #  define SFS_TYPE	SFS_VFS		/* use <sys/vfs.h> statfs() impl */
 #  define SPT_PADCHAR	'\0'		/* pad process title with nulls */
-#  if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,0,0))
-#   ifndef HASURANDOMDEV
-#    define HASURANDOMDEV 1	/* 2.0 (at least) has linux/drivers/char/random.c */
-#   endif /* ! HASURANDOMDEV */
-#  endif /* (LINUX_VERSION_CODE >= KERNEL_VERSION(2,0,0)) */
+#  ifdef __linux__
+#   if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,0,0))
+#    ifndef HASURANDOMDEV
+#     define HASURANDOMDEV 1	/* 2.0 (at least) has linux/drivers/char/random.c */
+#    endif /* ! HASURANDOMDEV */
+#   endif /* (LINUX_VERSION_CODE >= KERNEL_VERSION(2,0,0)) */
+#  endif /* __linux__ */
 #  if defined(__GLIBC__) && defined(__GLIBC_MINOR__)
 #   define HASSTRERROR	1	/* has strerror(3) */
 #  endif /* defined(__GLIBC__) && defined(__GLIBC_MINOR__) */
@@ -1442,13 +1448,15 @@
 #  include <sys/sysmacros.h>
 #  undef atol			/* wounded in <stdlib.h> */
 #  if NETINET6
-   /*
-   **  Linux doesn't have a good way to tell userland what interfaces are
-   **  IPv6-capable.  Therefore, the BIND resolver can not determine if there
-   **  are IPv6 interfaces to honor AI_ADDRCONFIG.  Unfortunately, it assumes
-   **  that none are present.  (Excuse the macro name ADDRCONFIG_IS_BROKEN.)
-   */
-#   define ADDRCONFIG_IS_BROKEN	1
+#   ifdef __linux__
+    /*
+    **  Linux doesn't have a good way to tell userland what interfaces are
+    **  IPv6-capable.  Therefore, the BIND resolver can not determine if there
+    **  are IPv6 interfaces to honor AI_ADDRCONFIG.  Unfortunately, it assumes
+    **  that none are present.  (Excuse the macro name ADDRCONFIG_IS_BROKEN.)
+    */
+#    define ADDRCONFIG_IS_BROKEN	1
+#   endif /* __linux__ */
 
    /*
    **  Indirectly included from glibc's <feature.h>.  IPv6 support is native
@@ -1471,10 +1479,12 @@
 #  ifndef HASFCHOWN
 #   define HASFCHOWN	1	/* fchown(2) */
 #  endif /* ! HASFCHOWN */
-#  if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,0,36)) && !defined(HASFCHMOD)
-#    define HASFCHMOD	1	/* fchmod(2) */
-#  endif /* (LINUX_VERSION_CODE >= KERNEL_VERSION(2,0,36)) && !defined(HASFCHMOD) */
-# endif /* __linux__ */
+#  ifdef __linux__
+#   if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,0,36)) && !defined(HASFCHMOD)
+#     define HASFCHMOD	1	/* fchmod(2) */
+#   endif /* (LINUX_VERSION_CODE >= KERNEL_VERSION(2,0,36)) && !defined(HASFCHMOD) */
+#  endif /* __linux__ */
+# endif /* defined (__linux__) || defined(__GLIBC__) */
 
 
 /*
diff -uNr sendmail-8.13.4.orig/include/sm/os/sm_os_linux.h sendmail-8.13.4/include/sm/os/sm_os_linux.h
--- sendmail-8.13.4.orig/include/sm/os/sm_os_linux.h	2001-10-05 03:52:41.000000000 +0200
+++ sendmail-8.13.4/include/sm/os/sm_os_linux.h	2005-04-13 12:58:18.000000000 +0200
@@ -15,23 +15,27 @@
 
 #define SM_OS_NAME	"linux"
 
-/* to get version number */
-#include <linux/version.h>
+#if defined(__linux__)
 
-# if !defined(KERNEL_VERSION)	/* not defined in 2.0.x kernel series */
-#  define KERNEL_VERSION(a,b,c) (((a) << 16) + ((b) << 8) + (c))
-# endif /* ! KERNEL_VERSION */
-
-/* doesn't seem to work on Linux */
-#ifndef SM_CONF_SETITIMER
-# define SM_CONF_SETITIMER	0
-#endif /* SM_CONF_SETITIMER */
-
-#ifndef SM_CONF_SHM
-# if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,2,19))
-#  define SM_CONF_SHM	1
-# endif /* LINUX_VERSION_CODE */
-#endif /* SM_CONF_SHM */
+ /* to get version number */
+# include <linux/version.h>
+
+#  if !defined(KERNEL_VERSION)	/* not defined in 2.0.x kernel series */
+#   define KERNEL_VERSION(a,b,c) (((a) << 16) + ((b) << 8) + (c))
+#  endif /* ! KERNEL_VERSION */
+
+ /* doesn't seem to work on Linux */
+# ifndef SM_CONF_SETITIMER
+#  define SM_CONF_SETITIMER	0
+# endif /* SM_CONF_SETITIMER */
+
+# ifndef SM_CONF_SHM
+#  if (LINUX_VERSION_CODE >= KERNEL_VERSION(2,2,19))
+#   define SM_CONF_SHM	1
+#  endif /* LINUX_VERSION_CODE */
+# endif /* SM_CONF_SHM */
+
+#endif /* (__linux__) */
 
 #define SM_CONF_SYS_CDEFS_H	1
 #ifndef SM_CONF_SEM
