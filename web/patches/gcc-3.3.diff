
Status:  dirty, will never merge (gcc-4.0 includes proper fixes)

diff -Nur gcc-3.3-3.3.5.old/debian/patches/autoreconf.dpatch gcc-3.3-3.3.5/debian/patches/autoreconf.dpatch
--- gcc-3.3-3.3.5.old/debian/patches/autoreconf.dpatch	2004-12-21 13:31:43.000000000 +0100
+++ gcc-3.3-3.3.5/debian/patches/autoreconf.dpatch	2004-12-21 02:45:16.000000000 +0100
@@ -14,7 +14,10 @@
     -patch)
         patch $pdir -f --no-backup-if-mismatch -p0 < $0
 	for i in libf2c libjava/libltdl libobjc libstdc++-v3 zlib; do
-		(cd ${dir}/${i} ; autoreconf --force)
+		(cd ${dir}/${i} ; autoreconf2.13 --force)
+	done
+	for i in . boehm-gc ; do
+		cp -f /usr/share/misc/config.* ${dir}/${i}/
 	done
         ;;
     -unpatch)
@@ -38,3 +41,129 @@
      lt_cv_deplibs_check_method=pass_all ;;
    *)
      # glibc up to 2.1.1 does not perform some relocations on ARM
+@@ -687,7 +687,7 @@
+   lt_cv_file_magic_test_file=`echo /lib/libc.so* /lib/libc-*.so`
+   ;;
+ 
+-netbsd*)
++netbsd* | knetbsd*-gnu)
+   if echo __ELF__ | $CC -E - | grep __ELF__ > /dev/null; then
+     [lt_cv_deplibs_check_method='match_pattern /lib[^/\.]+\.so\.[0-9]+\.[0-9]+$']
+   else
+diff -ur ../src.old/ltcf-c.sh ./ltcf-c.sh
+--- ../src.old/ltcf-c.sh	2002-08-14 04:39:52.000000000 +0200
++++ ./ltcf-c.sh	2003-12-18 21:30:48.000000000 +0100
+@@ -185,7 +185,7 @@
+     whole_archive_flag_spec='-all_load $convenience'
+     ;;
+ 
+-  netbsd*)
++  netbsd* | knetbsd*-gnu)
+     if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
+       archive_cmds='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'
+       wlarc=
+@@ -456,7 +456,7 @@
+     link_all_deplibs=yes
+     ;;
+ 
+-  netbsd*)
++  netbsd* | knetbsd*-gnu)
+     if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
+       archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out
+     else
+diff -ur ../src.old/ltcf-cxx.sh ./ltcf-cxx.sh
+--- ../src.old/ltcf-cxx.sh	2003-02-20 02:12:47.000000000 +0100
++++ ./ltcf-cxx.sh	2003-12-18 21:31:18.000000000 +0100
+@@ -404,7 +404,7 @@
+         ;;
+     esac
+     ;;
+-  netbsd*)
++  netbsd* | knetbsd*-gnu)
+     # NetBSD uses g++ - do we need to do anything?
+     ;;
+   osf3*)
+diff -ur ../src.old/ltcf-gcj.sh ./ltcf-gcj.sh
+--- ../src.old/ltcf-gcj.sh	2003-02-20 01:36:49.000000000 +0100
++++ ./ltcf-gcj.sh	2003-12-18 21:31:47.000000000 +0100
+@@ -178,7 +178,7 @@
+       $CC $output_objdir/$soname-exp '$lt_cv_cc_dll_switch' -Wl,-e,'$dll_entry' -o $output_objdir/$soname '$ltdll_obj'$libobjs $deplibs $compiler_flags'
+     ;;
+ 
+-  netbsd*)
++  netbsd* | knetbsd*-gnu)
+     if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
+       archive_cmds='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'
+       wlarc=
+@@ -433,7 +433,7 @@
+     link_all_deplibs=yes
+     ;;
+ 
+-  netbsd*)
++  netbsd* | knetbsd*-gnu)
+     if echo __ELF__ | $CC -E - | grep __ELF__ >/dev/null; then
+       archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out
+     else
+diff -ur ../src.old/ltconfig ./ltconfig
+--- ../src.old/ltconfig	2003-02-20 03:10:02.000000000 +0100
++++ ./ltconfig	2003-12-18 21:33:54.000000000 +0100
+@@ -1152,6 +1152,17 @@
+   hardcode_into_libs=yes
+   ;;
+ 
++k*bsd*-gnu)
++  version_type=linux
++  need_lib_prefix=no
++  need_version=no
++  library_names_spec='${libname}${release}.so$versuffix ${libname}${release}.so${major} ${libname}.so'
++  soname_spec='${libname}${release}.so$major'
++  shlibpath_var=LD_LIBRARY_PATH
++  shlibpath_overrides_runpath=yes
++  hardcode_into_libs=yes
++  ;;
++
+ hpux9* | hpux10* | hpux11*)
+   # Give a soname corresponding to the major version so that dld.sl refuses to
+   # link against other versions.
+--- ltcf-c.sh~	2004-01-13 05:20:39.000000000 +0100
++++ ltcf-c.sh	2004-01-13 05:28:22.000000000 +0100
+@@ -409,7 +409,7 @@
+     ;;
+ 
+   # FreeBSD 3 and greater uses gcc -shared to do shared libraries.
+-  freebsd*)
++  freebsd* | kfreebsd*-gnu)
+     archive_cmds='$CC -shared -o $lib $libobjs $deplibs $compiler_flags'
+     hardcode_libdir_flag_spec='-R$libdir'
+     hardcode_direct=yes
+--- ltcf-cxx.sh~	2004-01-13 05:20:39.000000000 +0100
++++ ltcf-cxx.sh	2004-01-13 05:29:15.000000000 +0100
+@@ -241,7 +241,7 @@
+     # C++ shared libraries reported to be fairly broken before switch to ELF
+     ld_shlibs=no
+     ;;
+-  freebsd*)
++  freebsd* | kfreebsd*-gnu)
+     # FreeBSD 3 and later use GNU C++ and GNU ld with standard ELF
+     # conventions
+     ld_shlibs=yes
+@@ -743,7 +743,7 @@
+           ;;
+       esac
+       ;;
+-    freebsd*)
++    freebsd* | kfreebsd*-gnu)
+       # FreeBSD uses GNU C++
+       ;;
+     gnu*)
+--- ltcf-gcj.sh~	2004-01-13 05:20:39.000000000 +0100
++++ ltcf-gcj.sh	2004-01-13 05:29:34.000000000 +0100
+@@ -402,7 +402,7 @@
+     ;;
+ 
+   # FreeBSD 3 and greater uses gcc -shared to do shared libraries.
+-  freebsd*)
++  freebsd* | kfreebsd*-gnu)
+     archive_cmds='$CC -shared -o $lib $libobjs $deplibs $compiler_flags'
+     hardcode_libdir_flag_spec='-R$libdir'
+     hardcode_direct=yes
diff -Nur gcc-3.3-3.3.5.old/debian/patches/kbsd-gnu.dpatch gcc-3.3-3.3.5/debian/patches/kbsd-gnu.dpatch
--- gcc-3.3-3.3.5.old/debian/patches/kbsd-gnu.dpatch	1970-01-01 01:00:00.000000000 +0100
+++ gcc-3.3-3.3.5/debian/patches/kbsd-gnu.dpatch	2004-12-21 02:45:16.000000000 +0100
@@ -0,0 +1,408 @@
+#! /bin/sh -e
+
+# All lines beginning with `# DPATCH:' are a description of the patch.
+# DP: GNU/k*BSD
+
+dir=
+if [ $# -eq 3 -a "$2" = '-d' ]; then
+    pdir="-d $3"
+    dir="$3/"
+elif [ $# -ne 1 ]; then
+    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
+    exit 1
+fi
+case "$1" in
+    -patch)
+        patch $pdir -f --no-backup-if-mismatch -p1 < $0
+        #cd ${dir}gcc && autoconf
+        ;;
+    -unpatch)
+        patch $pdir -f --no-backup-if-mismatch -R -p1 < $0
+        #rm ${dir}gcc/configure
+        ;;
+    *)
+        echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
+        exit 1
+esac
+exit 0
+
+# append the patch here and adjust the -p? flag in the patch calls.
+
+diff -Nur src.old/gcc/config/i386/kfreebsd-gnu.h src/gcc/config/i386/kfreebsd-gnu.h
+--- src.old/gcc/config/i386/kfreebsd-gnu.h	1970-01-01 01:00:00.000000000 +0100
++++ src/gcc/config/i386/kfreebsd-gnu.h	2004-11-29 22:01:31.000000000 +0100
+@@ -0,0 +1,9 @@
++
++#undef LINK_SPEC
++#define LINK_SPEC "-m elf_i386_fbsd %{shared:-shared} \
++  %{!shared: \
++    %{!ibcs: \
++      %{!static: \
++	%{rdynamic:-export-dynamic} \
++	%{!dynamic-linker:-dynamic-linker /lib/ld.so.1}} \
++	%{static:-static}}}"
+diff -Nur src.old/gcc/config/i386/knetbsd-gnu.h src/gcc/config/i386/knetbsd-gnu.h
+--- src.old/gcc/config/i386/knetbsd-gnu.h	1970-01-01 01:00:00.000000000 +0100
++++ src/gcc/config/i386/knetbsd-gnu.h	2004-11-29 22:01:53.000000000 +0100
+@@ -0,0 +1,9 @@
++
++#undef LINK_SPEC
++#define LINK_SPEC "-m elf_i386 %{shared:-shared} \
++  %{!shared: \
++    %{!ibcs: \
++      %{!static: \
++	%{rdynamic:-export-dynamic} \
++	%{!dynamic-linker:-dynamic-linker /lib/ld.so.1}} \
++	%{static:-static}}}"
+diff -Nur src.old/gcc/config/i386/linux.h src/gcc/config/i386/linux.h
+--- src.old/gcc/config/i386/linux.h	2003-11-14 07:46:12.000000000 +0100
++++ src/gcc/config/i386/linux.h	2004-11-29 21:59:56.000000000 +0100
+@@ -267,28 +267,28 @@
+     else								\
+       break;								\
+ 									\
+-    new_cfa_ = sc_->esp;						\
++    new_cfa_ = sc_->sc_esp;						\
+     (FS)->cfa_how = CFA_REG_OFFSET;					\
+     (FS)->cfa_reg = 4;							\
+     (FS)->cfa_offset = new_cfa_ - (long) (CONTEXT)->cfa;		\
+ 									\
+     /* The SVR4 register numbering macros aren't usable in libgcc.  */	\
+     (FS)->regs.reg[0].how = REG_SAVED_OFFSET;				\
+-    (FS)->regs.reg[0].loc.offset = (long)&sc_->eax - new_cfa_;		\
++    (FS)->regs.reg[0].loc.offset = (long)&sc_->sc_eax - new_cfa_;		\
+     (FS)->regs.reg[3].how = REG_SAVED_OFFSET;				\
+-    (FS)->regs.reg[3].loc.offset = (long)&sc_->ebx - new_cfa_;		\
++    (FS)->regs.reg[3].loc.offset = (long)&sc_->sc_ebx - new_cfa_;		\
+     (FS)->regs.reg[1].how = REG_SAVED_OFFSET;				\
+-    (FS)->regs.reg[1].loc.offset = (long)&sc_->ecx - new_cfa_;		\
++    (FS)->regs.reg[1].loc.offset = (long)&sc_->sc_ecx - new_cfa_;		\
+     (FS)->regs.reg[2].how = REG_SAVED_OFFSET;				\
+-    (FS)->regs.reg[2].loc.offset = (long)&sc_->edx - new_cfa_;		\
++    (FS)->regs.reg[2].loc.offset = (long)&sc_->sc_edx - new_cfa_;		\
+     (FS)->regs.reg[6].how = REG_SAVED_OFFSET;				\
+-    (FS)->regs.reg[6].loc.offset = (long)&sc_->esi - new_cfa_;		\
++    (FS)->regs.reg[6].loc.offset = (long)&sc_->sc_esi - new_cfa_;		\
+     (FS)->regs.reg[7].how = REG_SAVED_OFFSET;				\
+-    (FS)->regs.reg[7].loc.offset = (long)&sc_->edi - new_cfa_;		\
++    (FS)->regs.reg[7].loc.offset = (long)&sc_->sc_edi - new_cfa_;		\
+     (FS)->regs.reg[5].how = REG_SAVED_OFFSET;				\
+-    (FS)->regs.reg[5].loc.offset = (long)&sc_->ebp - new_cfa_;		\
++    (FS)->regs.reg[5].loc.offset = (long)&sc_->sc_ebp - new_cfa_;		\
+     (FS)->regs.reg[8].how = REG_SAVED_OFFSET;				\
+-    (FS)->regs.reg[8].loc.offset = (long)&sc_->eip - new_cfa_;		\
++    (FS)->regs.reg[8].loc.offset = (long)&sc_->sc_eip - new_cfa_;		\
+     (FS)->retaddr_column = 8;						\
+     goto SUCCESS;							\
+   } while (0)
+diff -Nur src.old/gcc/config/kfreebsd-gnu.h src/gcc/config/kfreebsd-gnu.h
+--- src.old/gcc/config/kfreebsd-gnu.h	1970-01-01 01:00:00.000000000 +0100
++++ src/gcc/config/kfreebsd-gnu.h	2004-11-29 22:01:23.000000000 +0100
+@@ -0,0 +1,17 @@
++
++#undef TARGET_OS_CPP_BUILTINS    
++#define TARGET_OS_CPP_BUILTINS()		\
++  do						\
++    {						\
++	builtin_define ("__GLIBC__");		\
++	builtin_define ("__FreeBSD_kernel__");	\
++	builtin_define_std ("unix");		\
++	builtin_define ("__ELF__");		\
++	builtin_assert ("system=posix");	\
++	if (flag_pic)				\
++	  {					\
++	    builtin_define ("__PIC__");		\
++	    builtin_define ("__pic__");		\
++	  }					\
++    }						\
++  while (0)
+diff -Nur src.old/gcc/config/knetbsd-gnu.h src/gcc/config/knetbsd-gnu.h
+--- src.old/gcc/config/knetbsd-gnu.h	1970-01-01 01:00:00.000000000 +0100
++++ src/gcc/config/knetbsd-gnu.h	2004-11-29 22:01:44.000000000 +0100
+@@ -0,0 +1,18 @@
++
++#undef TARGET_OS_CPP_BUILTINS    
++#define TARGET_OS_CPP_BUILTINS()		\
++  do						\
++    {						\
++	builtin_define ("__GLIBC__");		\
++	builtin_define ("__NetBSD_kernel__");	\
++	builtin_define_std ("unix");		\
++	builtin_define ("__ELF__");		\
++	builtin_assert ("system=posix");	\
++	if (flag_pic)				\
++	  {					\
++	    builtin_define ("__PIC__");		\
++	    builtin_define ("__pic__");		\
++	  }					\
++    }						\
++  while (0)
++
+diff -Nur src.old/gcc/config.gcc src/gcc/config.gcc
+--- src.old/gcc/config.gcc	2004-04-29 06:42:47.000000000 +0200
++++ src/gcc/config.gcc	2004-11-29 22:01:03.000000000 +0100
+@@ -362,7 +362,7 @@
+ 
+ # Common parts for GNU/Linux, GNU/Hurd, OpenBSD, NetBSD, and FreeBSD systems.
+ case $machine in
+-*-*-linux*)
++*-*-linux* | *-*-k*bsd*-gnu)
+ 	xm_defines=POSIX
+ 	case $machine in
+ 	*-*-linux*ecoff* | *-*-linux*libc1* | *-*-linux*oldld* | *-*-linux*aout*)
+@@ -1173,15 +1173,24 @@
+ 		thread_file='single'
+ 	fi
+ 	;;
+-i[34567]86-*-linux*)	# Intel 80386's running GNU/Linux
++i[34567]86-*-linux* | i[34567]86-*-k*bsd*-gnu)
++			# Intel 80386's running GNU/Linux
+ 			# with ELF format using glibc 2
+ 			# aka GNU/Linux C library 6
+ 	tm_file="${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h svr4.h linux.h i386/linux.h"
++	case $machine in
++	*-*-kfreebsd*-gnu) tm_file="${tm_file} kfreebsd-gnu.h i386/kfreebsd-gnu.h" ;;
++	*-*-knetbsd*-gnu) tm_file="${tm_file} knetbsd-gnu.h i386/kfreebsd-gnu.h" ;;
++	esac
+ 	tmake_file="t-slibgcc-elf-ver t-linux i386/t-crtstuff"
+ 	;;
+ x86_64-*-linux*)
+ 	tm_file="${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h svr4.h linux.h \
+ 		 i386/x86-64.h i386/linux64.h"
++	case $machine in
++	*-*-kfreebsd*-gnu) tm_file="${tm_file} kfreebsd-gnu.h" ;;
++	*-*-knetbsd*-gnu) tm_file="${tm_file} knetbsd-gnu.h" ;;
++	esac
+ 	tmake_file="t-slibgcc-elf-ver t-linux i386/t-linux64"
+ 	;;
+ i[34567]86-*-gnu*)
+diff -Nur src.old/gcc/ginclude/stddef.h src/gcc/ginclude/stddef.h
+--- src.old/gcc/ginclude/stddef.h	2002-10-04 23:16:05.000000000 +0200
++++ src/gcc/ginclude/stddef.h	2004-11-29 21:59:56.000000000 +0100
+@@ -78,6 +78,8 @@
+ #define _WCHAR_T
+ #endif
+ #endif
++#endif /* defined(_ANSI_H_) || defined(_MACHINE_ANSI_H_) */
++
+ /* Undef _FOO_T_ if we are supposed to define foo_t.  */
+ #if defined (__need_ptrdiff_t) || defined (_STDDEF_H_)
+ #undef _PTRDIFF_T_
+@@ -91,7 +93,7 @@
+ #undef _WCHAR_T_
+ #undef _BSD_WCHAR_T_
+ #endif
+-#endif /* defined(_ANSI_H_) || defined(_MACHINE_ANSI_H_) */
++
+ 
+ /* Sequent's header files use _PTRDIFF_T_ in some conflicting way.
+    Just ignore it.  */
+diff -Nur src.old/libstdc++-v3/acinclude.m4 src/libstdc++-v3/acinclude.m4
+--- src.old/libstdc++-v3/acinclude.m4	2004-11-29 21:58:20.000000000 +0100
++++ src/libstdc++-v3/acinclude.m4	2004-11-29 21:59:56.000000000 +0100
+@@ -1206,7 +1206,7 @@
+   dnl Default to "generic"
+   if test x$enable_clocale_flag = xno; then
+     case x${target_os} in
+-      xlinux* | xgnu*)
++      xlinux* | xgnu* | xk*bsd*-gnu)
+ 	AC_EGREP_CPP([_GLIBCPP_ok], [
+         #include <features.h>
+         #if __GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 2) 
+@@ -1394,7 +1394,7 @@
+       # compile most of libio for linux systems.
+       if test x$has_libio = x"yes"; then
+         case "$target" in
+-          *-*-linux*)
++          *-*-linux* | *-*-gnu* | *-*-k*bsd*-gnu)
+               AC_MSG_CHECKING([for glibc version >= 2.2])
+               AC_EGREP_CPP([ok], [
+             #include <features.h>
+diff -Nur src.old/libstdc++-v3/aclocal.m4 src/libstdc++-v3/aclocal.m4
+--- src.old/libstdc++-v3/aclocal.m4	2004-05-25 08:03:52.000000000 +0200
++++ src/libstdc++-v3/aclocal.m4	2004-11-29 21:59:56.000000000 +0100
+@@ -1218,7 +1218,7 @@
+   dnl Default to "generic"
+   if test x$enable_clocale_flag = xno; then
+     case x${target_os} in
+-      xlinux* | xgnu*)
++      xlinux* | xgnu* | xk*bsd*-gnu)
+ 	AC_EGREP_CPP([_GLIBCPP_ok], [
+         #include <features.h>
+         #if __GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 2) 
+@@ -1406,7 +1406,7 @@
+       # compile most of libio for linux systems.
+       if test x$has_libio = x"yes"; then
+         case "$target" in
+-          *-*-linux*)
++          *-*-linux* | *-*-gnu* | *-*-k*bsd*-gnu)
+               AC_MSG_CHECKING([for glibc version >= 2.2])
+               AC_EGREP_CPP([ok], [
+             #include <features.h>
+diff -Nur src.old/libstdc++-v3/config/locale/gnu/c_locale.cc src/libstdc++-v3/config/locale/gnu/c_locale.cc
+--- src.old/libstdc++-v3/config/locale/gnu/c_locale.cc	2003-02-28 07:09:52.000000000 +0100
++++ src/libstdc++-v3/config/locale/gnu/c_locale.cc	2004-11-29 21:59:56.000000000 +0100
+@@ -40,6 +40,17 @@
+ 
+ namespace std 
+ {
++  extern "C" __typeof (strtol_l) __strtol_l;
++  extern "C" __typeof (strtoul_l) __strtoul_l;
++  extern "C" __typeof (strtoll_l) __strtoll_l;
++  extern "C" __typeof (strtoull_l) __strtoull_l;
++  extern "C" __typeof (strtof_l) __strtof_l;
++  extern "C" __typeof (strtod_l) __strtod_l;
++  extern "C" __typeof (strtold_l) __strtold_l;
++  extern "C" __typeof (newlocale) __newlocale;
++  extern "C" __typeof (freelocale) __freelocale;
++  extern "C" __typeof (duplocale) __duplocale;
++
+   template<>
+     void
+     __convert_to_v(const char* __s, long& __v, ios_base::iostate& __err, 
+diff -Nur src.old/libstdc++-v3/config/locale/gnu/collate_members.cc src/libstdc++-v3/config/locale/gnu/collate_members.cc
+--- src.old/libstdc++-v3/config/locale/gnu/collate_members.cc	2003-02-28 07:09:52.000000000 +0100
++++ src/libstdc++-v3/config/locale/gnu/collate_members.cc	2004-11-29 21:59:56.000000000 +0100
+@@ -38,6 +38,11 @@
+ 
+ namespace std
+ {
++  extern "C" __typeof (strcoll_l) __strcoll_l;
++  extern "C" __typeof (strxfrm_l) __strxfrm_l;
++  extern "C" __typeof (wcscoll_l) __wcscoll_l;
++  extern "C" __typeof (wcsxfrm_l) __wcsxfrm_l;
++
+   // These are basically extensions to char_traits, and perhaps should
+   // be put there instead of here.
+   template<>
+diff -Nur src.old/libstdc++-v3/config/locale/gnu/ctype_members.cc src/libstdc++-v3/config/locale/gnu/ctype_members.cc
+--- src.old/libstdc++-v3/config/locale/gnu/ctype_members.cc	2003-10-07 10:40:58.000000000 +0200
++++ src/libstdc++-v3/config/locale/gnu/ctype_members.cc	2004-11-29 21:59:56.000000000 +0100
+@@ -38,6 +38,11 @@
+ 
+ namespace std
+ {
++  extern "C" __typeof (wctype_l) __wctype_l;
++  extern "C" __typeof (towupper_l) __towupper_l;
++  extern "C" __typeof (towlower_l) __towlower_l;
++  extern "C" __typeof (iswctype_l) __iswctype_l;
++
+   // NB: The other ctype<char> specializations are in src/locale.cc and
+   // various /config/os/* files.
+   template<>
+diff -Nur src.old/libstdc++-v3/config/locale/gnu/messages_members.cc src/libstdc++-v3/config/locale/gnu/messages_members.cc
+--- src.old/libstdc++-v3/config/locale/gnu/messages_members.cc	2003-02-28 07:09:52.000000000 +0100
++++ src/libstdc++-v3/config/locale/gnu/messages_members.cc	2004-11-29 21:59:56.000000000 +0100
+@@ -38,6 +38,7 @@
+ 
+ namespace std
+ {
++  extern "C" __typeof (uselocale) __uselocale;
+   // Specializations.
+   template<>
+     string
+diff -Nur src.old/libstdc++-v3/config/locale/gnu/messages_members.h src/libstdc++-v3/config/locale/gnu/messages_members.h
+--- src.old/libstdc++-v3/config/locale/gnu/messages_members.h	2003-01-06 23:20:03.000000000 +0100
++++ src/libstdc++-v3/config/locale/gnu/messages_members.h	2004-11-29 21:59:56.000000000 +0100
+@@ -33,6 +33,8 @@
+ 
+ // Written by Benjamin Kosnik <bkoz@redhat.com>
+ 
++  extern "C" __typeof (uselocale) __uselocale;
++
+   // Non-virtual member functions.
+   template<typename _CharT>
+      messages<_CharT>::messages(size_t __refs)
+diff -Nur src.old/libstdc++-v3/config/locale/gnu/monetary_members.cc src/libstdc++-v3/config/locale/gnu/monetary_members.cc
+--- src.old/libstdc++-v3/config/locale/gnu/monetary_members.cc	2004-01-26 10:41:26.000000000 +0100
++++ src/libstdc++-v3/config/locale/gnu/monetary_members.cc	2004-11-29 21:59:56.000000000 +0100
+@@ -38,6 +38,8 @@
+ 
+ namespace std
+ {
++  extern "C" __typeof (nl_langinfo_l) __nl_langinfo_l;
++
+   // Construct and return valid pattern consisting of some combination of:
+   // space none symbol sign value
+   money_base::pattern
+diff -Nur src.old/libstdc++-v3/config/locale/gnu/numeric_members.cc src/libstdc++-v3/config/locale/gnu/numeric_members.cc
+--- src.old/libstdc++-v3/config/locale/gnu/numeric_members.cc	2003-02-28 07:09:52.000000000 +0100
++++ src/libstdc++-v3/config/locale/gnu/numeric_members.cc	2004-11-29 21:59:56.000000000 +0100
+@@ -38,6 +38,8 @@
+ 
+ namespace std
+ {
++  extern "C" __typeof (nl_langinfo_l) __nl_langinfo_l;
++
+   template<> 
+     void
+     numpunct<char>::_M_initialize_numpunct(__c_locale __cloc)
+diff -Nur src.old/libstdc++-v3/config/locale/gnu/time_members.cc src/libstdc++-v3/config/locale/gnu/time_members.cc
+--- src.old/libstdc++-v3/config/locale/gnu/time_members.cc	2003-02-28 07:09:52.000000000 +0100
++++ src/libstdc++-v3/config/locale/gnu/time_members.cc	2004-11-29 21:59:56.000000000 +0100
+@@ -39,6 +39,10 @@
+ 
+ namespace std
+ {
++  extern "C" __typeof (strftime_l) __strftime_l;
++  extern "C" __typeof (wcsftime_l) __wcsftime_l;
++  extern "C" __typeof (nl_langinfo_l) __nl_langinfo_l;
++
+   template<>
+     void
+     __timepunct<char>::
+diff -Nur src.old/libstdc++-v3/configure src/libstdc++-v3/configure
+--- src.old/libstdc++-v3/configure	2004-11-29 21:58:33.000000000 +0100
++++ src/libstdc++-v3/configure	2004-11-29 21:59:56.000000000 +0100
+@@ -2870,7 +2870,7 @@
+       # compile most of libio for linux systems.
+       if test x$has_libio = x"yes"; then
+         case "$target" in
+-          *-*-linux*)
++          *-*-linux* | *-*-gnu* | *-*-k*bsd*-gnu)
+               echo $ac_n "checking for glibc version >= 2.2""... $ac_c" 1>&6
+ echo "configure:2876: checking for glibc version >= 2.2" >&5
+               cat > conftest.$ac_ext <<EOF
+@@ -3004,7 +3004,7 @@
+ 
+       if test x$enable_clocale_flag = xno; then
+     case x${target_os} in
+-      xlinux* | xgnu*)
++      xlinux* | xgnu* | xk*bsd*-gnu)
+ 	cat > conftest.$ac_ext <<EOF
+ #line 3010 "configure"
+ #include "confdefs.h"
+@@ -4220,7 +4220,7 @@
+   # GLIBCPP_CHECK_MATH_SUPPORT
+ 
+   case "$target" in
+-    *-linux*)
++    *-linux* | *-k*bsd*-gnu | *-gnu*)
+       os_include_dir="os/gnu-linux"
+       for ac_hdr in nan.h ieeefp.h endian.h sys/isa_defs.h \
+         machine/endian.h machine/param.h sys/machine.h sys/types.h \
+diff -Nur src.old/libstdc++-v3/configure.in src/libstdc++-v3/configure.in
+--- src.old/libstdc++-v3/configure.in	2004-11-29 21:58:18.000000000 +0100
++++ src/libstdc++-v3/configure.in	2004-11-29 21:59:56.000000000 +0100
+@@ -117,7 +117,7 @@
+   # GLIBCPP_CHECK_MATH_SUPPORT
+ 
+   case "$target" in
+-    *-linux*)
++    *-linux* | *-k*bsd*-gnu | *-gnu*)
+       os_include_dir="os/gnu-linux"
+       AC_CHECK_HEADERS([nan.h ieeefp.h endian.h sys/isa_defs.h \
+         machine/endian.h machine/param.h sys/machine.h sys/types.h \
+diff -Nur src.old/libstdc++-v3/configure.target src/libstdc++-v3/configure.target
+--- src.old/libstdc++-v3/configure.target	2003-10-01 21:07:07.000000000 +0200
++++ src/libstdc++-v3/configure.target	2004-11-29 21:59:56.000000000 +0100
+@@ -151,6 +151,9 @@
+   mingw32*)
+     os_include_dir="os/mingw32"
+     ;;
++  k*bsd*-gnu)
++    os_include_dir="os/gnu-linux"
++    ;;
+   netbsd*)
+     os_include_dir="os/bsd/netbsd"
+     ;;
diff -Nur gcc-3.3-3.3.5.old/debian/rules.conf gcc-3.3-3.3.5/debian/rules.conf
--- gcc-3.3-3.3.5.old/debian/rules.conf	2004-12-21 13:31:43.000000000 +0100
+++ gcc-3.3-3.3.5/debian/rules.conf	2004-12-21 02:47:02.000000000 +0100
@@ -36,9 +36,9 @@
     endif
   endif
 endif
-
+LIBC_DEP = libc-dev
 ifndef DEB_CROSS
-LIBC_BUILD_DEP = libc6.1-dev (>= $(libc_ver)) [alpha ia64] | libc0.3-dev [hurd-i386] | libc1-dev [freebsd-i386] | libc12-dev [netbsd-i386] | libc6-dev (>= $(libc_ver))
+LIBC_BUILD_DEP = libc6.1-dev (>= $(libc_ver)) [alpha ia64] | libc0.3-dev [hurd-i386] | libc1-dev [freebsd-i386] | libc12-dev [netbsd-i386] | libc6-dev (>= $(libc_ver)) | libc-dev
 else
 # When building a cross compiler, the libc-dev build dependancy must be
 # sensitive to the target architecture; the host architecture is irrelevant.
diff -Nur gcc-3.3-3.3.5.old/debian/rules.defs gcc-3.3-3.3.5/debian/rules.defs
--- gcc-3.3-3.3.5.old/debian/rules.defs	2004-12-21 13:31:43.000000000 +0100
+++ gcc-3.3-3.3.5/debian/rules.defs	2004-12-21 03:28:02.000000000 +0100
@@ -67,8 +67,11 @@
   ifeq ($(TARGET_ALIAS),i386-gnu)
     TARGET_ALIAS := i586-gnu
   endif
-  ifeq ($(TARGET_ALIAS),i386-freebsd-gnu)
-    TARGET_ALIAS := i486-freebsd-gnu
+  ifeq ($(TARGET_ALIAS),i386-kfreebsd-gnu)
+    TARGET_ALIAS := i486-kfreebsd-gnu
+  endif
+  ifeq ($(TARGET_ALIAS),i386-knetbsd-gnu)
+    TARGET_ALIAS := i486-knetbsd-gnu
   endif
   ifeq ($(TARGET_ALIAS)-$(hammer_branch),powerpc-linux-yes)
     TARGET_ALIAS := powerpc64-linux
@@ -186,7 +189,7 @@
   with_java := yes
 endif
 
-java_no_archs := hurd-i386 mips mipsel freebsd-i386 netbsd-i386
+java_no_archs := hurd-i386 mips mipsel kfreebsd-i386 knetbsd-i386
 ifneq ($(DEB_TARGET_ARCH),i386)
   ifeq ($(DEB_TARGET_ARCH), $(findstring $(DEB_TARGET_ARCH),$(java_no_archs)))
     with_java := disabled for architecure $(DEB_TARGET_ARCH)
@@ -234,7 +237,7 @@
 # libffi -------------------
 ifeq ($(with_common_libs),yes)
   with_libffi := yes
-  no_ffi_archs := hurd-i386 freebsd-i386 netbsd-i386
+  no_ffi_archs := hurd-i386 kfreebsd-i386 knetbsd-i386
   ifneq ($(with_java),yes)
     ifneq ($(DEB_TARGET_ARCH),i386)
     ifeq ($(DEB_TARGET_ARCH), $(findstring $(DEB_TARGET_ARCH),$(no_ffi_archs)))
@@ -311,7 +314,7 @@
   with_pascal := no
 endif
 
-pascal_no_archs := netbsd-i386
+pascal_no_archs := kfreebsd-i386 knetbsd-i386
 #pascal_no_archs := netbsd-i386 arm
 ifneq ($(DEB_TARGET_ARCH),i386)
   ifeq ($(DEB_TARGET_ARCH),$(findstring $(DEB_TARGET_ARCH),$(pascal_no_archs)))
@@ -343,7 +346,7 @@
 with_objc_gc := yes
 
 # disable ObjC garbage collection library (needs libgc)
-libgc_no_archs := avr freebsd-i386
+libgc_no_archs := avr
 ifneq ($(DEB_TARGET_ARCH),i386)
   ifeq ($(DEB_TARGET_ARCH),$(findstring $(DEB_TARGET_ARCH),$(libgc_no_archs)))
     with_objc_gc := disabled for architecture $(DEB_TARGET_ARCH)
@@ -383,7 +386,7 @@
 endif
 
 with_libgnat := yes
-ada_no_archs := arm hurd-i386 m68k freebsd-i386 netbsd-i386
+ada_no_archs := arm hurd-i386 m68k kfreebsd-i386 knetbsd-i386
 ifneq ($(DEB_TARGET_ARCH),i386)
   ifeq ($(DEB_TARGET_ARCH), $(findstring $(DEB_TARGET_ARCH),$(ada_no_archs)))
     with_ada := disabled for architecure $(DEB_TARGET_ARCH)
@@ -463,7 +466,7 @@
 ifdef DEB_CROSS
   with_check := disabled for cross compiler package
 endif
-check_no_archs := hurd-i386
+check_no_archs := hurd-i386 kfreebsd-i386 knetbsd-i386
 ifneq ($(DEB_TARGET_ARCH),i386)
   ifeq ($(DEB_TARGET_ARCH), $(findstring $(DEB_TARGET_ARCH),$(check_no_archs)))
     with_check :=disabled for $(DEB_TARGET_ARCH)
diff -Nur gcc-3.3-3.3.5.old/debian/rules.patch gcc-3.3-3.3.5/debian/rules.patch
--- gcc-3.3-3.3.5.old/debian/rules.patch	2004-12-21 13:31:43.000000000 +0100
+++ gcc-3.3-3.3.5/debian/rules.patch	2004-12-21 02:49:25.000000000 +0100
@@ -121,15 +121,18 @@
   endif
 endif
 
-ifeq ($(DEB_TARGET_ARCH),freebsd-i386)
+ifeq ($(DEB_TARGET_GNU_SYSTEM),knetbsd-gnu)
   debian_patches += cpu-default-i486
 endif
-ifeq ($(DEB_TARGET_ARCH),freebsd-i386-gnu)
+ifeq ($(DEB_TARGET_GNU_SYSTEM),kfreebsd-gnu)
   debian_patches += cpu-default-i486
 endif
 
-ifeq ($(DEB_TARGET_ARCH),netbsd-i386)
-  debian_patches += netbsd-all-gcc netbsd-archs-gcc
+ifeq ($(DEB_TARGET_GNU_SYSTEM),knetbsd-gnu)
+  debian_patches += kbsd-gnu
+endif
+ifeq ($(DEB_TARGET_GNU_SYSTEM),kfreebsd-gnu)
+  debian_patches += kbsd-gnu
 endif
 
 debian_patches += reporting # applied after gcc-cvs-updates
